/* Do not remove the comments below. It's the markers used by gulp-inject to inject
   all your sass files automatically */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.form-container {
  margin: 0 auto;
  width: 40rem; }

.row {
  font-size: 0;
  position: relative; }

.form-label {
  display: inline-block;
  width: 13rem;
  text-align: right;
  font-size: 12px;
  padding: 0 1rem 0 0; }

.form-control {
  display: inline-block;
  font-size: 12px;
  width: 27rem; }

.form-extra {
  font-size: 12px;
  display: inline-block;
  padding: 0 0 0 1rem;
  position: absolute;
  left: 40rem;
  top: 0;
  white-space: nowrap; }

.btn-submit {
  display: block;
  font-size: 12px;
  margin: 0 auto; }

.extra {
  text-align: center; }

.users {
  margin: 0 auto;
  width: 40rem; }

.gravatar_edit {
  text-align: center; }

.user-info-card {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1rem;
  width: 50rem;
  margin: 0 auto;
  border: 1px solid #e1e8ed; }
  .user-info-card .info {
    padding: 0 1rem; }
  .user-info-card .card-block-btn {
    width: 100%; }
  .user-info-card .card-link-followers {
    padding: 0 1rem; }

.summary {
  padding: 1rem;
  width: 50rem;
  margin: 0 auto;
  border: 1px solid #e1e8ed; }
  .summary .user_info {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
  .summary .info {
    padding: 0 1rem; }

.userName, .email, .show-link {
  padding: 0 .2rem; }

.tweet-box[contenteditable="true"] {
  outline: none;
  border: 1px solid rgba(74, 145, 60, 0.25);
  padding: 8px 10px;
  color: #4A913C; }
  .tweet-box[contenteditable="true"].showPlaceholder:before {
    content: attr(data-placeholder-default);
    color: #ccd6dd;
    position: absolute; }

.per-row {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.follow-avatar-name {
  margin: 0 2px; }
  .user-avatars .follow-avatar-name:hover {
    background-color: initial;
    color: #333; }
  .follow-avatar-name .avatar {
    font-size: 0; }
  .follow-avatar-name .name {
    text-align: center; }

.user-avatars {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.navbar {
  height: 3em; }

html {
  box-sizing: border-box; }
  html * {
    box-sizing: border-box; }

body {
  background-color: white; }

.hide {
  display: none; }

.center {
  text-align: center; }

.user-link {
  display: inline-block;
  font-size: 0; }

.nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .nav .static-links,
  .nav .user-links {
    padding: 0 2rem; }
  .nav .first-layer {
    display: inline-block;
    vertical-align: top; }
  .nav .dropdown {
    position: relative; }
  .nav .dropdown-menu {
    display: none;
    position: absolute;
    list-style: square;
    padding: 0 0 0 1em;
    background-color: #fff; }
    .nav .dropdown-menu.show {
      display: inline-block; }
  .nav .dropdown-per-li {
    text-indent: -5px; }

.alert-success {
  background-color: #7FFFD4;
  color: #fff; }

.alert-danger {
  background-color: #B22222;
  color: #fff; }

.alert-info {
  background-color: #E6E6FA; }

.new-post,
.profile-post {
  font-size: 12px; }

.new-post-text {
  outline: none;
  width: 100%;
  max-width: 100%; }

.new-post-toolbar {
  text-align: center; }
  .new-post-toolbar .btn-submit {
    display: inline-block; }

.feeds {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.microposts {
  padding: 0;
  width: 50rem;
  border: 1px solid #e1e8ed; }

.micropost {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid #e1e8ed;
  padding: .8rem 1rem; }
  .micropost:first-child {
    border-top: none; }
  .micropost .avatar-section {
    -webkit-flex-basis: 5rem;
        -ms-flex-preferred-size: 5rem;
            flex-basis: 5rem;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: start;
    -webkit-align-items: flex-start;
        -ms-flex-align: start;
            align-items: flex-start;
    font-size: 0; }
  .micropost .content {
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }
  .micropost .micropost-img {
    max-height: 665px;
    overflow: hidden; }

html {
  font-size: 12px; }

body {
  font-family: verdana, arial, helvetica, sans-serif; }

p, ol, ul, td {
  font-family: verdana, arial, helvetica, sans-serif; }

pre {
  background-color: #eee;
  padding: 10px; }

a {
  color: #000; }
  a:visited {
    color: #666; }
  a:hover {
    color: #fff;
    background-color: #000; }

div.field, div.actions {
  margin-bottom: 10px; }

#notice {
  color: green; }

.alert {
  font-size: 12px;
  padding: .5rem 1.5rem; }

.field_with_errors {
  background-color: red;
  display: inline-block; }

.pagination {
  text-align: center; }
  .pagination li {
    display: inline; }

#error_explanation {
  border: 2px solid red;
  padding: 7px;
  padding-bottom: 0;
  margin-bottom: 20px;
  background-color: #f0f0f0; }
  #error_explanation h2 {
    text-align: left;
    font-weight: bold;
    padding: 5px 5px 5px 15px;
    font-size: 12px;
    margin: -7px;
    margin-bottom: 0px;
    background-color: #c00;
    color: #fff; }
  #error_explanation ul li {
    font-size: 12px;
    list-style: square; }

.add-dataroot-child, .del-dataroot-child, .leaf .remove-child, .leaf .add-child {
  border-radius: 50% 50%;
  color: #FFF;
  height: 1.2em;
  width: 1.2em;
  line-height: 1.2em;
  font-size: 12px;
  text-align: center;
  display: inline-block;
  cursor: pointer; }

/** use border-box globally. */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

.json pre {
  outline: 1px solid #ccc;
  padding: 5px;
  margin: 5px;
  white-space: pre; }

.json .string {
  color: green; }

.json .number {
  color: darkorange; }

.json .boolean {
  color: blue; }

.json .null {
  color: magenta; }

.json .key {
  color: red; }

.add-api {
  border-bottom: 1px solid #ddd;
  padding: 5px 10px;
  margin: 0 0 1em 0; }

.per-api {
  padding: 0 0 0 0;
  margin: 0 0 2em 0;
  border-bottom: 1px solid #ddd;
  box-shadow: 0 5px 4px -5px purple; }

.api-edit, .api-save, .api-test, .data-raw, .data-beautify, .data-highlight, .data-preview {
  border: 1px solid #ddd;
  padding: 0 10px;
  margin: 0 1em 0 0;
  cursor: pointer; }

.api-uri:disabled {
  background-color: #ddd; }

.api-tree-wrapper {
  position: relative;
  overflow-x: auto;
  overflow-y: hidden; }

.api-tree {
  position: relative;
  padding: .3em 0 0 62px; }

.api-svg {
  position: absolute;
  margin: 0 0 0 -30px; }
  .api-svg:not(:root) {
    overflow: visible; }
  .api-svg .api-svg-path {
    stroke: purple;
    stroke-width: 1;
    fill: transparent; }

i {
  cursor: pointer; }

.layer {
  margin: 0 0 1em 0;
  width: 23em;
  border-right: 1px solid #ddd; }

.add-dataroot-child {
  position: absolute;
  top: .5em;
  left: .8em;
  background-color: green; }

.del-dataroot-child {
  position: absolute;
  top: 36px;
  left: .8em;
  background-color: red; }

.leaf {
  display: inline-block;
  height: 22px;
  width: 469px;
  padding: 0 .5em;
  position: absolute;
  margin: 0 0 1.3em 0;
  white-space: nowrap;
  text-align: center;
  font-size: 0;
  font-size: 0; }
  .leaf > input {
    display: inline-block;
    vertical-align: top; }
  .leaf > i {
    display: inline-block;
    vertical-align: top; }
  .leaf .remove-child {
    background-color: #F00;
    margin: 2px .2em 0 0; }
  .leaf input, .leaf i {
    font-size: 12px; }
  .leaf input {
    width: 130px;
    height: 20px; }
  .leaf i {
    width: 20px; }
  .leaf .add-child {
    background-color: blue;
    margin: 2px 0 0 .2em; }
  .leaf .leaf-key {
    padding: 0 1em; }
  .leaf .add-sibling {
    position: absolute;
    top: 130%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }

/*# sourceMappingURL=data:application/json;base64, */
