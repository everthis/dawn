$bg-round:
  linear-gradient(#58595d, #7f8084, #a5a6aa) content-box, 
  radial-gradient(rgba(#cbcbcb, 0) 63%, #cbcbcb 65%) padding-box, 
  linear-gradient(#a6a7ab, #818284) padding-box;
$v: 50 32;

$data: (
  n: 3 3 2, 
  track: (
    border-width: null null (false null 0), 
    width: 8em 6.25em 22.5em, 
    height: .375em .5em (false .375em .25em), 
    border-radius: .625em .5em (false .375em .25em), 
    box-shadow: 
      (0 1px 1px #f9f9f9, inset 0 1px .125em #888) 
      (inset -.125em 0 .125em #858585) 
      (
        false 
        (0 1px 1px #ebebed, inset 0 1px .125em #777)
        (0 1px 1px #f4f3f2, inset 0 1px 1px #7e7f80)
      ),
    background: 
      (false #b0b1b5 #aaabaf #d4d5d9)
      (false #ebbfba #b5cad1 #cfd0d2) 
      (false #b2b3b6 #bcbdbe), 
    border-color: 
      (false #8e8f91 #8c8c8f #b4b5b7)
      rgba(#5e505f, .5) 
      (false #838385 #bcbdbe)
  ),
  thumb: (
    border-color: 
      (false #5b5b5b #585858 #333335)
      #454547 
      (false #202020 #323232), 
    padding: (false .25em .25em null) null null, 
    width: (false 1em 1em 2.5em) 2.5em (false 2.25em 2.875em), 
    height: (false 1em 1em .625em) .625em (false .375em .625em), 
    border-radius: (false 1em 1em .625em) .625em (false .375em .625em), 
    box-shadow: 
      (inset 0 1px .125em #b6b6b8, 0 .125em .125em #7a7a7a)
      (-.25em 0 .125em rgba(#b9babc, .9), inset -1px 0 1px #c9c9c9) 
      (
        false
        (inset 0 1px #eaebef)
        (inset 0 1px 1px #b5b6ba, 0 .125em .125em #7a7a7a)
      ), 
    background: 
      (
        false 
        ($bg-round)
        ($bg-round)
        (
          linear-gradient(to right top, #303133 50%, transparent 50%) 
            no-repeat 85% 0, 
          linear-gradient(to right bottom, #303133 50%, transparent 50%) 
            no-repeat 85% .25em, 
          linear-gradient(to right top, #c7c7c7 50%, transparent 50%) 
            no-repeat 85% .0625em, 
          linear-gradient(to right bottom, #c7c7c7 50%, transparent 50%) 
            no-repeat 85% .3125em, 
          linear-gradient(#848589, #707175)
        )
      )
      (
        repeating-linear-gradient(90deg, #535458, #535458 1px, 
            transparent 1px, transparent 2px) no-repeat 50% 50%, 
        linear-gradient(90deg, #818284, #9a9ba0)
      )
      (
        false
        linear-gradient(#e0e1e3, #f2f3f5) 
        linear-gradient(#909195, #7d7e82)
      ), 
    background-size: 
      (
        false
        null
        null
        (.25em .25em, .25em .25em, .25em .25em, .25em .25em, 100% 100%)
      )
      (7px 65%, 100% 100%) 
      null, 
    cursor: ew-resize ns-resize ew-resize
  ), 
  fill: (
    height: .375em .25em, 
    border-radius: .1875em .125em, 
    background-image: 
      linear-gradient(#fdfdff 1px, #e5e5e7 1px, #dfdfe1)
      null, 
    background-color: null #b1d2db
  )
);

@mixin comp-base() {
  box-sizing: border-box;
  border: solid 1px transparent;
}

@mixin comp($comp: track, $s-idx: 1)  {
  $map: map-get($data, $comp);
  
  @each $prop, $val in $map {
    $c-val: nth($val, $s-idx);
    
    @if nth($c-val, 1) != false {
      #{$prop}: $c-val;
    }
  }
}

@mixin comp-i($comp: track, $s-idx: 1, $i: 1) {
  $map: map-get($data, $comp);
  
  @each $prop, $val in $map {
    $c-val: nth($val, $s-idx);
    
    @if nth($c-val, 1) == false {
      #{$prop}: nth($c-val, $i + 1);
    }
  }
}

html, body { height: 100%; }

body, section { display: flex; }

body, .fc { flex-direction: column; }

body {
  justify-content: space-around;
  margin: 0;
  background: #e7e7e7;
}

section {
  justify-content: center;
}

.fc {
  padding: 1.5em;
  
  @for $i from 1 through 3 {
    $n: nth(map-get($data, n), $i);
      
    &--#{$i} {
      @if $i == 2 { transform: rotate(-90deg); }
      
      input[type='range'] {
        width: nth(map-get(map-get($data, track), width), $i);
        
        &::-webkit-slider-runnable-track {
          @include comp(track, $i);
        }
        &::-moz-range-track {
          @include comp(track, $i);
        }
        &::-ms-track {
          @include comp(track, $i);
        }
        
        &::-webkit-slider-thumb {
          @include comp(thumb, $i);
        }
        &::-moz-range-thumb {
          @include comp(thumb, $i);
        }
        &::-ms-thumb {
          @include comp(thumb, $i);
        }
                
        @for $j from 1 through $n {
          &:nth-of-type(#{$j}) {
            &::-webkit-slider-runnable-track {
              @include comp-i(track, $i, $j);
            }
            &::-moz-range-track {
              @include comp-i(track, $i, $j);
            }
            &::-ms-track {
              @include comp-i(track, $i, $j);
            }
            
            &::-webkit-slider-thumb {
              $h1: nth(map-get(map-get($data, track), height), $i);
              $h2: nth(map-get(map-get($data, thumb), height), $i);
              @if nth($h1, 1) == false {
                $h1: nth($h1, $j + 1);
              }
              @if nth($h2, 1) == false {
                $h2: nth($h2, $j + 1);
              }
              
              margin-top: ($h1 - $h2 - .125em)/2;
              @include comp-i(thumb, $i, $j);
            }
            &::-moz-range-thumb {
              @include comp-i(thumb, $i, $j);
            }
            &::-ms-thumb {
              @include comp-i(thumb, $i, $j);
            }
          }
        }
      }
    }
  }
}

input[type='range'] {
  &, 
  &::-webkit-slider-runnable-track, 
  &::-webkit-slider-thumb {
    -webkit-appearance: none;
  }
  
  align-self: center;
  margin: .5em;
  border: solid 1em transparent;
  padding: 0;
  height: 1.5em;
  border-radius: .25em;
  background: transparent;
  font-size: 1em;
  cursor: pointer;
  
  &::-webkit-slider-runnable-track, 
  &::-webkit-slider-thumb {
    @include comp-base();
  }
  &::-moz-range-track, 
  &::-moz-range-thumb, 
  &::-moz-range-progress {
    @include comp-base();
  }
  &::-ms-track, 
  &::-ms-thumb, 
  &::-ms-fill-lower {
    @include comp-base();
    color: transparent;
  }
  
  &::-ms-fill-lower {
    background: transparent;
  }
  
  &::-ms-tooltip { display: none; }
  
  @for $i from 1 through 2 {
    @at-root {
      .js #rf#{$i}::-webkit-slider-runnable-track {
        $fm: map-get($data, fill);
        $img: nth(map-get($fm, background-image), $i);
        
        @if $img == null {
          $img: nth(map-get($fm, background-color), $i);
          $img: linear-gradient($img, $img);
        }
        
        background-image: $img;
        background-repeat: no-repeat;
        background-size: nth($v, $i)*1% 100%;
      }
    }
    
    &[id='rf#{$i}'] {
      &::-moz-range-progress {
        @include comp(fill, $i);
        background-clip: padding-box;
      }
      &::-ms-fill-lower {
        @include comp(fill, $i);
        background-clip: padding-box;
      }
    }
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 .125em dimgrey;
  }
}