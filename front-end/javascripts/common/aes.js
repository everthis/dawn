/*! Gibberish-AES (c) 2008 Mark Percival https://github.com/mdp/gibberish-aes License: MIT */
deferred('$lib/gibberish-aes.js', function() {
(function(a) {
        var b = function() {
            var a = 14
              , c = 8
              , d = !1
              , e = function(a) {
                try {
                    return unescape(encodeURIComponent(a))
                } catch (b) {
                    throw "Error on UTF-8 encode"
                }
            }
              , f = function(a) {
                try {
                    return decodeURIComponent(escape(a))
                } catch (b) {
                    throw "Bad Key"
                }
            }
              , g = function(a) {
                var b = [], c, d;
                a.length < 16 && (c = 16 - a.length,
                b = [c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c]);
                for (d = 0; d < a.length; d++)
                    b[d] = a[d];
                return b
            }
              , h = function(a, b) {
                var c = "", d, e;
                if (b) {
                    d = a[15];
                    if (d > 16)
                        throw "Decryption error: Maybe bad key";
                    if (d == 16)
                        return "";
                    for (e = 0; e < 16 - d; e++)
                        c += String.fromCharCode(a[e])
                } else
                    for (e = 0; e < 16; e++)
                        c += String.fromCharCode(a[e]);
                return c
            }
              , i = function(a) {
                var b = "", c;
                for (c = 0; c < a.length; c++)
                    b += (a[c] < 16 ? "0" : "") + a[c].toString(16);
                return b
            }
              , j = function(a) {
                var b = [];
                return a.replace(/(..)/g, function(a) {
                    b.push(parseInt(a, 16))
                }),
                b
            }
              , k = function(a) {
                a = e(a);
                var b = [], c;
                for (c = 0; c < a.length; c++)
                    b[c] = a.charCodeAt(c);
                return b
            }
              , l = function(b) {
                switch (b) {
                case 128:
                    a = 10,
                    c = 4;
                    break;
                case 192:
                    a = 12,
                    c = 6;
                    break;
                case 256:
                    a = 14,
                    c = 8;
                    break;
                default:
                    throw "Invalid Key Size Specified:" + b
                }
            }
              , m = function(a) {
                var b = [], c;
                for (c = 0; c < a; c++)
                    b = b.concat(Math.floor(Math.random() * 256));
                return b
            }
              , n = function(d, e) {
                var f = a >= 12 ? 3 : 2, g = [], h = [], i = [], j = [], k = d.concat(e), l;
                i[0] = b.Hash.MD5(k),
                j = i[0];
                for (l = 1; l < f; l++)
                    i[l] = b.Hash.MD5(i[l - 1].concat(k)),
                    j = j.concat(i[l]);
                return g = j.slice(0, 4 * c),
                h = j.slice(4 * c, 4 * c + 16),
                {
                    key: g,
                    iv: h
                }
            }
              , o = function(a, b, c) {
                b = x(b);
                var d = Math.ceil(a.length / 16), e = [], f, h = [];
                for (f = 0; f < d; f++)
                    e[f] = g(a.slice(f * 16, f * 16 + 16));
                a.length % 16 === 0 && (e.push([16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16]),
                d++);
                for (f = 0; f < e.length; f++)
                    e[f] = f === 0 ? w(e[f], c) : w(e[f], h[f - 1]),
                    h[f] = q(e[f], b);
                return h
            }
              , p = function(a, b, c, d) {
                b = x(b);
                var e = a.length / 16, g = [], i, j = [], k = "";
                for (i = 0; i < e; i++)
                    g.push(a.slice(i * 16, (i + 1) * 16));
                for (i = g.length - 1; i >= 0; i--)
                    j[i] = r(g[i], b),
                    j[i] = i === 0 ? w(j[i], c) : w(j[i], g[i - 1]);
                for (i = 0; i < e - 1; i++)
                    k += h(j[i]);
                return k += h(j[i], !0),
                d ? k : f(k)
            }
              , q = function(b, c) {
                d = !1;
                var e = v(b, c, 0), f;
                for (f = 1; f < a + 1; f++)
                    e = s(e),
                    e = t(e),
                    f < a && (e = u(e)),
                    e = v(e, c, f);
                return e
            }
              , r = function(b, c) {
                d = !0;
                var e = v(b, c, a), f;
                for (f = a - 1; f > -1; f--)
                    e = t(e),
                    e = s(e),
                    e = v(e, c, f),
                    f > 0 && (e = u(e));
                return e
            }
              , s = function(a) {
                var b = d ? B : A, c = [], e;
                for (e = 0; e < 16; e++)
                    c[e] = b[a[e]];
                return c
            }
              , t = function(a) {
                var b = [], c = d ? [0, 13, 10, 7, 4, 1, 14, 11, 8, 5, 2, 15, 12, 9, 6, 3] : [0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11], e;
                for (e = 0; e < 16; e++)
                    b[e] = a[c[e]];
                return b
            }
              , u = function(a) {
                var b = [], c;
                if (!d)
                    for (c = 0; c < 4; c++)
                        b[c * 4] = D[a[c * 4]] ^ E[a[1 + c * 4]] ^ a[2 + c * 4] ^ a[3 + c * 4],
                        b[1 + c * 4] = a[c * 4] ^ D[a[1 + c * 4]] ^ E[a[2 + c * 4]] ^ a[3 + c * 4],
                        b[2 + c * 4] = a[c * 4] ^ a[1 + c * 4] ^ D[a[2 + c * 4]] ^ E[a[3 + c * 4]],
                        b[3 + c * 4] = E[a[c * 4]] ^ a[1 + c * 4] ^ a[2 + c * 4] ^ D[a[3 + c * 4]];
                else
                    for (c = 0; c < 4; c++)
                        b[c * 4] = I[a[c * 4]] ^ G[a[1 + c * 4]] ^ H[a[2 + c * 4]] ^ F[a[3 + c * 4]],
                        b[1 + c * 4] = F[a[c * 4]] ^ I[a[1 + c * 4]] ^ G[a[2 + c * 4]] ^ H[a[3 + c * 4]],
                        b[2 + c * 4] = H[a[c * 4]] ^ F[a[1 + c * 4]] ^ I[a[2 + c * 4]] ^ G[a[3 + c * 4]],
                        b[3 + c * 4] = G[a[c * 4]] ^ H[a[1 + c * 4]] ^ F[a[2 + c * 4]] ^ I[a[3 + c * 4]];
                return b
            }
              , v = function(a, b, c) {
                var d = [], e;
                for (e = 0; e < 16; e++)
                    d[e] = a[e] ^ b[c][e];
                return d
            }
              , w = function(a, b) {
                var c = [], d;
                for (d = 0; d < 16; d++)
                    c[d] = a[d] ^ b[d];
                return c
            }
              , x = function(b) {
                var d = [], e = [], f, g, h, i = [], j;
                for (f = 0; f < c; f++)
                    g = [b[4 * f], b[4 * f + 1], b[4 * f + 2], b[4 * f + 3]],
                    d[f] = g;
                for (f = c; f < 4 * (a + 1); f++) {
                    d[f] = [];
                    for (h = 0; h < 4; h++)
                        e[h] = d[f - 1][h];
                    f % c === 0 ? (e = y(z(e)),
                    e[0] ^= C[f / c - 1]) : c > 6 && f % c == 4 && (e = y(e));
                    for (h = 0; h < 4; h++)
                        d[f][h] = d[f - c][h] ^ e[h]
                }
                for (f = 0; f < a + 1; f++) {
                    i[f] = [];
                    for (j = 0; j < 4; j++)
                        i[f].push(d[f * 4 + j][0], d[f * 4 + j][1], d[f * 4 + j][2], d[f * 4 + j][3])
                }
                return i
            }
              , y = function(a) {
                for (var b = 0; b < 4; b++)
                    a[b] = A[a[b]];
                return a
            }
              , z = function(a) {
                var b = a[0], c;
                for (c = 0; c < 4; c++)
                    a[c] = a[c + 1];
                return a[3] = b,
                a
            }
              , A = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]
              , B = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125]
              , C = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145]
              , D = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 27, 25, 31, 29, 19, 17, 23, 21, 11, 9, 15, 13, 3, 1, 7, 5, 59, 57, 63, 61, 51, 49, 55, 53, 43, 41, 47, 45, 35, 33, 39, 37, 91, 89, 95, 93, 83, 81, 87, 85, 75, 73, 79, 77, 67, 65, 71, 69, 123, 121, 127, 125, 115, 113, 119, 117, 107, 105, 111, 109, 99, 97, 103, 101, 155, 153, 159, 157, 147, 145, 151, 149, 139, 137, 143, 141, 131, 129, 135, 133, 187, 185, 191, 189, 179, 177, 183, 181, 171, 169, 175, 173, 163, 161, 167, 165, 219, 217, 223, 221, 211, 209, 215, 213, 203, 201, 207, 205, 195, 193, 199, 197, 251, 249, 255, 253, 243, 241, 247, 245, 235, 233, 239, 237, 227, 225, 231, 229]
              , E = [0, 3, 6, 5, 12, 15, 10, 9, 24, 27, 30, 29, 20, 23, 18, 17, 48, 51, 54, 53, 60, 63, 58, 57, 40, 43, 46, 45, 36, 39, 34, 33, 96, 99, 102, 101, 108, 111, 106, 105, 120, 123, 126, 125, 116, 119, 114, 113, 80, 83, 86, 85, 92, 95, 90, 89, 72, 75, 78, 77, 68, 71, 66, 65, 192, 195, 198, 197, 204, 207, 202, 201, 216, 219, 222, 221, 212, 215, 210, 209, 240, 243, 246, 245, 252, 255, 250, 249, 232, 235, 238, 237, 228, 231, 226, 225, 160, 163, 166, 165, 172, 175, 170, 169, 184, 187, 190, 189, 180, 183, 178, 177, 144, 147, 150, 149, 156, 159, 154, 153, 136, 139, 142, 141, 132, 135, 130, 129, 155, 152, 157, 158, 151, 148, 145, 146, 131, 128, 133, 134, 143, 140, 137, 138, 171, 168, 173, 174, 167, 164, 161, 162, 179, 176, 181, 182, 191, 188, 185, 186, 251, 248, 253, 254, 247, 244, 241, 242, 227, 224, 229, 230, 239, 236, 233, 234, 203, 200, 205, 206, 199, 196, 193, 194, 211, 208, 213, 214, 223, 220, 217, 218, 91, 88, 93, 94, 87, 84, 81, 82, 67, 64, 69, 70, 79, 76, 73, 74, 107, 104, 109, 110, 103, 100, 97, 98, 115, 112, 117, 118, 127, 124, 121, 122, 59, 56, 61, 62, 55, 52, 49, 50, 35, 32, 37, 38, 47, 44, 41, 42, 11, 8, 13, 14, 7, 4, 1, 2, 19, 16, 21, 22, 31, 28, 25, 26]
              , F = [0, 9, 18, 27, 36, 45, 54, 63, 72, 65, 90, 83, 108, 101, 126, 119, 144, 153, 130, 139, 180, 189, 166, 175, 216, 209, 202, 195, 252, 245, 238, 231, 59, 50, 41, 32, 31, 22, 13, 4, 115, 122, 97, 104, 87, 94, 69, 76, 171, 162, 185, 176, 143, 134, 157, 148, 227, 234, 241, 248, 199, 206, 213, 220, 118, 127, 100, 109, 82, 91, 64, 73, 62, 55, 44, 37, 26, 19, 8, 1, 230, 239, 244, 253, 194, 203, 208, 217, 174, 167, 188, 181, 138, 131, 152, 145, 77, 68, 95, 86, 105, 96, 123, 114, 5, 12, 23, 30, 33, 40, 51, 58, 221, 212, 207, 198, 249, 240, 235, 226, 149, 156, 135, 142, 177, 184, 163, 170, 236, 229, 254, 247, 200, 193, 218, 211, 164, 173, 182, 191, 128, 137, 146, 155, 124, 117, 110, 103, 88, 81, 74, 67, 52, 61, 38, 47, 16, 25, 2, 11, 215, 222, 197, 204, 243, 250, 225, 232, 159, 150, 141, 132, 187, 178, 169, 160, 71, 78, 85, 92, 99, 106, 113, 120, 15, 6, 29, 20, 43, 34, 57, 48, 154, 147, 136, 129, 190, 183, 172, 165, 210, 219, 192, 201, 246, 255, 228, 237, 10, 3, 24, 17, 46, 39, 60, 53, 66, 75, 80, 89, 102, 111, 116, 125, 161, 168, 179, 186, 133, 140, 151, 158, 233, 224, 251, 242, 205, 196, 223, 214, 49, 56, 35, 42, 21, 28, 7, 14, 121, 112, 107, 98, 93, 84, 79, 70]
              , G = [0, 11, 22, 29, 44, 39, 58, 49, 88, 83, 78, 69, 116, 127, 98, 105, 176, 187, 166, 173, 156, 151, 138, 129, 232, 227, 254, 245, 196, 207, 210, 217, 123, 112, 109, 102, 87, 92, 65, 74, 35, 40, 53, 62, 15, 4, 25, 18, 203, 192, 221, 214, 231, 236, 241, 250, 147, 152, 133, 142, 191, 180, 169, 162, 246, 253, 224, 235, 218, 209, 204, 199, 174, 165, 184, 179, 130, 137, 148, 159, 70, 77, 80, 91, 106, 97, 124, 119, 30, 21, 8, 3, 50, 57, 36, 47, 141, 134, 155, 144, 161, 170, 183, 188, 213, 222, 195, 200, 249, 242, 239, 228, 61, 54, 43, 32, 17, 26, 7, 12, 101, 110, 115, 120, 73, 66, 95, 84, 247, 252, 225, 234, 219, 208, 205, 198, 175, 164, 185, 178, 131, 136, 149, 158, 71, 76, 81, 90, 107, 96, 125, 118, 31, 20, 9, 2, 51, 56, 37, 46, 140, 135, 154, 145, 160, 171, 182, 189, 212, 223, 194, 201, 248, 243, 238, 229, 60, 55, 42, 33, 16, 27, 6, 13, 100, 111, 114, 121, 72, 67, 94, 85, 1, 10, 23, 28, 45, 38, 59, 48, 89, 82, 79, 68, 117, 126, 99, 104, 177, 186, 167, 172, 157, 150, 139, 128, 233, 226, 255, 244, 197, 206, 211, 216, 122, 113, 108, 103, 86, 93, 64, 75, 34, 41, 52, 63, 14, 5, 24, 19, 202, 193, 220, 215, 230, 237, 240, 251, 146, 153, 132, 143, 190, 181, 168, 163]
              , H = [0, 13, 26, 23, 52, 57, 46, 35, 104, 101, 114, 127, 92, 81, 70, 75, 208, 221, 202, 199, 228, 233, 254, 243, 184, 181, 162, 175, 140, 129, 150, 155, 187, 182, 161, 172, 143, 130, 149, 152, 211, 222, 201, 196, 231, 234, 253, 240, 107, 102, 113, 124, 95, 82, 69, 72, 3, 14, 25, 20, 55, 58, 45, 32, 109, 96, 119, 122, 89, 84, 67, 78, 5, 8, 31, 18, 49, 60, 43, 38, 189, 176, 167, 170, 137, 132, 147, 158, 213, 216, 207, 194, 225, 236, 251, 246, 214, 219, 204, 193, 226, 239, 248, 245, 190, 179, 164, 169, 138, 135, 144, 157, 6, 11, 28, 17, 50, 63, 40, 37, 110, 99, 116, 121, 90, 87, 64, 77, 218, 215, 192, 205, 238, 227, 244, 249, 178, 191, 168, 165, 134, 139, 156, 145, 10, 7, 16, 29, 62, 51, 36, 41, 98, 111, 120, 117, 86, 91, 76, 65, 97, 108, 123, 118, 85, 88, 79, 66, 9, 4, 19, 30, 61, 48, 39, 42, 177, 188, 171, 166, 133, 136, 159, 146, 217, 212, 195, 206, 237, 224, 247, 250, 183, 186, 173, 160, 131, 142, 153, 148, 223, 210, 197, 200, 235, 230, 241, 252, 103, 106, 125, 112, 83, 94, 73, 68, 15, 2, 21, 24, 59, 54, 33, 44, 12, 1, 22, 27, 56, 53, 34, 47, 100, 105, 126, 115, 80, 93, 74, 71, 220, 209, 198, 203, 232, 229, 242, 255, 180, 185, 174, 163, 128, 141, 154, 151]
              , I = [0, 14, 28, 18, 56, 54, 36, 42, 112, 126, 108, 98, 72, 70, 84, 90, 224, 238, 252, 242, 216, 214, 196, 202, 144, 158, 140, 130, 168, 166, 180, 186, 219, 213, 199, 201, 227, 237, 255, 241, 171, 165, 183, 185, 147, 157, 143, 129, 59, 53, 39, 41, 3, 13, 31, 17, 75, 69, 87, 89, 115, 125, 111, 97, 173, 163, 177, 191, 149, 155, 137, 135, 221, 211, 193, 207, 229, 235, 249, 247, 77, 67, 81, 95, 117, 123, 105, 103, 61, 51, 33, 47, 5, 11, 25, 23, 118, 120, 106, 100, 78, 64, 82, 92, 6, 8, 26, 20, 62, 48, 34, 44, 150, 152, 138, 132, 174, 160, 178, 188, 230, 232, 250, 244, 222, 208, 194, 204, 65, 79, 93, 83, 121, 119, 101, 107, 49, 63, 45, 35, 9, 7, 21, 27, 161, 175, 189, 179, 153, 151, 133, 139, 209, 223, 205, 195, 233, 231, 245, 251, 154, 148, 134, 136, 162, 172, 190, 176, 234, 228, 246, 248, 210, 220, 206, 192, 122, 116, 102, 104, 66, 76, 94, 80, 10, 4, 22, 24, 50, 60, 46, 32, 236, 226, 240, 254, 212, 218, 200, 198, 156, 146, 128, 142, 164, 170, 184, 182, 12, 2, 16, 30, 52, 58, 40, 38, 124, 114, 96, 110, 68, 74, 88, 86, 55, 57, 43, 37, 15, 1, 19, 29, 71, 73, 91, 85, 127, 113, 99, 109, 215, 217, 203, 197, 239, 225, 243, 253, 167, 169, 187, 181, 159, 145, 131, 141]
              , J = function(a, b, c) {
                var d = m(8), e = n(k(b), d), f = e.key, g = e.iv, h, i = [[83, 97, 108, 116, 101, 100, 95, 95].concat(d)];
                return c || (a = k(a)),
                h = o(a, f, g),
                h = i.concat(h),
                M.encode(h)
            }
              , K = function(a, b, c) {
                var d = M.decode(a)
                  , e = d.slice(8, 16)
                  , f = n(k(b), e)
                  , g = f.key
                  , h = f.iv;
                return d = d.slice(16, d.length),
                a = p(d, g, h, c),
                a
            }
              , L = function(a) {
                function b(a, b) {
                    return a << b | a >>> 32 - b
                }
                function c(a, b) {
                    var c, d, e, f, g;
                    return e = a & 2147483648,
                    f = b & 2147483648,
                    c = a & 1073741824,
                    d = b & 1073741824,
                    g = (a & 1073741823) + (b & 1073741823),
                    c & d ? g ^ 2147483648 ^ e ^ f : c | d ? g & 1073741824 ? g ^ 3221225472 ^ e ^ f : g ^ 1073741824 ^ e ^ f : g ^ e ^ f
                }
                function d(a, b, c) {
                    return a & b | ~a & c
                }
                function e(a, b, c) {
                    return a & c | b & ~c
                }
                function f(a, b, c) {
                    return a ^ b ^ c
                }
                function g(a, b, c) {
                    return b ^ (a | ~c)
                }
                function h(a, e, f, g, h, i, j) {
                    return a = c(a, c(c(d(e, f, g), h), j)),
                    c(b(a, i), e)
                }
                function i(a, d, f, g, h, i, j) {
                    return a = c(a, c(c(e(d, f, g), h), j)),
                    c(b(a, i), d)
                }
                function j(a, d, e, g, h, i, j) {
                    return a = c(a, c(c(f(d, e, g), h), j)),
                    c(b(a, i), d)
                }
                function k(a, d, e, f, h, i, j) {
                    return a = c(a, c(c(g(d, e, f), h), j)),
                    c(b(a, i), d)
                }
                function l(a) {
                    var b, c = a.length, d = c + 8, e = (d - d % 64) / 64, f = (e + 1) * 16, g = [], h = 0, i = 0;
                    while (i < c)
                        b = (i - i % 4) / 4,
                        h = i % 4 * 8,
                        g[b] = g[b] | a[i] << h,
                        i++;
                    return b = (i - i % 4) / 4,
                    h = i % 4 * 8,
                    g[b] = g[b] | 128 << h,
                    g[f - 2] = c << 3,
                    g[f - 1] = c >>> 29,
                    g
                }
                function m(a) {
                    var b, c, d = [];
                    for (c = 0; c <= 3; c++)
                        b = a >>> c * 8 & 255,
                        d = d.concat(b);
                    return d
                }
                var n = [], o, p, q, r, s, t, u, v, w, x = 7, y = 12, z = 17, A = 22, B = 5, C = 9, D = 14, E = 20, F = 4, G = 11, H = 16, I = 23, J = 6, K = 10, L = 15, M = 21;
                n = l(a),
                t = 1732584193,
                u = 4023233417,
                v = 2562383102,
                w = 271733878;
                for (o = 0; o < n.length; o += 16)
                    p = t,
                    q = u,
                    r = v,
                    s = w,
                    t = h(t, u, v, w, n[o + 0], x, 3614090360),
                    w = h(w, t, u, v, n[o + 1], y, 3905402710),
                    v = h(v, w, t, u, n[o + 2], z, 606105819),
                    u = h(u, v, w, t, n[o + 3], A, 3250441966),
                    t = h(t, u, v, w, n[o + 4], x, 4118548399),
                    w = h(w, t, u, v, n[o + 5], y, 1200080426),
                    v = h(v, w, t, u, n[o + 6], z, 2821735955),
                    u = h(u, v, w, t, n[o + 7], A, 4249261313),
                    t = h(t, u, v, w, n[o + 8], x, 1770035416),
                    w = h(w, t, u, v, n[o + 9], y, 2336552879),
                    v = h(v, w, t, u, n[o + 10], z, 4294925233),
                    u = h(u, v, w, t, n[o + 11], A, 2304563134),
                    t = h(t, u, v, w, n[o + 12], x, 1804603682),
                    w = h(w, t, u, v, n[o + 13], y, 4254626195),
                    v = h(v, w, t, u, n[o + 14], z, 2792965006),
                    u = h(u, v, w, t, n[o + 15], A, 1236535329),
                    t = i(t, u, v, w, n[o + 1], B, 4129170786),
                    w = i(w, t, u, v, n[o + 6], C, 3225465664),
                    v = i(v, w, t, u, n[o + 11], D, 643717713),
                    u = i(u, v, w, t, n[o + 0], E, 3921069994),
                    t = i(t, u, v, w, n[o + 5], B, 3593408605),
                    w = i(w, t, u, v, n[o + 10], C, 38016083),
                    v = i(v, w, t, u, n[o + 15], D, 3634488961),
                    u = i(u, v, w, t, n[o + 4], E, 3889429448),
                    t = i(t, u, v, w, n[o + 9], B, 568446438),
                    w = i(w, t, u, v, n[o + 14], C, 3275163606),
                    v = i(v, w, t, u, n[o + 3], D, 4107603335),
                    u = i(u, v, w, t, n[o + 8], E, 1163531501),
                    t = i(t, u, v, w, n[o + 13], B, 2850285829),
                    w = i(w, t, u, v, n[o + 2], C, 4243563512),
                    v = i(v, w, t, u, n[o + 7], D, 1735328473),
                    u = i(u, v, w, t, n[o + 12], E, 2368359562),
                    t = j(t, u, v, w, n[o + 5], F, 4294588738),
                    w = j(w, t, u, v, n[o + 8], G, 2272392833),
                    v = j(v, w, t, u, n[o + 11], H, 1839030562),
                    u = j(u, v, w, t, n[o + 14], I, 4259657740),
                    t = j(t, u, v, w, n[o + 1], F, 2763975236),
                    w = j(w, t, u, v, n[o + 4], G, 1272893353),
                    v = j(v, w, t, u, n[o + 7], H, 4139469664),
                    u = j(u, v, w, t, n[o + 10], I, 3200236656),
                    t = j(t, u, v, w, n[o + 13], F, 681279174),
                    w = j(w, t, u, v, n[o + 0], G, 3936430074),
                    v = j(v, w, t, u, n[o + 3], H, 3572445317),
                    u = j(u, v, w, t, n[o + 6], I, 76029189),
                    t = j(t, u, v, w, n[o + 9], F, 3654602809),
                    w = j(w, t, u, v, n[o + 12], G, 3873151461),
                    v = j(v, w, t, u, n[o + 15], H, 530742520),
                    u = j(u, v, w, t, n[o + 2], I, 3299628645),
                    t = k(t, u, v, w, n[o + 0], J, 4096336452),
                    w = k(w, t, u, v, n[o + 7], K, 1126891415),
                    v = k(v, w, t, u, n[o + 14], L, 2878612391),
                    u = k(u, v, w, t, n[o + 5], M, 4237533241),
                    t = k(t, u, v, w, n[o + 12], J, 1700485571),
                    w = k(w, t, u, v, n[o + 3], K, 2399980690),
                    v = k(v, w, t, u, n[o + 10], L, 4293915773),
                    u = k(u, v, w, t, n[o + 1], M, 2240044497),
                    t = k(t, u, v, w, n[o + 8], J, 1873313359),
                    w = k(w, t, u, v, n[o + 15], K, 4264355552),
                    v = k(v, w, t, u, n[o + 6], L, 2734768916),
                    u = k(u, v, w, t, n[o + 13], M, 1309151649),
                    t = k(t, u, v, w, n[o + 4], J, 4149444226),
                    w = k(w, t, u, v, n[o + 11], K, 3174756917),
                    v = k(v, w, t, u, n[o + 2], L, 718787259),
                    u = k(u, v, w, t, n[o + 9], M, 3951481745),
                    t = c(t, p),
                    u = c(u, q),
                    v = c(v, r),
                    w = c(w, s);
                return m(t).concat(m(u), m(v), m(w))
            }
              , M = function() {
                var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                  , b = a.split("")
                  , c = function(a, c) {
                    var d = [], e = "", f, g;
                    totalChunks = Math.floor(a.length * 16 / 3);
                    for (f = 0; f < a.length * 16; f++)
                        d.push(a[Math.floor(f / 16)][f % 16]);
                    for (f = 0; f < d.length; f += 3)
                        e += b[d[f] >> 2],
                        e += b[(d[f] & 3) << 4 | d[f + 1] >> 4],
                        d[f + 1] !== undefined ? e += b[(d[f + 1] & 15) << 2 | d[f + 2] >> 6] : e += "=",
                        d[f + 2] !== undefined ? e += b[d[f + 2] & 63] : e += "=";
                    g = e.slice(0, 64) + "\n";
                    for (f = 1; f < Math.ceil(e.length / 64); f++)
                        g += e.slice(f * 64, f * 64 + 64) + (Math.ceil(e.length / 64) == f + 1 ? "" : "\n");
                    return g
                }
                  , d = function(b) {
                    b = b.replace(/\n/g, "");
                    var c = [], d = [], e = [], f;
                    for (f = 0; f < b.length; f += 4)
                        d[0] = a.indexOf(b.charAt(f)),
                        d[1] = a.indexOf(b.charAt(f + 1)),
                        d[2] = a.indexOf(b.charAt(f + 2)),
                        d[3] = a.indexOf(b.charAt(f + 3)),
                        e[0] = d[0] << 2 | d[1] >> 4,
                        e[1] = (d[1] & 15) << 4 | d[2] >> 2,
                        e[2] = (d[2] & 3) << 6 | d[3],
                        c.push(e[0], e[1], e[2]);
                    return c = c.slice(0, c.length - c.length % 16),
                    c
                }
                ;
                return typeof Array.indexOf == "function" && (a = b),
                {
                    encode: c,
                    decode: d
                }
            }();
            return {
                size: l,
                h2a: j,
                expandKey: x,
                encryptBlock: q,
                decryptBlock: r,
                Decrypt: d,
                s2a: k,
                rawEncrypt: o,
                dec: K,
                openSSLKey: n,
                a2h: i,
                enc: J,
                Hash: {
                    MD5: L
                },
                Base64: M
            }
        }();
        a.GibberishAES = b
    })(window)
});