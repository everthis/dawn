{"version":3,"sources":["webpack:///webpack/bootstrap 55122e76540a70933034?fb62","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_wks.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_iterators.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_set-to-string-tag.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_library.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_wks-define.js","webpack:///./~/core-js/library/modules/_wks-ext.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./app/javascript/packs/spf/base.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_iter-define.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_object-create.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_redefine.js","webpack:///./app/javascript/packs/common/csrf.js","webpack:///./~/core-js/library/modules/_object-gopn.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_html.js","webpack:///./~/core-js/library/modules/_object-dps.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/core-js/library/modules/_add-to-unscopables.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_iter-create.js","webpack:///./~/core-js/library/modules/_iter-step.js","webpack:///./~/core-js/library/modules/_object-gpo.js","webpack:///./~/core-js/library/modules/_string-at.js","webpack:///./~/core-js/library/modules/_to-absolute-index.js","webpack:///./~/core-js/library/modules/es6.array.iterator.js","webpack:///./~/core-js/library/modules/web.dom.iterable.js","webpack:///./app/javascript/packs/spf/array/array.js","webpack:///./app/javascript/packs/spf/state.js","webpack:///./~/babel-runtime/helpers/typeof.js","webpack:///./~/core-js/library/modules/_meta.js","webpack:///./app/javascript/packs/spf/config.js","webpack:///./app/javascript/packs/spf/string/string.js","webpack:///./~/babel-runtime/core-js/symbol.js","webpack:///./~/babel-runtime/core-js/symbol/iterator.js","webpack:///./~/core-js/library/fn/symbol/index.js","webpack:///./~/core-js/library/fn/symbol/iterator.js","webpack:///./~/core-js/library/modules/_enum-keys.js","webpack:///./~/core-js/library/modules/_is-array.js","webpack:///./~/core-js/library/modules/_object-gopd.js","webpack:///./~/core-js/library/modules/_object-gopn-ext.js","webpack:///./~/core-js/library/modules/es6.symbol.js","webpack:///./~/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./~/core-js/library/modules/es7.symbol.observable.js","webpack:///./app/javascript/packs/spf/debug/debug.js","webpack:///./app/javascript/packs/common/handleMethod2.js","webpack:///./app/javascript/packs/spf/dom/dom.js","webpack:///./app/javascript/packs/spf/history/history.js","webpack:///./app/javascript/packs/spf/url/url.js","webpack:///./~/core-js/library/modules/_classof.js","webpack:///./app/javascript/packs/spf/cache/cache.js","webpack:///./app/javascript/packs/spf/dom/classlist.js","webpack:///./app/javascript/packs/spf/net/resource.js","webpack:///./app/javascript/packs/spf/net/script.js","webpack:///./app/javascript/packs/spf/net/style.js","webpack:///./app/javascript/packs/spf/tasks/tasks.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_is-array-iter.js","webpack:///./~/core-js/library/modules/_iter-call.js","webpack:///./~/core-js/library/modules/_iter-detect.js","webpack:///./~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./app/javascript/packs/spf/dom/dataset.js","webpack:///./app/javascript/packs/spf/nav/nav.js","webpack:///./app/javascript/packs/spf/nav/response.js","webpack:///./app/javascript/packs/spf/pubsub/pubsub.js","webpack:///./app/javascript/packs/common/ActionCable.js","webpack:///./app/javascript/packs/common/loadingBar.js","webpack:///./app/javascript/packs/modules/dataLinks.js","webpack:///./app/javascript/packs/modules/formSubmit.js","webpack:///./app/javascript/packs/modules/postHandler.js","webpack:///./app/javascript/packs/spf/entry.js","webpack:///./app/stylesheet/globalA.scss","webpack:///./app/javascript/packs/common/handleMethod.js","webpack:///./app/javascript/packs/entries/globalA.js","webpack:///./app/javascript/packs/spf/async/async.js","webpack:///./app/javascript/packs/spf/main.js","webpack:///./app/javascript/packs/spf/nav/request.js","webpack:///./app/javascript/packs/spf/net/connect.js","webpack:///./app/javascript/packs/spf/net/xhr.js","webpack:///./~/babel-runtime/core-js/array/from.js","webpack:///./~/babel-runtime/helpers/toConsumableArray.js","webpack:///./~/core-js/library/fn/array/from.js","webpack:///./~/core-js/library/modules/_create-property.js","webpack:///./~/core-js/library/modules/es6.array.from.js","webpack:///(webpack)/buildin/module.js"],"names":["spfBase","SPF_BOOTLOADER","SPF_DEBUG","SPF_TRACING","bind","fn","self","var_args","args","Array","prototype","slice","call","arguments","newArgs","push","apply","execute","err","dispatch","name","opt_detail","document","createEvent","evt","bubbles","cancelable","initCustomEvent","dispatchEvent","now","window","performance","timing","navigationStart","Date","getTime","uid","state","parseInt","nullFunction","EventName","CLICK","CSS_BEFORE_UNLOAD","CSS_UNLOAD","DONE","ERROR","HISTORY","JS_BEFORE_UNLOAD","JS_UNLOAD","PART_DONE","PART_PROCESS","PROCESS","READY","RELOAD","REQUEST","ScriptResource","StyleResource","LinkResource","ResponseFragment","SingleResponse","MultipartResponse","RequestOptions","EventDetail","TaskScheduler","rorParams","csrfToken","querySelector","getAttribute","csrfParam","isCrossDomain","originAnchor","createElement","href","location","urlAnchor","url","protocol","host","e","spfArray","ArrayLike","each","arr","opt_obj","forEach","i","l","length","every","some","filter","res","a","indexOf","val","opt_fromIndex","start","map","toArray","isArray","Object","toString","spfState","has","key","values_","get","set","value","Key","ASYNC_DEFERS","ASYNC_LISTENER","CACHE_COUNTER","CACHE_MAX","CACHE_STORAGE","CONFIG_VALUES","HISTORY_CALLBACK","HISTORY_ERROR_CALLBACK","HISTORY_IGNORE_POP","HISTORY_INIT","HISTORY_LISTENER","HISTORY_TIMESTAMP","HISTORY_URL","NAV_COUNTER","NAV_INIT","NAV_INIT_TIME","NAV_CLICK_LISTENER","NAV_MOUSEDOWN_LISTENER","NAV_SCROLL_LISTENER","NAV_SCROLL_TEMP_POSITION","NAV_SCROLL_TEMP_URL","NAV_PREFETCHES","NAV_PROMOTE","NAV_PROMOTE_TIME","NAV_REQUEST","PUBSUB_SUBS","RESOURCE_NAME","RESOURCE_PATHS_PREFIX","RESOURCE_STATUS","RESOURCE_URL","SCRIPT_DEPS","SCRIPT_URL","TASKS_UID","spfConfig","Value","defaults","init","opt_config","config","values","clear","spfString","contains","str","substr","startsWith","prefix","opt_offset","idx","lastIndexOf","endsWith","suffix","isString","trim","String","replace","partition","sep","split","nosep","join","hashcode","result","charCodeAt","toSelectorCase","toLowerCase","spfDebug","debug","isLevelEnabled","Level","DEBUG","log","info","INFO","warn","WARN","error","method","console","current","overall","formatDuration","start_","split_","unshift","direct_","reset","end","dur","toFixed","level","levels_","OUTPUT","handleMethod","link","linkMethod","obj","target","paramsObj","formEle","createForm","params","f","style","display","setAttribute","s","undefined","appendChild","appendFormToDom","form","body","submitForm","submit","spfDom","query","selector","opt_root","root","querySelectorAll","insertSiblingBefore","newNode","refNode","parentNode","insertBefore","insertSiblingAfter","nextSibling","unpackElement","element","child","parent","nodeType","removeNode","firstChild","removeChild","packElement","container","getAncestor","matcher","opt_parent","setAttributes","attributes","className","cssText","createIframe","opt_id","opt_document","opt_callback","id","doc","iframeEl","src","onload","spfHistory","callback","errorCallback","addEventListener","getCurrentUrl_","pop_","historyState","referrer","dispose","removeEventListener","add","opt_url","opt_state","opt_doCallback","push_","currentState","getCurrentState_","removeCurrentEntry","history","back","timestamp","doReplaceState_","doPushState_","data","title","iframe","getIframe","pushState","contentWindow","Error","replaceState","frame","getElementById","spfUrl","URLUtils","utils","aEl","hostname","port","pathname","search","hash","username","password","origin","absolute","relative","opt_keepHash","unhash","path","identify","opt_type","ident","type","hashParts","queryParts","querySep","queryVal","hashSep","hashVal","ext","substring","appendParameters","parameters","delim","removeParameters","param","regex","RegExp","_","appendPersistentParameters","parameterConfig","unprotocol","spfCache","storage","storage_","unit","valid_","updateCount_","remove","opt_lifetime","lifetime","max","create_","setTimeout","collect","trim_","Unit","isNaN","Infinity","age","extra","keys","min","count","opt_storage","spfDomClasslist","node","classList","match","cls","classes","item","newClasses","spfNetResource","status","load","opt_fn","isJS","Type","JS","canonicalize","pseudonym","topic","prevUrl","unloadPrepare_","unloadComplete","unloadComplete_","subscribe","prevName","prevTopic","rename","check","el","find","create","unload","destroy","subscriptions","names","loaded","ready","flush","opt_statusGroup","opt_prevUrl","State","LOADING","tag","next","LOADED","label","onerror","onreadystatechange","test","readyState","targetEl","getElementsByTagName","async","rel","prevEl","els","discover","contentSelector","innerText","prefetch","opt_force","IMG","preconnect_","run","prefetch_","group","isCSS","CSS","fetchEl","IS_IE","extraElForIE","img","Image","eval","text","previous","complete","exec","styleSheet","createTextNode","paths","index","p","opt_group","status_","name_","url_","navigator","userAgent","spfNetScript","urls","opt_require","unknown","known","spf","sort","done","ignore","unsubscribe","require","unrequire","require_","deps","deps_","descendants","dep","list","descend","declare","opt_urls","spfNetStyle","spfTasks","opt_delay","queues","queues_","queue","createQueue_","task","createTask_","items","opt_sync","active","scheduledKey","timeoutKey","suspended","semaphore","do_","suspend","resume","cancel","clearAsyncTasks_","cancelAllExcept","opt_keyPrefix","opt_skipKey","keyPrefix","step","nextFn","taskFn","shift","scheduleTask_","delay","scheduler","addTask","cancelTask","clearTimeout","Task","Queue","spfDomDataset","dataset","string","spfNav","handleHistory_","dispatchError_","handleClick_","isTouchCapablePlatform_","handleMouseDown_","handleScroll_","handleClick","handleMouseDown","handleScroll","getAncestorWithLinkClass_","getAncestorWithNoLinkClass_","getAncestorWithHref_","tagName","getEventURL_","metaKey","altKey","ctrlKey","shiftKey","button","linkEl","nolinkEl","isAllowed_","destination","isEligible_","limit","isNavigable_","opt_current","absoluteUrl","absoluteCurrent","defaultPrevented","dispatchClick_","options","createOptions_","Info","navigate_","preventDefault","position","getScrollTempPosition_","clearScrollTempPosition_","scroll","referer","reverse","reloadId","reload","ReloadReason","FORBIDDEN","INELIGIBLE","dispatchHistory_","setScrollTempPosition_","navigate","opt_options","handleError","handleNavigateError_","navigateAddHistory_","navigateScroll_","dispatchRequest_","REQUEST_CANCELED","cancelAllPrefetchesExcept","preprocessKey","prefetches","prefetches_","prefetchXhr","navigatePromotePrefetch_","navigateSendRequest_","promoteKey","handlePart","handleNavigatePart_","handleSuccess","handleNavigateSuccess_","clearResourceTimings_","xhr","send","headers","onPart","onError","onSuccess","postData","scrolled","scrollIntoView","pageXOffset","pageYOffset","updateState","newState","opt_xhr","partial","dispatchPartProcess_","PART_PROCESS_CANCELED","RESPONSE_RECEIVED","handleNavigateRedirect_","process","dispatchPartDone_","response","original","multipart","dispatchProcess_","PROCESS_CANCELED","r","parts","part","dispatchDone_","redirectUrl","abort","reason","opt_err","message","logReason","dispatchReload_","encodeURIComponent","load_","handleLoadError_","handleLoadPart_","handleLoadSuccess_","withCredentials","addPrefetch","isPrefetch","removePrefetch","handleLoadRedirect_","processFn","preprocess","redirectFn","Callback","redirectOpts","resp","opt_noEvents","detail","proceed","opt_referer","opt_previous","opt_skipUrl","clearResourceTimings","opt_reqs","Info_","opt_info","spfNavResponse","parse","opt_multipart","opt_lastDitch","beginToken","Token","BEGIN","delimToken","DELIMITER","endToken","END","lastDitchHalfToken","chunk","finish","JSON","extract","isNavigate","isReverse","hasPosition","hasScrolled","sync","num","fullUrl","head","extracted","extract_","installLinks_","installStyles_","installScripts_","attrs","fragments","numBeforeFragments","installScripts","animationClass","noAnimation","CAN_ANIMATE_","htmlHandler","innerHTML","animation","Animation_","prepareAnimation_","runAnimation_","completeAnimation_","duration","numAfterFragments","numFragments","foot","preinstallLinks_","preinstallStyles_","preinstallScripts_","dirClass","fromClass","toClass","startClass","startClassDeprecated","oldEl","oldClass","newEl","newClass","html","endClass","endClassDeprecated","frag","Extraction_","script","ElementRegEx","SCRIPT_STYLE","full","attr","AttributeRegEx","NAME","SRC","ASYNC","TYPE","inject","LINK","REL","HREF","preconnect","testEl","prefixes","spfPubsub","subFn","publish","publish_","opt_unsub","oldTopic","newTopic","existing","concat","ActionCable","INTERNAL","createConsumer","ref","getConfig","default_mount_path","Consumer","createWebSocketURL","startDebugging","debugging","stopDebugging","messages","module","exports","me","ConnectionMonitor","clamp","secondsSince","pollInterval","staleThreshold","connection","visibilityDidChange","reconnectAttempts","isRunning","startedAt","stoppedAt","startPolling","getPollInterval","stop","stopPolling","recordPing","pingedAt","recordConnect","disconnectedAt","recordDisconnect","poll","pollTimeout","_this","reconnectIfStale","interval","constructor","Math","round","connectionIsStale","disconnectedRecently","reopen","visibilityState","isOpen","time","number","message_types","protocols","supportedProtocols","unsupportedProtocol","Connection","reopenDelay","consumer","open","monitor","disconnected","webSocket","stringify","isActive","getState","uninstallEventHandlers","WebSocket","installEventHandlers","close","arg","allowReconnect","ref1","error1","getProtocol","isState","isProtocolSupported","states","eventName","handler","events","event","identifier","welcome","ping","confirmation","notify","rejection","reject","notifyAll","willAttemptReconnect","Subscriptions","channelName","mixin","channel","subscription","Subscription","ensureActiveConnection","sendCommand","forget","findAll","len","results","callbackName","command","extend","perform","action","object","properties","connect","disconnect","LoadingBar","height","width","percent","show","timer","loadingEle","bar","inner","setInterval","floor","random","clearInterval","update","backgroundColor","loadingBarEle","parentElement","dataLinks","processDataLink","ev","A","gc","currentName","processFormSubmit","formSubmit","hmInstance","fd","fa","formDataToQuerystring","entries","tt","closest","fm","FormData","Accept","onProcess","fnpuLoad","onDone","exitProcessPostLink","processPostLink","spfEntry","api_","extra_","spfEs","fn1","ns","fn2","app","onClick","onHistory","onRequest","onPartProcess","onPartDone","onScriptBeforeUnload","onScriptUnload","onStyleBeforeUnload","onStyleUnload","enabled","msg","ins","detach","timer_","spfAsync","defer","defers_","POSTMESSAGE_SUPPORTED_","postMessage","PREFIX_","run_","handleMessage_","addListener_","attachEvent","removeListener_","detachEvent","supported","listener","spfMain","enable","canInit_","History","discover_","spfNavRequest","Options","toUpperCase","requestUrl","cacheKey","getCacheKey_","cached","getCacheObject_","handleCache","handleResponseFromCache_","configHeaders","headerId","chunking","Chunking_","handleHeaders","handleHeadersFromXHR_","handleChunk","handleChunkFromXHR_","handleComplete","handleCompleteFromXHR_","xhrOpts","timeoutMs","onHeaders","onChunk","onTimeout","responseType","post","updateCache","done_","getResponseHeader","parsed","responseText","t","startTime","metric","cacheType","cache","setCacheObject_","opt_cacheType","opt_requestType","opt_set","cacheValue","spfNetConnect","spfNetXhr","PostData","chunked","offset","XMLHttpRequest","xhr_abort","HEADERS_RECEIVED","isChunked_","getEntriesByName","pop","isFormData","addContentTypeFormUrlEncoded","setRequestHeader","encoding","firefoxSpdy","loadTimes","chrome","chromeSpdy","wasFetchedViaSpdy","UNSENT","OPENED"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;;;;;;;;;;;;ACLzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACVA;AACA;AACA,iCAAiC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC1E,CAAC;;;;;;;;;;;;ACHD,uBAAuB;AACvB;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA,6BAA6B;AAC7B,uCAAuC;;;;;;;;;;;;ACDvC;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;;AAEA;AACA,oEAAoE,iCAAiC;AACrG;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;;;;;;;;;;;;ACAA;AACA;AACA,kDAAkD;AAClD;AACA,uCAAuC;AACvC;;;;;;;;;;;;;ACLA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACNA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA,cAAc;;;;;;;;;;;;ACAd;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,sBAAsB;AAChF,kFAAkF,wBAAwB;AAC1G;;;;;;;;;;;;ACRA;;;;;;;;;;;;ACAA;AACA,0FAAsE,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;;;;;;;;;;;;ACFD;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAIA,UAAU,EAAd;;AAEA;AACA,IAAIC,iBAAiB,KAArB;;AAEA;AACA,IAAIC,YAAY,KAAhB;;AAEA;AACA,IAAIC,cAAc,KAAlB;;AAEA;;;;;;;;;;;;;;AAcAH,QAAQI,IAAR,GAAe,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,QAApB,EAA8B;AAC3C,MAAIC,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACA,SAAO,YAAY;AACjB;AACA,QAAIC,UAAUN,KAAKG,KAAL,EAAd;AACAG,YAAQC,IAAR,CAAaC,KAAb,CAAmBF,OAAnB,EAA4BD,SAA5B;AACA,WAAOR,GAAGW,KAAH,CAASV,IAAT,EAAeQ,OAAf,CAAP;AACD,GALD;AAMD,CARD;;AAUA;;;;;;;AAOAd,QAAQiB,OAAR,GAAkB,UAAUZ,EAAV,EAAcE,QAAd,EAAwB;AACxC,MAAIF,EAAJ,EAAQ;AACN,QAAIG,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACA,QAAI;AACF,aAAOR,GAAGW,KAAH,CAAS,IAAT,EAAeR,IAAf,CAAP;AACD,KAFD,CAEE,OAAOU,GAAP,EAAY;AACZ,aAAOA,GAAP;AACD;AACF;AACF,CATD;;AAWA;;;;;;;AAOAlB,QAAQmB,QAAR,GAAmB,UAAUC,IAAV,EAAgBC,UAAhB,EAA4B;AAC7C,MAAIC,SAASC,WAAb,EAA0B;AACxB,QAAIC,MAAMF,SAASC,WAAT,CAAqB,aAArB,CAAV;AACA,QAAIE,UAAU,IAAd;AACA,QAAIC,aAAa,IAAjB;AACAF,QAAIG,eAAJ,CAAoBP,IAApB,EAA0BK,OAA1B,EAAmCC,UAAnC,EAA+CL,UAA/C;AACA,WAAOC,SAASM,aAAT,CAAuBJ,GAAvB,CAAP;AACD;AACD,SAAO,IAAP;AACD,CATD;;AAWA;;;;;;;;AAQAxB,QAAQ6B,GAAR,GAAe,YAAY;AACzB,MAAIC,OAAOC,WAAP,IAAsBD,OAAOC,WAAP,CAAmBC,MAAzC,IACAF,OAAOC,WAAP,CAAmBF,GADvB,EAC4B;AAC1B,WAAO,YAAY;AACjB,aAAQC,OAAOC,WAAP,CAAmBC,MAAnB,CAA0BC,eAA1B,GACAH,OAAOC,WAAP,CAAmBF,GAAnB,EADR;AAED,KAHD;AAID;AACD,SAAO,YAAY;AACjB,WAAQ,IAAIK,IAAJ,EAAD,CAAaC,OAAb,EAAP;AACD,GAFD;AAGD,CAXa,EAAd;;AAaA;;;;;AAKAnC,QAAQoC,GAAR,GAAc,YAAY;AACxB;AACA,MAAIC,QAASP,OAAO,YAAP,IAAuBA,OAAO,YAAP,KAAwB,EAA5D;AACA,MAAIM,MAAME,SAASD,MAAM,KAAN,CAAT,EAAuB,EAAvB,KAA8B,CAAxC;AACAD;AACA,SAAQC,MAAM,KAAN,IAAeD,GAAvB;AACD,CAND;;AAQA;;;AAGApC,QAAQuC,YAAR,GAAuB,YAAY,CAAE,CAArC;;AAEA;;;AAGAvC,QAAQwC,SAAR,GAAoB;AAClBC,SAAO,UADW;AAElBC,qBAAmB,oBAFD;AAGlBC,cAAY,cAHM;AAIlBC,QAAM,SAJY;AAKlBC,SAAO,UALW;AAMlBC,WAAS,YANS;AAOlBC,oBAAkB,mBAPA;AAQlBC,aAAW,aARO;AASlBC,aAAW,aATO;AAUlBC,gBAAc,gBAVI;AAWlBC,WAAS,YAXS;AAYlBC,SAAO,UAZW;AAalBC,UAAQ,WAbU;AAclBC,WAAS;;AAGX;;;;;;;;;AAjBoB,CAApB,CA0BAtD,QAAQuD,cAAR;;AAEA;;;;;;;;AAQAvD,QAAQwD,aAAR;;AAEA;;;;;;;AAOAxD,QAAQyD,YAAR;;AAEA;;;;;;;;;;;AAWAzD,QAAQ0D,gBAAR;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA1D,QAAQ2D,cAAR;;AAEA;;;;;;;;;;;;;;;;AAgBA3D,QAAQ4D,iBAAR;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA5D,QAAQ6D,cAAR;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA7D,QAAQ8D,WAAR;;AAEA;;;;;;;;;;;AAWA9D,QAAQ+D,aAAR;;QAEQ7D,S,GAAAA,S;QAAWD,c,GAAAA,c;QAAgBE,W,GAAAA,W;QAAaH,O,GAAAA,O;;;;;;;;;;;AClVhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;AACA;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E,6CAA6C,oCAAoC;AACjF,KAAK,4BAA4B,oCAAoC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;;;;;;;;;;;;;;;;;;;ACAO,IAAIgE,gCAAY;AACrB;AACAC,aAAW;AAAA,WAAM3C,SAAS4C,aAAT,CAAuB,uBAAvB,EAAgDC,YAAhD,CAA6D,SAA7D,CAAN;AAAA,GAFU;AAGrB;AACAC,aAAW;AAAA,WAAM9C,SAAS4C,aAAT,CAAuB,uBAAvB,EAAgDC,YAAhD,CAA6D,SAA7D,CAAN;AAAA,GAJU;AAKrB;AACAE,iBAAe,4BAAO;AACpB,QAAIC,eAAehD,SAASiD,aAAT,CAAuB,GAAvB,CAAnB;AACAD,iBAAaE,IAAb,GAAoBC,SAASD,IAA7B;AACA,QAAIE,YAAYpD,SAASiD,aAAT,CAAuB,GAAvB,CAAhB;;AAEA,QAAI;AACFG,gBAAUF,IAAV,GAAiBG,GAAjB;AACA;AACAD,gBAAUF,IAAV,GAAiBE,UAAUF,IAA3B;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAO,EAAG,CAAC,CAACE,UAAUE,QAAX,IAAuBF,UAAUE,QAAV,KAAuB,GAA/C,KAAuD,CAACF,UAAUG,IAAnE,IACNP,aAAaM,QAAb,GAAwB,IAAxB,GAA+BN,aAAaO,IAA5C,KACCH,UAAUE,QAAV,GAAqB,IAArB,GAA4BF,UAAUG,IAFnC,CAAP;AAGD,KAbD,CAaE,OAAOC,CAAP,EAAU;AACV;AACA,aAAO,IAAP;AACD;AACF;AA5BoB,CAAhB,C;;;;;;;;;;;ACAP;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACNA;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;;;;;;;;;;;ACLA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B,cAAc;AACd;AACA,CAAC;AACD;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,UAAU;AACV,CAAC;;;;;;;;;;;;AChBD,8BAA8B;;;;;;;;;;;;ACA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;AAEA;AACA,wHAAkF,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;;;;;;ACZA;AACA,UAAU;AACV;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAC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AAYY,OAAZ,CAAoB,UAApB,EAAgC,KAAhC,EAAuCU,WAAvC,EAAP;AACD,CAFD;;kBAIexB,S;;;;;;;;;;;AC/If,kBAAkB,yF;;;;;;;;;;;ACAlB,kBAAkB,kG;;;;;;;;;;;ACAlB;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,sBAAsB,uBAAuB,WAAW,IAAI;AAC5D,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,KAAK;AACL;AACA,sBAAsB,mCAAmC;AACzD,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO,QAAQ,iCAAiC;AACpG,CAAC;AACD;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzOA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;ACeA;;AAEA,IAAIyB,WAAW,EAAf;;AAEA;;;;;AAnBA;AACA;AACA;AACA;;AAEA;;;;;;;;AAQA;;AAWAA,SAASC,KAAT,GAAiB,UAAU1K,QAAV,EAAoB;AACnC,MAAIyK,SAASE,cAAT,CAAwBF,SAASG,KAAT,CAAeC,KAAvC,CAAJ,EAAmD;AACjDJ,aAASK,GAAT,CAAaL,SAASG,KAAT,CAAeC,KAA5B,EAAmC,KAAnC,EAA0CvK,SAA1C;AACD;AACF,CAJD;;AAMA;;;;;AAKAmK,SAASM,IAAT,GAAgB,UAAU/K,QAAV,EAAoB;AAClC,MAAIyK,SAASE,cAAT,CAAwBF,SAASG,KAAT,CAAeI,IAAvC,CAAJ,EAAkD;AAChDP,aAASK,GAAT,CAAaL,SAASG,KAAT,CAAeI,IAA5B,EAAkC,KAAlC,EAAyC1K,SAAzC;AACD;AACF,CAJD;;AAMA;;;;;AAKAmK,SAASQ,IAAT,GAAgB,UAAUjL,QAAV,EAAoB;AAClC,MAAIyK,SAASE,cAAT,CAAwBF,SAASG,KAAT,CAAeM,IAAvC,CAAJ,EAAkD;AAChDT,aAASK,GAAT,CAAaL,SAASG,KAAT,CAAeM,IAA5B,EAAkC,KAAlC,EAAyC5K,SAAzC;AACD;AACF,CAJD;;AAMA;;;;;AAKAmK,SAASU,KAAT,GAAiB,UAAUnL,QAAV,EAAoB;AACnC,MAAIyK,SAASE,cAAT,CAAwBF,SAASG,KAAT,CAAetI,KAAvC,CAAJ,EAAmD;AACjDmI,aAASK,GAAT,CAAaL,SAASG,KAAT,CAAetI,KAA5B,EAAmC,KAAnC,EAA0ChC,SAA1C;AACD;AACF,CAJD;;AAMA;;;;;;;;;;AAUAmK,SAASK,GAAT,GAAe,UAAUM,MAAV,EAAkB/B,MAAlB,EAA0BpJ,IAA1B,EAAgC;AAC7C,MAAI,oBAAc,CAACsB,OAAO8J,OAA1B,EAAmC;AACjC;AACD;AACDpL,SAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,IAA3B,CAAP;AACA,MAAIqL,UAAU,cAAQhK,GAAR,EAAd;AACA,MAAIiK,UAAUd,SAASe,cAAT,CAAwBf,SAASgB,MAAjC,EAAyCH,OAAzC,CAAd;AACA,MAAIb,SAASiB,MAAb,EAAqB;AACnB,QAAIzB,QAAQQ,SAASe,cAAT,CAAwBf,SAASiB,MAAjC,EAAyCJ,OAAzC,CAAZ;AACArL,SAAK0L,OAAL,CAAaJ,UAAU,GAAV,GAAgBtB,KAAhB,GAAwB,GAArC;AACD,GAHD,MAGO;AACLhK,SAAK0L,OAAL,CAAaJ,UAAU,GAAvB;AACD;AACD,MAAId,SAASmB,OAAb,EAAsB;AACpB3L,SAAK0L,OAAL,CAAa,MAAMtC,MAAN,GAAe,GAA5B;AACA;AACA9H,WAAO8J,OAAP,CAAeD,MAAf,EAAuB3K,KAAvB,CAA6Bc,OAAO8J,OAApC,EAA6CpL,IAA7C;AACD,GAJD,MAIO;AACLA,SAAK0L,OAAL,CAAa,MAAMtC,MAAN,GAAe,KAAf,GAAuB+B,MAAvB,GAAgC,GAA7C;AACA7J,WAAO8J,OAAP,CAAeP,GAAf,CAAmB7K,KAAKkK,IAAL,CAAU,GAAV,CAAnB;AACD;AACF,CArBD;;AAuBA;;;;AAIAM,SAASoB,KAAT,GAAiB,YAAY;AAC3BpB,WAASiB,MAAT,GAAkB,cAAQpK,GAAR,EAAlB;AACD,CAFD;;AAIA;;;;;;;;AAQAmJ,SAASe,cAAT,GAA0B,UAAU/F,KAAV,EAAiBqG,GAAjB,EAAsB;AAC9C,MAAIC,MAAM,CAACD,MAAMrG,KAAP,IAAgB,IAA1B;AACA,MAAIsG,IAAIC,OAAR,EAAiB;AACfD,UAAMA,IAAIC,OAAJ,CAAY,CAAZ,CAAN;AACD;AACD,SAAOD,MAAM,GAAb;AACD,CAND;;AAQA;;;;;;AAMAtB,SAASE,cAAT,GAA0B,UAAUsB,KAAV,EAAiB;AACzC,SAAQxB,SAASyB,OAAT,CAAiBD,KAAjB,KAA2BxB,SAASyB,OAAT,CAAiBzB,SAAS0B,MAA1B,CAAnC;AACD,CAFD;;AAIA;;;;AAIA1B,SAASgB,MAAT,GAAkB,cAAQnK,GAAR,EAAlB;;AAEA;;;;AAIAmJ,SAASiB,MAAT,GAAkB,CAAlB;;AAEA;;;;;;;AAOAjB,SAASmB,OAAT,GAAmB,CAAC,EAAErK,OAAO8J,OAAP,IAAkB9J,OAAO8J,OAAP,CAAeX,KAAnC,CAApB;;AAEA;;;;;AAKAD,SAASyB,OAAT,GAAmB;AACjB,WAAS,CADQ;AAEjB,UAAQ,CAFS;AAGjB,UAAQ,CAHS;AAIjB,WAAS;;AAGX;;;;;AAPmB,CAAnB,CAYAzB,SAASG,KAAT,GAAiB;AACfC,SAAO,OADQ;AAEfG,QAAM,MAFS;AAGfE,QAAM,MAHS;AAIf5I,SAAO;;AAGT;;;;;;AAPiB,CAAjB,CAaAmI,SAAS0B,MAAT,GAAkB,OAAlB;;kBAEe1B,Q;;;;;;;;;;;;;;;;;;;;QC/KC2B,Y,GAAAA,Y;;AARhB;;AACA;;;;;;;AAOO,SAASA,YAAT,CAAuBC,IAAvB,EAA6BC,UAA7B,EAAmD;AAAA,MAAVC,GAAU,uEAAJ,EAAI;;AACxD,MAAItI,OAAOoI,KAAKzI,YAAL,CAAkB,MAAlB,CAAX;AAAA,MACEwH,SAASkB,UADX;AAAA,MAEEE,SAASH,KAAKzI,YAAL,CAAkB,QAAlB,CAFX;AAAA,MAGEF,YAAY,gBAAIA,SAAJ,EAHd;AAAA,MAIEG,YAAY,gBAAIA,SAAJ,EAJd;AAKA,MAAI4I,YAAY;AACdxI,UAAMA,IADQ;AAEdmH,YAAQA,MAFM;AAGdoB,YAAQA,MAHM;AAId9I,eAAWA,SAJG;AAKdG,eAAWA;AALG,GAAhB;AAOA,MAAI6I,UAAUC,WAAWF,SAAX,EAAsBF,GAAtB,CAAd;AACA;AACA,SAAOG,OAAP;AACA;AACD;AACD,SAASC,UAAT,CAAqBC,MAArB,EAA6BL,GAA7B,EAAkC;AAChC,MAAIM,IAAI9L,SAASiD,aAAT,CAAuB,MAAvB,CAAR;AACA6I,IAAEC,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAF,IAAEG,YAAF,CAAe,QAAf,EAAyB,MAAzB;AACAH,IAAEG,YAAF,CAAe,QAAf,EAAyBJ,OAAO3I,IAAhC;AACA,MAAI2I,OAAOJ,MAAX,EAAmB;AACjBK,MAAEG,YAAF,CAAe,QAAf,EAAyBJ,OAAOJ,MAAhC;AACD;;AAED,MAAI1H,IAAI/D,SAASiD,aAAT,CAAuB,OAAvB,CAAR;AACAc,IAAEkI,YAAF,CAAe,MAAf,EAAuB,QAAvB;AACAlI,IAAEkI,YAAF,CAAe,MAAf,EAAuB,SAAvB;AACAlI,IAAEkI,YAAF,CAAe,OAAf,EAAwBJ,OAAOxB,MAA/B;;AAEA,MAAI6B,CAAJ;AACA,MAAIL,OAAO/I,SAAP,KAAqBqJ,SAArB,IACAN,OAAOlJ,SAAP,KAAqBwJ,SADrB,IAEA,CAAC,gBAAIpJ,aAAJ,CAAkB8I,OAAO3I,IAAzB,CAFL,EAEqC;AACnCgJ,QAAIlM,SAASiD,aAAT,CAAuB,OAAvB,CAAJ;AACAiJ,MAAED,YAAF,CAAe,MAAf,EAAuB,QAAvB;AACAC,MAAED,YAAF,CAAe,MAAf,EAAuBJ,OAAO/I,SAA9B;AACAoJ,MAAED,YAAF,CAAe,OAAf,EAAwBJ,OAAOlJ,SAA/B;AACD;AACDmJ,IAAEM,WAAF,CAAcrI,CAAd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAImI,CAAJ,EAAO;AACLJ,MAAEM,WAAF,CAAcF,CAAd;AACD;AACD,SAAOJ,CAAP;AACD;;AAED,SAASO,eAAT,CAA0BC,IAA1B,EAAgC;AAC9BtM,WAASuM,IAAT,CAAcH,WAAd,CAA0BE,IAA1B;AACD;AACD,SAASE,UAAT,CAAqBF,IAArB,EAA2B;AACzBA,OAAKG,MAAL;AACD,C;;;;;;;;;;;;;;;;;;;ACjED;;AACA,IAAIC,SAAS,EAAb;;AAEA;;;;;;;;;;AAVA;;;;;AAKA;;AAeAA,OAAOC,KAAP,GAAe,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC3C,MAAIC,OAAOD,YAAY7M,QAAvB;AACA,MAAI8M,KAAKC,gBAAT,EAA2B;AACzB,WAAOD,KAAKC,gBAAL,CAAsBH,QAAtB,CAAP;AACD;AACD,SAAO,EAAP;AACD,CAND;;AAQA;;;;;;;AAOAF,OAAOM,mBAAP,GAA6B,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACvDA,UAAQC,UAAR,CAAmBC,YAAnB,CAAgCH,OAAhC,EAAyCC,OAAzC;AACD,CAFD;;AAIA;;;;;;;AAOAR,OAAOW,kBAAP,GAA4B,UAAUJ,OAAV,EAAmBC,OAAnB,EAA4B;AACtDA,UAAQC,UAAR,CAAmBC,YAAnB,CAAgCH,OAAhC,EAAyCC,QAAQI,WAAjD;AACD,CAFD;;AAIA;;;;;;;;;AASAZ,OAAOa,aAAP,GAAuB,UAAUC,OAAV,EAAmB;AACxC,MAAIC,KAAJ;AAAA,MAAWC,SAASF,QAAQL,UAA5B;AACA,MAAIO,UAAUA,OAAOC,QAAP,IAAmB,EAAjC,EAAqC;AAAG;AACtC;AACA,QAAIH,QAAQI,UAAZ,EAAwB;AACtB,aAAO,uBAAwBJ,QAAQI,UAAR,CAAmB,KAAnB;AAA/B;AACD,KAFD,MAEO;AACL;AACA,aAAQH,QAAQD,QAAQK,UAAxB,EAAqC;AACnCH,eAAON,YAAP,CAAoBK,KAApB,EAA2BD,OAA3B;AACD;AACD;AACA,aAAO,uBAAwBE,OAAOI,WAAP,CAAmBN,OAAnB;AAA/B;AACD;AACF;AACF,CAfD;;AAiBA;;;;;;;AAOAd,OAAOqB,WAAP,GAAqB,UAAUP,OAAV,EAAmBQ,SAAnB,EAA8B;AACjD,MAAIA,SAAJ,EAAe;AACb,QAAIP,KAAJ;AACA;AACA,WAAQA,QAAQD,QAAQK,UAAxB,EAAqC;AACnCG,gBAAU5B,WAAV,CAAsBqB,KAAtB;AACD;AACD;AACAD,YAAQpB,WAAR,CAAoB4B,SAApB;AACD;AACF,CAVD;;AAYA;;;;;;;;;;;;;AAaAtB,OAAOuB,WAAP,GAAqB,UAAUT,OAAV,EAAmBU,OAAnB,EAA4BC,UAA5B,EAAwC;AAC3D,SAAOX,OAAP,EAAgB;AACd,QAAIU,QAAQV,OAAR,CAAJ,EAAsB;AACpB;AACA,aAAOA,OAAP;AACD;AACD,QAAIW,cAAcX,WAAWW,UAA7B,EAAyC;AACvC;AACA,aAAO,IAAP;AACD;AACD;AACAX,cAAUA,QAAQL,UAAlB;AACD;AACD;AACA,SAAO,IAAP;AACD,CAfD;;AAiBA;;;;;;;;;;;AAWAT,OAAO0B,aAAP,GAAuB,UAAUZ,OAAV,EAAmBa,UAAnB,EAA+B;AACpD,OAAK,IAAIvO,IAAT,IAAiBuO,UAAjB,EAA6B;AAC3B,QAAI/I,QAAQ+I,WAAWvO,IAAX,CAAZ;AACA,QAAIA,QAAQ,OAAZ,EAAqB;AACnB0N,cAAQc,SAAR,GAAoBhJ,KAApB;AACD,KAFD,MAEO,IAAIxF,QAAQ,OAAZ,EAAqB;AAC1B0N,cAAQzB,KAAR,CAAcwC,OAAd,GAAwBjJ,KAAxB;AACD,KAFM,MAEA;AACLkI,cAAQvB,YAAR,CAAqBnM,IAArB,EAA2BwF,KAA3B;AACA;AACA;AACA;AACA;AACA,UAAIxF,QAAQ,OAAZ,EAAqB;AACnB0N,gBAAQ1N,IAAR,IAAgBwF,KAAhB;AACD;AACF;AACF;AACF,CAlBD;;AAoBA;;;;;;;;AAQAoH,OAAO8B,YAAP,GAAsB,UAAUC,MAAV,EAAkBC,YAAlB,EAAgCC,YAAhC,EAA8C;AAClE,MAAIC,KAAKH,UAAU,EAAnB;AACA,MAAII,MAAMH,gBAAgB1O,QAA1B;AACA,MAAI8O,WAAWD,IAAI5L,aAAJ,CAAkB,QAAlB,CAAf;AACA6L,WAASF,EAAT,GAAcA,EAAd;AACAE,WAASC,GAAT,GAAe,eAAf;AACAD,WAAS/C,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACA,MAAI2C,YAAJ,EAAkB;AAChBG,aAASE,MAAT,GAAkB,cAAQlQ,IAAR,CAAa6P,YAAb,EAA2B,IAA3B,EAAiCG,QAAjC,CAAlB;AACD;AACDD,MAAItC,IAAJ,CAASH,WAAT,CAAqB0C,QAArB;AACA,SAAO,kCAAmCA;AAA1C;AACD,CAZD;;kBAcepC,M;;;;;;;;;;;;;;;;;;ACjKf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIuC,aAAa,EAAjB;;AAEA;;;;;;;;;;;AAzBA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AAUA;;AAqBAA,WAAWrH,IAAX,GAAkB,UAAUsH,QAAV,EAAoBC,aAApB,EAAmC;AACnD,MAAI,CAAC,gBAAS/J,GAAT,CAAa,gBAASG,GAAT,CAAaU,YAA1B,CAAD,IAA4CzF,OAAO4O,gBAAvD,EAAyE;AACvE,QAAI/L,MAAM4L,WAAWI,cAAX,EAAV;AACA7O,WAAO4O,gBAAP,CAAwB,UAAxB,EAAoCH,WAAWK,IAA/C,EAAqD,KAArD;AACA;AACA,oBAASjK,GAAT,CAAa,gBAASE,GAAT,CAAaU,YAA1B,EAAwC,IAAxC;AACA;AACA,oBAASZ,GAAT,CAAa,gBAASE,GAAT,CAAaO,gBAA1B,EAA4CoJ,QAA5C;AACA;AACA,oBAAS7J,GAAT,CAAa,gBAASE,GAAT,CAAaQ,sBAA1B,EAAkDoJ,aAAlD;AACA;AACA,oBAAS9J,GAAT,CAAa,gBAASE,GAAT,CAAaW,gBAA1B,EAA4C+I,WAAWK,IAAvD;AACA;AACA;AACA,oBAASjK,GAAT,CAAa,gBAASE,GAAT,CAAaa,WAA1B,EAAuC/C,GAAvC;AACA;AACA;AACA,oBAASgC,GAAT,CAAa,gBAASE,GAAT,CAAaY,iBAA1B,EAA6C,cAAQ5F,GAAR,EAA7C;AACA;AACA,QAAIgP,eAAe,EAAE,eAAevP,SAASwP,QAA1B,EAAnB;AACA,QAAI;AACFP,iBAAWlG,OAAX,CAAmB1F,GAAnB,EAAwBkM,YAAxB;AACD,KAFD,CAEE,OAAO3P,GAAP,EAAY;AACZ;AACA,UAAIuP,aAAJ,EAAmB;AACjBA,sBAAc9L,GAAd,EAAmBzD,GAAnB;AACD;AACF;AACF;AACF,CA7BD;;AA+BA;;;AAGAqP,WAAWQ,OAAX,GAAqB,YAAY;AAC/B,MAAI,gBAASrK,GAAT,CAAa,gBAASG,GAAT,CAAaU,YAA1B,CAAJ,EAA6C;AAC3C,QAAIzF,OAAOkP,mBAAX,EAAgC;AAC9BlP,aAAOkP,mBAAP,CAA2B,UAA3B,EAAuC,8BACnC,gBAAStK,GAAT,CAAa,gBAASG,GAAT,CAAaW,gBAA1B,CADJ,EACkD,KADlD;AAED;AACD,oBAASb,GAAT,CAAa,gBAASE,GAAT,CAAaU,YAA1B,EAAwC,KAAxC;AACA,oBAASZ,GAAT,CAAa,gBAASE,GAAT,CAAaO,gBAA1B,EAA4C,IAA5C;AACA,oBAAST,GAAT,CAAa,gBAASE,GAAT,CAAaQ,sBAA1B,EAAkD,IAAlD;AACA,oBAASV,GAAT,CAAa,gBAASE,GAAT,CAAaW,gBAA1B,EAA4C,IAA5C;AACA,oBAASb,GAAT,CAAa,gBAASE,GAAT,CAAaa,WAA1B,EAAuC,IAAvC;AACA,oBAASf,GAAT,CAAa,gBAASE,GAAT,CAAaY,iBAA1B,EAA6C,CAA7C;AACD;AACF,CAbD;;AAeA;;;;;;;;;;;;;;;;AAgBA8I,WAAWU,GAAX,GAAiB,UAAUC,OAAV,EAAmBC,SAAnB,EAA8BC,cAA9B,EAA8C;AAC7D,kBAAS9F,IAAT,CAAc,cAAd,EAA8B4F,OAA9B;AACAX,aAAWc,KAAX,CAAiB,KAAjB,EAAwBH,OAAxB,EAAiCC,SAAjC,EAA4CC,cAA5C;AACD,CAHD;;AAKA;;;;;;;;;;;;;;;;;AAiBAb,WAAWlG,OAAX,GAAqB,UAAU6G,OAAV,EAAmBC,SAAnB,EAA8BC,cAA9B,EAA8C;AACjE,MAAI/O,QAAQ,IAAZ;AACA;AACA,MAAIiP,eAAef,WAAWgB,gBAAX,EAAnB;AACA,MAAID,YAAJ,EAAkB;AAChBjP,YAAQ,EAAR;AACA,SAAK,IAAImE,GAAT,IAAgB8K,YAAhB,EAA8B;AAC5BjP,YAAMmE,GAAN,IAAa8K,aAAa9K,GAAb,CAAb;AACD;AACF;AACD;AACA,MAAI2K,SAAJ,EAAe;AACb9O,YAAQA,SAAS,EAAjB;AACA,SAAK,IAAImE,GAAT,IAAgB2K,SAAhB,EAA2B;AACzB9O,YAAMmE,GAAN,IAAa2K,UAAU3K,GAAV,CAAb;AACD;AACF;AACD,kBAAS8E,IAAT,CAAc,kBAAd,EAAkC4F,OAAlC;AACAX,aAAWc,KAAX,CAAiB,IAAjB,EAAuBH,OAAvB,EAAgC7O,KAAhC,EAAuC+O,cAAvC;AACD,CAnBD;;AAqBA;;;;;AAKAb,WAAWiB,kBAAX,GAAgC,YAAY;AAC1C,kBAAS7K,GAAT,CAAa,gBAASE,GAAT,CAAaS,kBAA1B,EAA8C,IAA9C;AACAxF,SAAO2P,OAAP,CAAeC,IAAf;AACD,CAHD;;AAKA;;;;;;;;;AASAnB,WAAWc,KAAX,GAAmB,UAAUhH,OAAV,EAAmB6G,OAAnB,EAA4BC,SAA5B,EAAuCC,cAAvC,EAAuD;AACxE,MAAI,CAACF,OAAD,IAAY,CAACC,SAAjB,EAA4B;AAC1B;AACD;AACD,MAAIxM,MAAMuM,WAAWX,WAAWI,cAAX,EAArB;AACA,MAAItO,QAAQ8O,aAAa,EAAzB;AACA,MAAIQ,YAAY,cAAQ9P,GAAR,EAAhB;AACA,kBAAS8E,GAAT,CAAa,gBAASE,GAAT,CAAaY,iBAA1B,EAA6CkK,SAA7C;AACAtP,QAAM,eAAN,IAAyBsP,SAAzB;AACA,MAAItH,OAAJ,EAAa;AACXkG,eAAWqB,eAAX,CAA2BvP,KAA3B,EAAkC,EAAlC,EAAsCsC,GAAtC;AACA,oBAASsG,KAAT,CAAe,qBAAf,EAAsC,MAAtC,EAA8CtG,GAA9C,EAAmD,QAAnD,EAA6DtC,KAA7D;AACD,GAHD,MAGO;AACLkO,eAAWsB,YAAX,CAAwBxP,KAAxB,EAA+B,EAA/B,EAAmCsC,GAAnC;AACA,oBAASsG,KAAT,CAAe,kBAAf,EAAmC,MAAnC,EAA2CtG,GAA3C,EAAgD,QAAhD,EAA0DtC,KAA1D;AACD;AACD,kBAASsE,GAAT,CAAa,gBAASE,GAAT,CAAaa,WAA1B,EAAuC/C,GAAvC;AACA,MAAIyM,cAAJ,EAAoB;AAClB,QAAIZ,WAAW,wCACX,gBAAS9J,GAAT,CAAa,gBAASG,GAAT,CAAaO,gBAA1B,CADJ;AAEA,QAAIoJ,QAAJ,EAAc;AACZA,eAAS7L,GAAT,EAActC,KAAd;AACD;AACF;AACF,CAxBD;;AA0BA;;;;;;AAMAkO,WAAWK,IAAX,GAAkB,UAAUpP,GAAV,EAAe;AAC/B,MAAImD,MAAM4L,WAAWI,cAAX,EAAV;AACA,kBAASrF,IAAT,CAAc,cAAd,EAA8B,MAA9B,EAAsC3G,GAAtC,EAA2C,MAA3C,EAAmDnD,GAAnD;AACA;AACA,MAAI,gBAASkF,GAAT,CAAa,gBAASG,GAAT,CAAaS,kBAA1B,CAAJ,EAAmD;AACjD,oBAASX,GAAT,CAAa,gBAASE,GAAT,CAAaS,kBAA1B,EAA8C,KAA9C;AACA;AACD;AACD;AACA;AACA;AACA,MAAI,CAAC9F,IAAIa,KAAT,EAAgB;AACd;AACD;AACD,MAAIA,QAAQb,IAAIa,KAAhB;AACA,MAAIsP,YAAYtP,MAAM,eAAN,CAAhB;AACA;AACA;AACA;AACA,MAAIsC,OAAO,gBAAS+B,GAAT,CAAa,gBAASG,GAAT,CAAaa,WAA1B,CAAX,EAAmD;AACjD,oBAASf,GAAT,CAAa,gBAASE,GAAT,CAAaY,iBAA1B,EAA6CkK,SAA7C;AACApB,eAAWqB,eAAX,CAA2BvP,KAA3B,EAAkC,EAAlC,EAAsCsC,GAAtC;AACA,oBAASsG,KAAT,CAAe,qBAAf,EAAsC,MAAtC,EAA8CtG,GAA9C,EAAmD,QAAnD,EAA6DtC,KAA7D;AACD,GAJD,MAIO;AACL,QAAIwJ,UAAUvJ,SAAS,gBAASoE,GAAT,CAAa,gBAASG,GAAT,CAAaY,iBAA1B,CAAT,EAAuD,EAAvD,CAAd;AACApF,UAAM,UAAN,IAAqBsP,YAAY9F,OAAjC;AACAxJ,UAAM,aAAN,IAAuB,gBAASqE,GAAT,CAAa,gBAASG,GAAT,CAAaa,WAA1B,CAAvB;AACA,oBAASf,GAAT,CAAa,gBAASE,GAAT,CAAaY,iBAA1B,EAA6CkK,SAA7C;AACA,oBAAShL,GAAT,CAAa,gBAASE,GAAT,CAAaa,WAA1B,EAAuC/C,GAAvC;AACA,QAAI6L,WAAW,wCACX,gBAAS9J,GAAT,CAAa,gBAASG,GAAT,CAAaO,gBAA1B,CADJ;AAEA,QAAIoJ,QAAJ,EAAc;AACZA,eAAS7L,GAAT,EAActC,KAAd;AACD;AACF;AACF,CAnCD;;AAqCA;;;;AAIAkO,WAAWI,cAAX,GAA4B,YAAY;AACtC,SAAO7O,OAAO2C,QAAP,CAAgBD,IAAvB;AACD,CAFD;;AAIA;;;;AAIA+L,WAAWgB,gBAAX,GAA8B,YAAY;AACxC,SAAO,sBAAuBzP,OAAO2P,OAAP,CAAepP;AAA7C;AACD,CAFD;;AAIA;;;;;;AAMAkO,WAAWsB,YAAX,GAA0B,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBb,OAAvB,EAAgC;AACxD;AACA;AACA;AACA,MAAIc,SAASzB,WAAW0B,SAAX,EAAb;AACA,MAAIC,YAAYF,OAAOG,aAAP,CAAqBV,OAArB,CAA6BS,SAA7C;AACA,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnCA,cAAUtR,IAAV,CAAekB,OAAO2P,OAAtB,EAA+BK,IAA/B,EAAqCC,KAArC,EAA4Cb,OAA5C;AACD,GAFD,MAEO;AACL,UAAM,IAAIkB,KAAJ,CAAU,sCAAV,CAAN;AACD;AACF,CAXD;;AAaA;;;;;;AAMA7B,WAAWqB,eAAX,GAA6B,UAAUE,IAAV,EAAgBC,KAAhB,EAAuBb,OAAvB,EAAgC;AAC3D,MAAIc,SAASzB,WAAW0B,SAAX,EAAb;AACA,MAAII,eAAeL,OAAOG,aAAP,CAAqBV,OAArB,CAA6BY,YAAhD;AACA,MAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;AACtCA,iBAAazR,IAAb,CAAkBkB,OAAO2P,OAAzB,EAAkCK,IAAlC,EAAwCC,KAAxC,EAA+Cb,OAA/C;AACD,GAFD,MAEO;AACL,UAAM,IAAIkB,KAAJ,CAAU,wCAAV,CAAN;AACD;AACF,CARD;;AAUA;;;AAGA7B,WAAW0B,SAAX,GAAuB,YAAY;AACjC,MAAIK,QAAQhR,SAASiR,cAAT,CAAwB,gBAAxB,CAAZ;AACA,MAAI,CAACD,KAAL,EAAY;AACVA,YAAQ,cAAOxC,YAAP,CAAoB,gBAApB,CAAR;AACD;AACD,SAAO,kCAAmCwC;AAA1C;AACD,CAND;;kBAQe/B,U;;;;;;;;;;;;;;;;;;AC1Rf;;;;AACA;;;;AACA;;;;;;AAEA,IAAIiC,SAAS,EAAb;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AAvBA;AACA;AACA;AACA;;AAEA;;;;;;;AAmCAA,OAAOC,QAAP;;AAEA;;;;;;;AAOAD,OAAOE,KAAP,GAAe,UAAU/N,GAAV,EAAe;AAC5B,MAAIgO,MAAMrR,SAASiD,aAAT,CAAuB,GAAvB,CAAV;AACA;AACAoO,MAAInO,IAAJ,GAAWG,GAAX;AACA;AACAgO,MAAInO,IAAJ,GAAWmO,IAAInO,IAAf;AACA,MAAIkO,QAAQ;AACVlO,UAAMmO,IAAInO,IADA;AAEVI,cAAU+N,IAAI/N,QAFJ;AAGVC,UAAM8N,IAAI9N,IAHA;AAIV+N,cAAUD,IAAIC,QAJJ;AAKVC,UAAMF,IAAIE,IALA;AAMVC,cAAUH,IAAIG,QANJ;AAOVC,YAAQJ,IAAII,MAPF;AAQVC,UAAML,IAAIK,IARA;AASVC,cAAUN,IAAIM,QATJ;AAUVC,cAAUP,IAAIO;AAEhB;AAZY,GAAZ,CAaAR,MAAMS,MAAN,GAAeT,MAAM9N,QAAN,GAAiB,IAAjB,GAAwB8N,MAAM7N,IAA7C;AACA;AACA;AACA,MAAI,CAAC6N,MAAMI,QAAP,IAAmBJ,MAAMI,QAAN,CAAe,CAAf,KAAqB,GAA5C,EAAiD;AAC/CJ,UAAMI,QAAN,GAAiB,MAAMJ,MAAMI,QAA7B;AACD;AACD,SAAOJ,KAAP;AACD,CA1BD;;AA4BA;;;;;;;;AAQAF,OAAOY,QAAP,GAAkB,UAAUC,QAAV,EAAoBC,YAApB,EAAkC;AAClD,MAAIZ,QAAQF,OAAOE,KAAP,CAAaW,QAAb,CAAZ;AACA,SAAOC,eAAeZ,MAAMlO,IAArB,GAA4BgO,OAAOe,MAAP,CAAcb,MAAMlO,IAApB,CAAnC;AACD,CAHD;;AAKA;;;;;;AAMAgO,OAAOgB,IAAP,GAAc,UAAU7O,GAAV,EAAe;AAC3B,MAAI+N,QAAQF,OAAOE,KAAP,CAAa/N,GAAb,CAAZ;AACA,SAAO+N,MAAMI,QAAb;AACD,CAHD;;AAKA;;;;;;AAMAN,OAAOW,MAAP,GAAgB,UAAUxO,GAAV,EAAe;AAC7B,MAAI+N,QAAQF,OAAOE,KAAP,CAAa/N,GAAb,CAAZ;AACA,SAAO+N,MAAMS,MAAb;AACD,CAHD;;AAKA;;;;;;;;;AASAX,OAAOiB,QAAP,GAAkB,UAAU9O,GAAV,EAAe+O,QAAf,EAAyB;AACzC,MAAIC,QAAQ,qBAAuB,iBAAUjN,GAAV,CAAc,gBAAd,CAAD,IAAqC,EAAvE;AACA,MAAIiN,KAAJ,EAAW;AACT,QAAIC,OAAOF,YAAY,EAAvB;AACAC,YAAQA,MAAMtJ,OAAN,CAAc,UAAd,EAA0BuJ,IAA1B,CAAR;;AAEA;AACA,QAAIC,YAAY,iBAAUvJ,SAAV,CAAoB3F,GAApB,EAAyB,GAAzB,CAAhB;AACA,QAAImP,aAAa,iBAAUxJ,SAAV,CAAoBuJ,UAAU,CAAV,CAApB,EAAkC,GAAlC,CAAjB;AACA,QAAIL,OAAOM,WAAW,CAAX,CAAX;AACA,QAAIC,WAAWD,WAAW,CAAX,CAAf;AACA,QAAIE,WAAWF,WAAW,CAAX,CAAf;AACA,QAAIG,UAAUJ,UAAU,CAAV,CAAd;AACA,QAAIK,UAAUL,UAAU,CAAV,CAAd;;AAEA;AACA,QAAI,iBAAUlK,UAAV,CAAqBgK,KAArB,EAA4B,GAA5B,CAAJ,EAAsC;AACpC;AACA;AACA;AACA;AACA;AACA,UAAII,QAAJ,EAAc;AACZJ,gBAAQA,MAAMtJ,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAR;AACD;AACD2J,kBAAYL,KAAZ;AACD,KAVD,MAUO,IAAI,iBAAUhK,UAAV,CAAqBgK,KAArB,EAA4B,GAA5B,CAAJ,EAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,iBAAU3J,QAAV,CAAmBwJ,IAAnB,EAAyB,GAAzB,CAAJ,EAAmC;AACjCG,gBAAQ,UAAUA,KAAlB;AACD,OAFD,MAEO;AACL,YAAIQ,MAAMX,KAAKzJ,WAAL,CAAiB,GAAjB,CAAV;AACA,YAAIoK,MAAM,CAAC,CAAX,EAAc;AACZX,iBAAOA,KAAKY,SAAL,CAAe,CAAf,EAAkBD,GAAlB,CAAP;AACD;AACF;AACDX,cAAQG,KAAR;AACD,KAlBM,MAkBA;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,iBAAU3J,QAAV,CAAmBwJ,IAAnB,EAAyB,GAAzB,KAAiC,iBAAU7J,UAAV,CAAqBgK,KAArB,EAA4B,GAA5B,CAArC,EAAuE;AACrEA,gBAAQA,MAAMS,SAAN,CAAgB,CAAhB,CAAR;AACD;AACDZ,cAAQG,KAAR;AACD;;AAED;AACAhP,UAAM6O,OAAOO,QAAP,GAAkBC,QAAlB,GAA6BC,OAA7B,GAAuCC,OAA7C;AACD;AACD,SAAOvP,GAAP;AACD,CA/DD;;AAiEA;;;;;;;;;AASA6N,OAAO6B,gBAAP,GAA0B,UAAU1P,GAAV,EAAe2P,UAAf,EAA2B;AACnD,MAAI1J,SAAS,iBAAUN,SAAV,CAAoB3F,GAApB,EAAyB,GAAzB,CAAb;AACAA,QAAMiG,OAAO,CAAP,CAAN;AACA,MAAI2J,QAAQ,iBAAU/K,QAAV,CAAmB7E,GAAnB,EAAwB,GAAxB,IAA+B,GAA/B,GAAqC,GAAjD;AACA,OAAK,IAAI6B,GAAT,IAAgB8N,UAAhB,EAA4B;AAC1B3P,WAAO4P,QAAQ/N,GAAf;AACA,QAAI8N,WAAW9N,GAAX,CAAJ,EAAqB;AACnB7B,aAAO,MAAM2P,WAAW9N,GAAX,CAAb;AACD;AACD+N,YAAQ,GAAR;AACD;AACD;AACA,SAAO5P,MAAMiG,OAAO,CAAP,CAAN,GAAkBA,OAAO,CAAP,CAAzB;AACD,CAbD;;AAeA;;;;;;;AAOA4H,OAAOgC,gBAAP,GAA0B,UAAU7P,GAAV,EAAe2P,UAAf,EAA2B;AACnD,MAAI1J,SAAS,iBAAUN,SAAV,CAAoB3F,GAApB,EAAyB,GAAzB,CAAb;AACAA,QAAMiG,OAAO,CAAP,CAAN;AACA,kBAAS3F,IAAT,CAAcqP,UAAd,EAA0B,UAAUG,KAAV,EAAiB;AACzC;AACA,QAAIC,QAAQ,IAAIC,MAAJ,CAAW,WAAWF,KAAX,GAAmB,0BAA9B,EAA0D,GAA1D,CAAZ;AACA9P,UAAMA,IAAI0F,OAAJ,CAAYqK,KAAZ,EAAmB,UAAUE,CAAV,EAAaL,KAAb,EAAoB;AAC3C,aAAOA,SAAS,GAAT,GAAeA,KAAf,GAAuB,EAA9B;AACD,KAFK,CAAN;AAGD,GAND;AAOA;AACA,MAAI,iBAAUvK,QAAV,CAAmBrF,GAAnB,EAAwB,GAAxB,CAAJ,EAAkC;AAChCA,UAAMA,IAAIhE,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACD;AACD;AACA,SAAOgE,MAAMiG,OAAO,CAAP,CAAN,GAAkBA,OAAO,CAAP,CAAzB;AACD,CAhBD;;AAkBA;;;;;;AAMA4H,OAAOqC,0BAAP,GAAoC,UAAUlQ,GAAV,EAAe;AACjD;AACA,MAAImQ,kBAAkB,iBAAUpO,GAAV,CAAc,gCAAd,KAAmD,EAAzE;AACA,MAAIkE,SAAS,iBAAUN,SAAV,CAAoB3F,GAApB,EAAyB,GAAzB,CAAb;AACAA,QAAMiG,OAAO,CAAP,CAAN;AACA,MAAI2J,QAAQ,iBAAU/K,QAAV,CAAmB7E,GAAnB,EAAwB,GAAxB,IAA+B,GAA/B,GAAqC,GAAjD;AACA;AACAA,SAAOmQ,kBAAkBP,QAAQO,eAA1B,GAA4C,EAAnD;AACA;AACA,SAAOnQ,MAAMiG,OAAO,CAAP,CAAN,GAAkBA,OAAO,CAAP,CAAzB;AACD,CAVD;;AAYA;;;;;;;AAOA4H,OAAOuC,UAAP,GAAoB,UAAUpQ,GAAV,EAAe;AACjC,SAAOA,IAAI0F,OAAJ,CAAY,iBAAZ,EAA+B,IAA/B,CAAP;AACD,CAFD;;AAIA;;;;;;AAMAmI,OAAOe,MAAP,GAAgB,UAAU5O,GAAV,EAAe;AAC7B,MAAIgB,MAAM,iBAAU2E,SAAV,CAAoB3F,GAApB,EAAyB,GAAzB,CAAV;AACA,SAAOgB,IAAI,CAAJ,CAAP;AACD,CAHD;;kBAKe6M,M;;;;;;;;;;;ACnRf;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB,EAAE;;AAE/C;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACTA;;AACA;;;;AACA;;;;;;AAEA,IAAIwC,WAAW,EAAf;;AAEA;;;;;;;;;;AAnBA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;AAkBAA,SAAStO,GAAT,GAAe,UAAUF,GAAV,EAAe;AAC5B,MAAIyO,UAAUD,SAASE,QAAT,EAAd;AACA,MAAI,EAAE1O,OAAOyO,OAAT,CAAJ,EAAuB;AACrB;AACD;AACD,MAAIE,OAAOF,QAAQzO,GAAR,CAAX;AACA;AACA,MAAIwO,SAASI,MAAT,CAAgBD,IAAhB,CAAJ,EAA2B;AACzBH,aAASK,YAAT,CAAsBF,IAAtB;AACA,WAAOA,KAAK,MAAL,CAAP;AACD;AACD;AACAH,WAASM,MAAT,CAAgB9O,GAAhB;AACD,CAbD;;AAeA;;;;;;;;;;AAUAwO,SAASrO,GAAT,GAAe,UAAUH,GAAV,EAAesL,IAAf,EAAqByD,YAArB,EAAmC;AAChD,MAAIC,WAAWlT,SAASiT,YAAT,EAAuB,EAAvB,CAAf;AACA,MAAIE,MAAMnT,SAAS,iBAAUoE,GAAV,CAAc,WAAd,CAAT,EAAqC,EAArC,CAAV;AACA,MAAI8O,YAAY,CAAZ,IAAiBC,OAAO,CAA5B,EAA+B;AAC7B;AACD;AACD,MAAIR,UAAUD,SAASE,QAAT,EAAd;AACAD,UAAQzO,GAAR,IAAewO,SAASU,OAAT,CAAiBlP,GAAjB,EAAsBsL,IAAtB,EAA4B0D,QAA5B,CAAf;AACA;AACA;AACAG,aAAWX,SAASY,OAApB,EAA6B,IAA7B;AACD,CAXD;;AAaA;;;;;AAKAZ,SAASM,MAAT,GAAkB,UAAU9O,GAAV,EAAe;AAC/B,MAAIyO,UAAUD,SAASE,QAAT,EAAd;AACA,MAAI1O,OAAOyO,OAAX,EAAoB;AAClB,WAAOA,QAAQzO,GAAR,CAAP;AACD;AACF,CALD;;AAOA;;;AAGAwO,SAAS1L,KAAT,GAAiB,YAAY;AAC3B0L,WAASE,QAAT,CAAkB,EAAlB;AACD,CAFD;;AAIA;;;;AAIAF,SAASY,OAAT,GAAmB,YAAY;AAC7B,MAAIX,UAAUD,SAASE,QAAT,EAAd;AACA,OAAK,IAAI1O,GAAT,IAAgByO,OAAhB,EAAyB;AACvB,QAAIE,OAAOF,QAAQzO,GAAR,CAAX;AACA;AACA,QAAI,CAACwO,SAASI,MAAT,CAAgBD,IAAhB,CAAL,EAA4B;AAC1B,aAAOF,QAAQzO,GAAR,CAAP;AACD;AACF;AACD;AACAwO,WAASa,KAAT;AACD,CAXD;;AAaA;AACA;;;;;;;;;;;;;;AAcAb,SAASc,IAAT;;AAEA;;;;;AAKAd,SAASI,MAAT,GAAkB,UAAUD,IAAV,EAAgB;AAChC;AACA,MAAI,EAAEA,QAAQ,UAAUA,IAApB,CAAJ,EAA+B;AAC7B,WAAO,KAAP;AACD;AACD;AACA;AACA;AACA,MAAIK,WAAWL,KAAK,MAAL,CAAf;AACAK,aAAWO,MAAMP,QAAN,IAAkBQ,QAAlB,GAA6BR,QAAxC;AACA,MAAI7D,YAAYwD,KAAK,MAAL,CAAhB;AACA,MAAIc,MAAM,cAAQpU,GAAR,KAAgB8P,SAA1B;AACA,SAAOsE,MAAMT,QAAb;AACD,CAbD;;AAeA;;;;;;AAMAR,SAASa,KAAT,GAAiB,YAAY;AAC3B,MAAIZ,UAAUD,SAASE,QAAT,EAAd;AACA,MAAIO,MAAMnT,SAAS,iBAAUoE,GAAV,CAAc,WAAd,CAAT,EAAqC,EAArC,CAAV;AACA+O,QAAMM,MAAMN,GAAN,IAAaO,QAAb,GAAwBP,GAA9B;AACA,MAAIS,QAAQ9P,OAAO+P,IAAP,CAAYlB,OAAZ,EAAqB1P,MAArB,GAA8BkQ,GAA1C;AACA;AACA,MAAIS,SAAS,CAAb,EAAgB;AACd;AACD;;AAED;AACA,OAAK,IAAI7Q,IAAI,CAAb,EAAgBA,IAAI6Q,KAApB,EAA2B7Q,GAA3B,EAAgC;AAC9B,QAAI+Q,MAAM,EAACC,OAAOL,QAAR,EAAV;AACA,SAAK,IAAIxP,GAAT,IAAgByO,OAAhB,EAAyB;AACvB,UAAIA,QAAQzO,GAAR,EAAa6P,KAAb,GAAqBD,IAAIC,KAA7B,EAAoC;AAClCD,YAAI5P,GAAJ,GAAUA,GAAV;AACA4P,YAAIC,KAAJ,GAAYpB,QAAQzO,GAAR,EAAa6P,KAAzB;AACD;AACF;AACD,WAAOpB,QAAQmB,IAAI5P,GAAZ,CAAP;AACD;AACF,CArBD;;AAuBA;;;;;;;AAOAwO,SAASU,OAAT,GAAmB,UAAUlP,GAAV,EAAesL,IAAf,EAAqB0D,QAArB,EAA+B;AAChD,MAAIL,OAAO,EAAC,QAAQrD,IAAT,EAAe,QAAQ0D,QAAvB,EAAiC,QAAQ,cAAQ3T,GAAR,EAAzC,EAAwD,SAAS,CAAjE,EAAX;AACAmT,WAASK,YAAT,CAAsBF,IAAtB;AACA,SAAOA,IAAP;AACD,CAJD;;AAMA;;;;;;AAMAH,SAASK,YAAT,GAAwB,UAAUF,IAAV,EAAgB;AACtC,MAAIkB,QAAQ/T,SAAS,gBAASoE,GAAT,CAAa,gBAASG,GAAT,CAAaG,aAA1B,CAAT,EAAmD,EAAnD,KAA0D,CAAtE;AACAqP;AACA,kBAAS1P,GAAT,CAAa,gBAASE,GAAT,CAAaG,aAA1B,EAAyCqP,KAAzC;;AAEAlB,OAAKkB,KAAL,GAAaA,KAAb;AACD,CAND;;AAQA;;;;;;AAMArB,SAASE,QAAT,GAAoB,UAAUoB,WAAV,EAAuB;AACzC,MAAIA,eAAe,CAAC,gBAAS/P,GAAT,CAAa,gBAASM,GAAT,CAAaK,aAA1B,CAApB,EAA8D;AAC5D,WAAO,+CACH,gBAASP,GAAT,CAAa,gBAASE,GAAT,CAAaK,aAA1B,EAA0CoP,eAAe,EAAzD;AADJ;AAED;AACD,SAAO,+CACH,gBAAS5P,GAAT,CAAa,gBAASG,GAAT,CAAaK,aAA1B;AADJ;AAED,CAPD;;kBASe8N,Q;;;;;;;;;;;;;;;;;;AC3Mf;;;;;;AACA,IAAIuB,kBAAkB,EAAtB;;AAEA;;;;;;AAXA;;;;;;AAMA;;AAWAA,gBAAgB7P,GAAhB,GAAsB,UAAU8P,IAAV,EAAgB;AACpC,MAAIA,KAAKC,SAAT,EAAoB;AAClB,WAAOD,KAAKC,SAAZ;AACD,GAFD,MAEO;AACL,WAAOD,KAAK5G,SAAL,IAAkB4G,KAAK5G,SAAL,CAAe8G,KAAf,CAAqB,MAArB,CAAlB,IAAkD,EAAzD;AACD;AACF,CAND;;AAQA;;;;;;;AAOAH,gBAAgB/M,QAAhB,GAA2B,UAAUgN,IAAV,EAAgBG,GAAhB,EAAqB;AAC9C,MAAI,CAACA,GAAL,EAAU;AACR,WAAO,KAAP;AACD,GAFD,MAEO,IAAIH,KAAKC,SAAT,EAAoB;AACzB,WAAOD,KAAKC,SAAL,CAAejN,QAAf,CAAwBmN,GAAxB,CAAP;AACD,GAFM,MAEA;AACL,QAAIC,UAAUL,gBAAgB7P,GAAhB,CAAoB8P,IAApB,CAAd;AACA,WAAO,gBAAS/Q,IAAT,CAAcmR,OAAd,EAAuB,UAAUC,IAAV,EAAgB;AAC5C,aAAOA,QAAQF,GAAf;AACD,KAFM,CAAP;AAGD;AACF,CAXD;;AAaA;;;;;;AAMAJ,gBAAgBtF,GAAhB,GAAsB,UAAUuF,IAAV,EAAgBG,GAAhB,EAAqB;AACzC,MAAIA,GAAJ,EAAS;AACP,QAAIH,KAAKC,SAAT,EAAoB;AAClBD,WAAKC,SAAL,CAAexF,GAAf,CAAmB0F,GAAnB;AACD,KAFD,MAEO,IAAI,CAACJ,gBAAgB/M,QAAhB,CAAyBgN,IAAzB,EAA+BG,GAA/B,CAAL,EAA0C;AAC/CH,WAAK5G,SAAL,IAAkB,MAAM+G,GAAxB;AACD;AACF;AACF,CARD;;AAUA;;;;;;AAMAJ,gBAAgBjB,MAAhB,GAAyB,UAAUkB,IAAV,EAAgBG,GAAhB,EAAqB;AAC5C,MAAIA,GAAJ,EAAS;AACP,QAAIH,KAAKC,SAAT,EAAoB;AAClBD,WAAKC,SAAL,CAAenB,MAAf,CAAsBqB,GAAtB;AACD,KAFD,MAEO;AACL,UAAIC,UAAUL,gBAAgB7P,GAAhB,CAAoB8P,IAApB,CAAd;AACA,UAAIM,aAAa,gBAASpR,MAAT,CAAgBkR,OAAhB,EAAyB,UAAUC,IAAV,EAAgB;AACxD,eAAOA,QAAQF,GAAf;AACD,OAFgB,CAAjB;AAGAH,WAAK5G,SAAL,GAAiBkH,WAAWpM,IAAX,CAAgB,GAAhB,CAAjB;AACD;AACF;AACF,CAZD;;kBAce6L,e;;;;;;;;;;;;;;;;;;AC/Df;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AA3BA;AACA;AACA;AACA;;AAEA;;;;;;;;AAQA;AACA;AACA;AACA;;AAaA,IAAIQ,iBAAiB,EAArB;AACAA,eAAeC,MAAf,GAAwBD,eAAeC,MAAf,IAAyB,EAAjD;AACAD,eAAe3V,IAAf,GAAsB2V,eAAe3V,IAAf,IAAuB,EAA7C;AACA2V,eAAepS,GAAf,GAAqBoS,eAAepS,GAAf,IAAsB,EAA3C;;AAEA;;;;;;;;;;;;;;AAcAoS,eAAeE,IAAf,GAAsB,UAAUrD,IAAV,EAAgBjP,GAAhB,EAAqBvD,IAArB,EAA2B8V,MAA3B,EAAmC;AACvD,kBAASjM,KAAT,CAAe,eAAf,EAAgC2I,IAAhC,EAAsCjP,GAAtC,EAA2CvD,IAA3C;AACA,MAAI+V,OAAOvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAvC;;AAEA1S,QAAMoS,eAAeO,YAAf,CAA4B1D,IAA5B,EAAkCjP,GAAlC,CAAN;;AAEA;AACA;AACA;AACA,MAAI4S,YAAYnW,QAAQ,MAAMuD,GAA9B;AACA,MAAI6S,QAAQT,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyB2D,SAAzB,CAAZ;AACA,MAAIE,OAAJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIrW,QAAQ,qBAAZ,EAA6B;AAC3B;AACAqW,cAAUV,eAAepS,GAAf,CAAmB+B,GAAnB,CAAuBkN,IAAvB,EAA6BxS,IAA7B,CAAV;AACA,QAAIqW,WAAW9S,OAAO8S,OAAtB,EAA+B;AAC7B,UAAIjW,MAAM2V,OAAO,cAAQ3U,SAAR,CAAkBO,gBAAzB,GACS,cAAQP,SAAR,CAAkBE,iBADrC;AAEA,oBAAQvB,QAAR,CAAiBK,GAAjB,EAAsB,EAAC,QAAQJ,IAAT,EAAe,OAAOqW,OAAtB,EAAtB;AACAV,qBAAeW,cAAf,CAA8B9D,IAA9B,EAAoCxS,IAApC,EAA0CqW,OAA1C;AACA;AACA;AACA,UAAIE,iBAAiB,cAAQvX,IAAR,CAAa2W,eAAea,eAA5B,EAA6C,IAA7C,EACShE,IADT,EACexS,IADf,EACqBqW,OADrB,CAArB;AAEA,uBAAUI,SAAV,CAAoBL,KAApB,EAA2BG,cAA3B;AACD;AACF;;AAED;AACA;AACA,MAAIG,WAAWf,eAAe3V,IAAf,CAAoBsF,GAApB,CAAwBkN,IAAxB,EAA8BjP,GAA9B,CAAf;AACA,MAAImT,YAAYP,aAAaO,QAA7B,EAAuC;AACrC;AACA;AACA;AACAf,mBAAepS,GAAf,CAAmB2E,KAAnB,CAAyBsK,IAAzB,EAA+BkE,QAA/B;AACAf,mBAAe3V,IAAf,CAAoBkI,KAApB,CAA0BsK,IAA1B,EAAgCjP,GAAhC;AACA,QAAIoT,YAAYhB,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBkE,QAAzB,CAAhB;AACA,qBAAUE,MAAV,CAAiBD,SAAjB,EAA4BP,KAA5B;AACD;AACDT,iBAAe3V,IAAf,CAAoBuF,GAApB,CAAwBiN,IAAxB,EAA8BjP,GAA9B,EAAmC4S,SAAnC;AACAR,iBAAepS,GAAf,CAAmBgC,GAAnB,CAAuBiN,IAAvB,EAA6B2D,SAA7B,EAAwC5S,GAAxC;;AAEA;AACA,kBAASsG,KAAT,CAAe,wBAAf,EAAyCuM,KAAzC;AACA,mBAAUK,SAAV,CAAoBL,KAApB,EAA2BN,MAA3B;AACA,MAAIe,QAAQ,cAAQ7X,IAAR,CAAa2W,eAAekB,KAA5B,EAAmC,IAAnC,EAAyCrE,IAAzC,CAAZ;;AAEA;AACA;AACA,MAAImD,eAAeC,MAAf,CAAsBtQ,GAAtB,CAA0BkN,IAA1B,EAAgCjP,GAAhC,CAAJ,EAA0C;AACxC,QAAImT,YAAYP,aAAaO,QAA7B,EAAuC;AACrC;AACA;AACA,UAAII,KAAKnB,eAAeoB,IAAf,CAAoBvE,IAApB,EAA0BjP,GAA1B,CAAT;AACA,UAAIuT,EAAJ,EAAQ;AACNA,WAAG3K,YAAH,CAAgB,MAAhB,EAAwBnM,QAAQ,EAAhC;AACD;AACF;AACD6W;AACD,GAVD,MAUO;AACL;AACA;AACA;AACA,QAAIC,KAAKnB,eAAeqB,MAAf,CAAsBxE,IAAtB,EAA4BjP,GAA5B,EAAiCsT,KAAjC,EAAwCxK,SAAxC,EAAmDA,SAAnD,EACLgK,OADK,CAAT;AAEA,QAAIS,MAAM9W,IAAV,EAAgB;AACd8W,SAAG3K,YAAH,CAAgB,MAAhB,EAAwBnM,IAAxB;AACD;AACF;AACF,CA9ED;;AAgFA;;;;;;AAMA2V,eAAesB,MAAf,GAAwB,UAAUzE,IAAV,EAAgBxS,IAAhB,EAAsB;AAC5C,kBAASoK,IAAT,CAAc,iBAAd,EAAiCoI,IAAjC,EAAuCxS,IAAvC;AACA,MAAIuD,MAAMoS,eAAepS,GAAf,CAAmB+B,GAAnB,CAAuBkN,IAAvB,EAA6BxS,IAA7B,CAAV;AACA2V,iBAAeW,cAAf,CAA8B9D,IAA9B,EAAoCxS,IAApC,EAA0CuD,GAA1C;AACAoS,iBAAea,eAAf,CAA+BhE,IAA/B,EAAqCxS,IAArC,EAA2CuD,GAA3C;AACD,CALD;;AAOA;;;;;;;;AAQAoS,eAAeW,cAAf,GAAgC,UAAU9D,IAAV,EAAgBxS,IAAhB,EAAsBuD,GAAtB,EAA2B;AACzD,kBAASsG,KAAT,CAAe,6BAAf,EAA8C2I,IAA9C,EAAoDjP,GAApD;AACA;AACAoS,iBAAepS,GAAf,CAAmB2E,KAAnB,CAAyBsK,IAAzB,EAA+BxS,IAA/B;AACA;AACA,MAAIuD,GAAJ,EAAS;AACPoS,mBAAe3V,IAAf,CAAoBkI,KAApB,CAA0BsK,IAA1B,EAAgCjP,GAAhC;AACD;AACD,MAAI6S,QAAQT,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBxS,IAAzB,CAAZ;AACA,kBAAS6J,KAAT,CAAe,0BAAf,EAA2CuM,KAA3C;AACA;AACA,mBAAUlO,KAAV,CAAgBkO,KAAhB;AACD,CAZD;;AAcA;;;;;;;;AAQAT,eAAea,eAAf,GAAiC,UAAUhE,IAAV,EAAgBxS,IAAhB,EAAsBuD,GAAtB,EAA2B;AAC1D,MAAIwS,OAAOvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAvC;AACA,MAAI1S,GAAJ,EAAS;AACP,oBAASsG,KAAT,CAAe,8BAAf,EAA+C2I,IAA/C,EAAqDjP,GAArD;AACA,QAAInD,MAAM2V,OAAO,cAAQ3U,SAAR,CAAkBQ,SAAzB,GACS,cAAQR,SAAR,CAAkBG,UADrC;AAEA,kBAAQxB,QAAR,CAAiBK,GAAjB,EAAsB,EAAC,QAAQJ,IAAT,EAAe,OAAOuD,GAAtB,EAAtB;AACAoS,mBAAeuB,OAAf,CAAuB1E,IAAvB,EAA6BjP,GAA7B;AACD;AACF,CATD;;AAWA;;;;;;AAMAoS,eAAekB,KAAf,GAAuB,UAAUrE,IAAV,EAAgB;AACrC,kBAAS3I,KAAT,CAAe,gBAAf,EAAiC2I,IAAjC;AACA,MAAIhK,SAASmN,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyB,EAAzB,CAAb;AACA,OAAK,IAAI4D,KAAT,IAAkB,iBAAUe,aAA5B,EAA2C;AACzC,QAAIf,MAAM3R,OAAN,CAAc+D,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,UAAI4O,QAAQhB,MAAMpD,SAAN,CAAgBxK,OAAOrE,MAAvB,EAA+BiF,KAA/B,CAAqC,GAArC,CAAZ;AACA,UAAIiO,SAAS,cAAQrY,IAAR,CAAa2W,eAAepS,GAAf,CAAmB8T,MAAhC,EAAwC,IAAxC,EAA8C7E,IAA9C,CAAb;AACA,UAAI8E,QAAQ,gBAASlT,KAAT,CAAegT,KAAf,EAAsBC,MAAtB,CAAZ;AACA,sBAASxN,KAAT,CAAe,GAAf,EAAoBuM,KAApB,EAA2B,IAA3B,EAAiCgB,KAAjC,EAAwC,GAAxC,EAA6CE,KAA7C;AACA,UAAIA,KAAJ,EAAW;AACT,wBAASzN,KAAT,CAAe,cAAf,EAA+BuM,KAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAUmB,KAAV,CAAgBnB,KAAhB;AACD;AACF;AACF;AACF,CAvBD;;AAyBA;;;;;;;;;;;;;;AAcAT,eAAeqB,MAAf,GAAwB,UAAUxE,IAAV,EAAgBjP,GAAhB,EAAqBsL,YAArB,EAAmCD,YAAnC,EACpB4I,eADoB,EACHC,WADG,EACU;AAChC,kBAAS5N,KAAT,CAAe,iBAAf,EAAkC2I,IAAlC,EAAwCjP,GAAxC,EAA6C,SAA7C;AACA;AACA,MAAIwS,OAAO,wBAAkBvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAzD;AACA1S,QAAMoS,eAAeO,YAAf,CAA4B1D,IAA5B,EAAkCjP,GAAlC,CAAN;AACAoS,iBAAeC,MAAf,CAAsBrQ,GAAtB,CAA0BoQ,eAAe+B,KAAf,CAAqBC,OAA/C,EAC4BnF,IAD5B,EACkCjP,GADlC,EACuCiU,eADvC;AAEA,MAAII,MAAM7B,OAAO,QAAP,GAAkB,MAA5B;AACA,MAAIhH,MAAMH,gBAAgB1O,QAA1B;AACA,MAAI4W,KAAK/H,IAAI5L,aAAJ,CAAkByU,GAAlB,CAAT;AACA,MAAIC,OAAO,SAAPA,IAAO,GAAY;AACrB,oBAAShO,KAAT,CAAe,iBAAf,EAAkC2I,IAAlC,EAAwCjP,GAAxC,EAA6C,MAA7C;AACA;AACA,QAAIoS,eAAeC,MAAf,CAAsBtQ,GAAtB,CAA0BkN,IAA1B,EAAgCjP,GAAhC,EAAqCiU,eAArC,CAAJ,EAA2D;AACzD,sBAAS3N,KAAT,CAAe,iBAAf,EAAkC2I,IAAlC,EAAwCjP,GAAxC,EAA6C,QAA7C;AACAoS,qBAAeC,MAAf,CAAsBrQ,GAAtB,CAA0BoQ,eAAe+B,KAAf,CAAqBI,MAA/C,EAC4BtF,IAD5B,EACkCjP,GADlC,EACuCiU,eADvC;AAED;AACD,QAAIzB,QAAQe,EAAR,IAAcA,GAAGzJ,UAAjB,IAA+B0B,OAAO7O,QAAtC,IAAkD,gBAAtD,EAAkE;AAChE;AACA4W,SAAGzJ,UAAH,CAAcW,WAAd,CAA0B8I,EAA1B;AACD;AACD;AACA;AACA,QAAIjI,YAAJ,EAAkB;AAChB0F,iBAAW1F,YAAX,EAAyB,CAAzB;AACD;AACD,WAAO,IAAP;AACD,GAlBD;AAmBA,MAAI,CAACtL,GAAL,EAAU;AACR,WAAOsU,MAAP;AACD;AACD,MAAIE,QAAQpC,eAAeoC,KAAf,CAAqBxU,GAArB,CAAZ;AACAuT,KAAGtI,SAAH,GAAemH,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBuF,KAAzB,CAAf;AACA;AACA;AACA;AACA,MAAI,YAAYjB,EAAhB,EAAoB;AAClBA,OAAGkB,OAAH,GAAalB,GAAG5H,MAAH,GAAY2I,IAAzB;AACD,GAFD,MAEO;AACLf,OAAGmB,kBAAH,GAAwB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI,WAAWC,IAAX,CAAgBpB,GAAGqB,UAAnB,CAAJ,EAAoC;AAClCN;AACD;AACF,KAZD;AAaD;AACD;AACA;AACA;AACA;AACA,MAAIO,WAAWrJ,IAAIsJ,oBAAJ,CAAyB,MAAzB,EAAiC,CAAjC,KAAuCtJ,IAAItC,IAA1D;AACA,MAAIsJ,IAAJ,EAAU;AACRe,OAAGwB,KAAH,GAAW,IAAX;AACAxB,OAAG7H,GAAH,GAAS1L,GAAT;AACA;AACA6U,aAAS9K,YAAT,CAAsBwJ,EAAtB,EAA0BsB,SAASrK,UAAnC;AACD,GALD,MAKO;AACL+I,OAAGyB,GAAH,GAAS,YAAT;AACAzB,OAAG1T,IAAH,GAAUG,GAAV;AACA;AACA;AACA;AACA;AACA,QAAIiV,SAASf,cACP9B,eAAeoB,IAAf,CAAoBvE,IAApB,EAA0BiF,WAA1B,EAAuCW,QAAvC,CADO,GAC4C,IADzD;AAEA,QAAII,MAAJ,EAAY;AACVJ,eAAS9K,YAAT,CAAsBwJ,EAAtB,EAA0B0B,MAA1B;AACD,KAFD,MAEO;AACLJ,eAAS9L,WAAT,CAAqBwK,EAArB;AACD;AACF;AACD,SAAOA,EAAP;AACD,CAjFD;;AAmFA;;;;;;;;AAQAnB,eAAeuB,OAAf,GAAyB,UAAU1E,IAAV,EAAgBjP,GAAhB,EAAqBqL,YAArB,EAAmC;AAC1DrL,QAAMoS,eAAeO,YAAf,CAA4B1D,IAA5B,EAAkCjP,GAAlC,CAAN;AACA,MAAIuT,KAAKnB,eAAeoB,IAAf,CAAoBvE,IAApB,EAA0BjP,GAA1B,EAA+BqL,YAA/B,CAAT;AACA,MAAIkI,MAAMA,GAAGzJ,UAAb,EAAyB;AACvByJ,OAAGzJ,UAAH,CAAcW,WAAd,CAA0B8I,EAA1B;AACD;AACDnB,iBAAeC,MAAf,CAAsB1N,KAAtB,CAA4BsK,IAA5B,EAAkCjP,GAAlC;AACD,CAPD;;AASA;;;;;;;;;;AAUAoS,eAAeoB,IAAf,GAAsB,UAAUvE,IAAV,EAAgBjP,GAAhB,EAAqBwJ,QAArB,EAA+B;AACnD,MAAIgL,QAAQpC,eAAeoC,KAAf,CAAqBxU,GAArB,CAAZ;AACA,MAAIgS,MAAMI,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBuF,KAAzB,CAAV;AACA,MAAIjL,WAAW,MAAMyI,GAArB;AACA,MAAIkD,MAAM,cAAO5L,KAAP,CAAaC,QAAb,EAAuBC,QAAvB,CAAV;AACA,SAAO0L,IAAI,CAAJ,CAAP;AACD,CAND;;AAQA;;;;;;AAMA9C,eAAe+C,QAAf,GAA0B,UAAUlG,IAAV,EAAgB;AACxC,kBAAS3I,KAAT,CAAe,mBAAf,EAAoC2I,IAApC;AACA,MAAIuD,OAAOvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAvC;AACA,MAAInJ,WAAWiJ,OAAO,aAAP,GAAuB,yBAAtC;AACA,MAAI0C,MAAM,EAAV;AACA,kBAAS5U,IAAT,CAAc,cAAOgJ,KAAP,CAAaC,QAAb,CAAd,EAAsC,UAAUgK,EAAV,EAAc;AAClD,QAAIvT,MAAMwS,OAAOe,GAAG7H,GAAV,GAAgB6H,GAAG1T,IAA7B;AACAG,UAAMoS,eAAeO,YAAf,CAA4B1D,IAA5B,EAAkCjP,GAAlC,CAAN;AACA;AACA,QAAI,CAACoS,eAAeC,MAAf,CAAsBtQ,GAAtB,CAA0BkN,IAA1B,EAAgCjP,GAAhC,CAAL,EAA2C;AACzCoS,qBAAeC,MAAf,CAAsBrQ,GAAtB,CAA0BoQ,eAAe+B,KAAf,CAAqBI,MAA/C,EAAuDtF,IAAvD,EAA6DjP,GAA7D;AACA,UAAIwU,QAAQpC,eAAeoC,KAAf,CAAqBxU,GAArB,CAAZ;AACA,UAAIgS,MAAMI,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBuF,KAAzB,CAAV;AACA,0BAAgBlI,GAAhB,CAAoBiH,EAApB,EAAwBvB,GAAxB;AACA,UAAIvV,OAAO8W,GAAG/T,YAAH,CAAgB,MAAhB,CAAX;AACA,UAAI/C,IAAJ,EAAU;AACR2V,uBAAe3V,IAAf,CAAoBuF,GAApB,CAAwBiN,IAAxB,EAA8BjP,GAA9B,EAAmCvD,IAAnC;AACA2V,uBAAepS,GAAf,CAAmBgC,GAAnB,CAAuBiN,IAAvB,EAA6BxS,IAA7B,EAAmCuD,GAAnC;AACD;AACDkV,UAAI9Y,IAAJ,CAASmX,EAAT;AACA,sBAASjN,KAAT,CAAe,SAAf,EAA0BtG,GAA1B,EAA+BgS,GAA/B,EAAoCvV,IAApC;AACD;AACF,GAjBD;;AAmBA,MAAI2Y,kBAAkB5C,OAAO,cAAP,GAAwB,aAA9C;AACA,MAAI1N,MAAM,EAAV;AACA,MAAIyG,KAAK,EAAT;AACA,MAAI9O,OAAO,EAAX;AACA,MAAI+X,QAAQ,EAAZ;AACA,MAAIxC,MAAM,EAAV;AACA,kBAAS1R,IAAT,CAAc,cAAOgJ,KAAP,CAAa8L,eAAb,CAAd,EAA6C,UAAU7B,EAAV,EAAc;AACzD9W,WAAO8W,GAAG/T,YAAH,CAAgB,MAAhB,CAAP;AACA,QAAI/C,IAAJ,EAAU;AACRqI,YAAMyO,GAAG8B,SAAH,CAAa3P,OAAb,CAAqB,gBAArB,EAAuC,EAAvC,CAAN;;AAEA;AACA6F,WAAK,UAAU,iBAAUvF,QAAV,CAAmBlB,IAAIY,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAnB,CAAf;;AAEA;AACA,UAAI,CAAC0M,eAAeC,MAAf,CAAsBtQ,GAAtB,CAA0BkN,IAA1B,EAAgC1D,EAAhC,CAAL,EAA0C;AACxC6G,uBAAeC,MAAf,CAAsBrQ,GAAtB,CAA0BoQ,eAAe+B,KAAf,CAAqBI,MAA/C,EAAuDtF,IAAvD,EAA6D1D,EAA7D;;AAEA6G,uBAAepS,GAAf,CAAmBgC,GAAnB,CAAuBiN,IAAvB,EAA6BxS,IAA7B,EAAmC8O,EAAnC;;AAEAiJ,gBAAQpC,eAAeoC,KAAf,CAAqBjJ,EAArB,CAAR;AACAyG,cAAMI,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBuF,KAAzB,CAAN;AACAjB,WAAGtI,SAAH,GAAe+G,GAAf;AACAuB,WAAG3K,YAAH,CAAgB,MAAhB,EAAwBnM,IAAxB;;AAEAyY,YAAI9Y,IAAJ,CAASmX,EAAT;AACD;AACF;AACF,GAtBD;;AAwBA,SAAO2B,GAAP;AACD,CAvDD;;AAyDA;;;;;;;;;;;;AAYA9C,eAAekD,QAAf,GAA0B,UAAUrG,IAAV,EAAgBjP,GAAhB,EAAqBuV,SAArB,EAAgC;AACxD,MAAI,CAACvV,GAAL,EAAU;AACR;AACD;AACDA,QAAMoS,eAAeO,YAAf,CAA4B1D,IAA5B,EAAkCjP,GAAlC,CAAN;AACA;AACA;AACA,MAAI,CAACuV,SAAD,IAAcnD,eAAeC,MAAf,CAAsBtQ,GAAtB,CAA0BkN,IAA1B,EAAgCjP,GAAhC,CAAlB,EAAwD;AACtD;AACD;AACD;AACA;AACA;AACA,MAAIuV,aAAatG,QAAQmD,eAAeK,IAAf,CAAoB+C,GAA7C,EAAkD;AAChDpD,mBAAeqD,WAAf,CAA2BzV,GAA3B;AACA;AACD;AACD,MAAIwU,QAAQpC,eAAeoC,KAAf,CAAqBxU,GAArB,CAAZ;AACA,MAAIuL,KAAK6G,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBuF,KAAzB,CAAT;AACA,MAAI3S,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyB,UAAzB,CAAV;AACA,MAAIsE,KAAK,gCAAkC5W,SAASiR,cAAT,CAAwB/L,GAAxB,CAA3C;AACA,MAAI,CAAC0R,EAAL,EAAS;AACPA,SAAK,cAAOpI,YAAP,CAAoBtJ,GAApB,EAAyB,IAAzB,EAA+B,UAAU0R,EAAV,EAAc;AAChD;AACAA,SAAGnG,KAAH,GAAWvL,GAAX;AACA,sBAAS6T,GAAT,CAAa7T,GAAb,EAAkB,IAAlB;AACD,KAJI,CAAL;AAKD,GAND,MAMO;AACL;AACA;AACA,QAAI,CAAC0T,SAAD,IAAchC,GAAG/F,aAAH,CAAiB7Q,QAAjB,CAA0BiR,cAA1B,CAAyCrC,EAAzC,CAAlB,EAAgE;AAC9D;AACD;AACF;AACD;AACA;AACA,MAAI+I,OAAO,cAAQ7Y,IAAR,CAAa2W,eAAeuD,SAA5B,EAAuC,IAAvC,EAA6CpC,EAA7C,EAAiDtE,IAAjD,EAAuDjP,GAAvD,EAA4DuL,EAA5D,EAAgE1J,GAAhE,CAAX;AACA,MAAI,CAAC0R,GAAGnG,KAAR,EAAe;AACb,oBAASd,GAAT,CAAazK,GAAb,EAAkByS,IAAlB;AACD,GAFD,MAEO;AACLA;AACD;AACF,CA1CD;;AA4CA;;;;;;;;;;AAUAlC,eAAeuD,SAAf,GAA2B,UAAUpC,EAAV,EAActE,IAAd,EAAoBjP,GAApB,EAAyBuL,EAAzB,EAA6BqK,KAA7B,EAAoC;AAC7D,MAAIpD,OAAOvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAvC;AACA,MAAImD,QAAQ5G,QAAQmD,eAAeK,IAAf,CAAoBqD,GAAxC;AACA,MAAItK,MAAM+H,GAAG/F,aAAH,CAAiB7Q,QAA3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAIoZ,UAAUvK,IAAIoC,cAAJ,CAAmBrC,EAAnB,CAAd;AACA,MAAIwK,OAAJ,EAAa;AACXA,YAAQjM,UAAR,CAAmBW,WAAnB,CAA+BsL,OAA/B;AACD;AACD,MAAIvD,IAAJ,EAAU;AACRuD,cAAUvK,IAAI5L,aAAJ,CAAkB,QAAlB,CAAV;AACA,QAAIwS,eAAe4D,KAAnB,EAA0B;AACxB;AACA;AACA;AACA;AACA,UAAIC,eAAezK,IAAI5L,aAAJ,CAAkB,QAAlB,CAAnB;AACAqW,mBAAavK,GAAb,GAAmB1L,GAAnB;AACD,KAPD,MAOO;AACL;AACA+V,cAAQ5I,IAAR,GAAenN,GAAf;AACD;AACD+V,YAAQxK,EAAR,GAAaA,EAAb;AACAC,QAAItC,IAAJ,CAASH,WAAT,CAAqBgN,OAArB;AACD,GAfD,MAeO,IAAIF,KAAJ,EAAW;AAChB;AACAE,cAAU3D,eAAeqB,MAAf,CAAsBxE,IAAtB,EAA4BjP,GAA5B,EAAiC,IAAjC,EAAuCwL,GAAvC,EAA4CoK,KAA5C,CAAV;AACAG,YAAQxK,EAAR,GAAaA,EAAb;AACD,GAJM,MAIA;AACL;AACAwK,cAAUvK,IAAI5L,aAAJ,CAAkB,KAAlB,CAAV;AACA,QAAIwS,eAAe4D,KAAnB,EAA0B;AACxB;AACA;AACAhW,YAAMA,MAAM,GAAN,GAAY,cAAQ9C,GAAR,EAAlB;AACD;AACD6Y,YAAQrK,GAAR,GAAc1L,GAAd;AACA+V,YAAQxK,EAAR,GAAaA,EAAb;AACAC,QAAItC,IAAJ,CAASH,WAAT,CAAqBgN,OAArB;AACD;AACF,CA5CD;;AA8CA;;;;;;AAMA3D,eAAeqD,WAAf,GAA6B,UAAUzV,GAAV,EAAe;AAC1C;AACA;AACA,MAAIkW,MAAM,IAAIC,KAAJ,EAAV;AACA,MAAI/D,eAAe4D,KAAnB,EAA0B;AACxB;AACA;AACAhW,UAAMA,MAAM,GAAN,GAAY,cAAQ9C,GAAR,EAAlB;AACD;AACDgZ,MAAIxK,GAAJ,GAAU1L,GAAV;AACD,CAVD;;AAYA;;;;;;;AAOAoS,eAAegE,IAAf,GAAsB,UAAUnH,IAAV,EAAgBoH,IAAhB,EAAsB5Z,IAAtB,EAA4B;AAChD,MAAI+V,OAAOvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAvC;AACA,MAAI4D,WAAWlE,eAAepS,GAAf,CAAmB+B,GAAnB,CAAuBkN,IAAvB,EAA6BxS,IAA7B,CAAf;AACA;AACA,MAAI8O,KAAK,UAAU,iBAAUvF,QAAV,CAAmBqQ,KAAK3Q,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAnB,CAAnB;AACA0M,iBAAepS,GAAf,CAAmBgC,GAAnB,CAAuBiN,IAAvB,EAA6BxS,IAA7B,EAAmC8O,EAAnC;AACA,MAAIgL,WAAWnE,eAAeC,MAAf,CAAsByB,MAAtB,CAA6B7E,IAA7B,EAAmC1D,EAAnC,CAAf;AACA,MAAIgL,QAAJ,EAAc;AACZ;AACD;AACD,MAAIhD,KAAKnB,eAAeoE,IAAf,CAAoBvH,IAApB,EAA0BoH,IAA1B,CAAT;AACA,MAAI,CAAC9C,EAAL,EAAS;AACP;AACD;AACDnB,iBAAeC,MAAf,CAAsBrQ,GAAtB,CAA0BoQ,eAAe+B,KAAf,CAAqBI,MAA/C,EAAuDtF,IAAvD,EAA6D1D,EAA7D;AACA,MAAIgI,OAAO,CAACf,IAAD,mBAAP,CAAJ,EAAgC;AAC9B;AACA;AACA,QAAIgC,QAAQpC,eAAeoC,KAAf,CAAqBjJ,EAArB,CAAZ;AACA,QAAIyG,MAAMI,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBuF,KAAzB,CAAV;AACAjB,OAAGtI,SAAH,GAAe+G,GAAf;AACAuB,OAAG3K,YAAH,CAAgB,MAAhB,EAAwBnM,IAAxB;AACD;AACD6Z,aAAWA,YAAYA,SAAS,CAAT,CAAvB;AACA,MAAIA,QAAJ,EAAc;AACZlE,mBAAeuB,OAAf,CAAuB1E,IAAvB,EAA6BqH,QAA7B;AACD;AACF,CA3BD;;AA6BA;;;;;;;;AAQAlE,eAAeoE,IAAf,GAAsB,UAAUvH,IAAV,EAAgBoH,IAAhB,EAAsB;AAC1CA,SAAO,iBAAU7Q,IAAV,CAAe6Q,IAAf,CAAP;AACA,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD;AACD,MAAI7D,OAAOvD,QAAQmD,eAAeK,IAAf,CAAoBC,EAAvC;AACA,MAAImC,WAAWlY,SAASmY,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,KAA4CnY,SAASuM,IAApE;AACA,MAAIqK,EAAJ;AACA,MAAIf,IAAJ,EAAU;AACRe,SAAK5W,SAASiD,aAAT,CAAuB,QAAvB,CAAL;AACA2T,OAAG8C,IAAH,GAAUA,IAAV;AACA;AACA;AACAxB,aAAS9L,WAAT,CAAqBwK,EAArB;AACA,QAAI,gBAAJ,EAAgB;AACd;AACAsB,eAASpK,WAAT,CAAqB8I,EAArB;AACD;AACF,GAVD,MAUO;AACLA,SAAK5W,SAASiD,aAAT,CAAuB,OAAvB,CAAL;AACA;AACA;AACAiV,aAAS9L,WAAT,CAAqBwK,EAArB;AACA,QAAI,gBAAgBA,EAApB,EAAwB;AACtBA,SAAGkD,UAAH,CAAcvL,OAAd,GAAwBmL,IAAxB;AACD,KAFD,MAEO;AACL9C,SAAGxK,WAAH,CAAepM,SAAS+Z,cAAT,CAAwBL,IAAxB,CAAf;AACD;AACF;AACD,SAAO9C,EAAP;AACD,CA9BD;;AAgCA;;;;;;;;;AASAnB,eAAevD,IAAf,GAAsB,UAAUI,IAAV,EAAgB0H,KAAhB,EAAuB;AAC3C,MAAI9U,MAAM,2BACN,gBAASK,GAAT,CAAa4B,qBAAb,GAAqCmL,IADzC;AAEA,kBAASjN,GAAT,CAAaH,GAAb,EAAkB8U,KAAlB;AACD,CAJD;;AAMA;;;;;;;;;;;;;AAaAvE,eAAeO,YAAf,GAA8B,UAAU1D,IAAV,EAAgBjP,GAAhB,EAAqB;AACjD,MAAI6B,MAAM,2BACN,gBAASK,GAAT,CAAa4B,qBAAb,GAAqCmL,IADzC;AAEA,MAAIjP,GAAJ,EAAS;AACP,QAAI4W,QAAQ5W,IAAIkB,OAAJ,CAAY,IAAZ,CAAZ;AACA,QAAI0V,QAAQ,CAAZ,EAAe;AACb;AACA,UAAI,iBAAU5R,UAAV,CAAqBhF,GAArB,EAA0B,OAA1B,CAAJ,EAAwC;AACtC;AACA,eAAOA,GAAP;AACD;AACD,UAAI2W,QAAQ,gBAAS5U,GAAT,CAAaF,GAAb,KAAqB,EAAjC;AACA,UAAI,iBAAU0D,QAAV,CAAmBoR,KAAnB,CAAJ,EAA+B;AAC7B3W,cAAM2W,QAAQ3W,GAAd;AACD,OAFD,MAEO;AACL,aAAK,IAAI6W,CAAT,IAAcF,KAAd,EAAqB;AACnB3W,gBAAMA,IAAI0F,OAAJ,CAAYmR,CAAZ,EAAeF,MAAME,CAAN,CAAf,CAAN;AACD;AACF;AACD;AACA,UAAI5H,QAAQmD,eAAeK,IAAf,CAAoB+C,GAAhC,EAAqC;AACnCxV,cAAMA,IAAIkB,OAAJ,CAAY,MAAM+N,IAAlB,IAA0B,CAA1B,GAA8BjP,MAAM,GAAN,GAAYiP,IAA1C,GAAiDjP,GAAvD;AACD;AACDA,YAAM,cAAOyO,QAAP,CAAgBzO,GAAhB,CAAN;AACD,KAnBD,MAmBO,IAAI4W,SAAS,CAAb,EAAgB;AACrB;AACA5W,YAAM,cAAOyO,QAAP,CAAgBzO,GAAhB,CAAN;AACD;AACF;AACD,SAAOA,GAAP;AACD,CA9BD;;AAgCA;;;;;;;;AAQAoS,eAAevQ,GAAf,GAAqB,UAAUoN,IAAV,EAAgBuF,KAAhB,EAAuBsC,SAAvB,EAAkC;AACrD,SAAO7H,OAAO,GAAP,GAAauF,KAAb,IAAsBsC,YAAY,MAAMA,SAAlB,GAA8B,EAApD,CAAP;AACD,CAFD;;AAIA;;;;;;AAMA1E,eAAeoC,KAAf,GAAuB,UAAUxU,GAAV,EAAe;AACpC,SAAOA,MAAMyF,OAAOzF,GAAP,EAAY0F,OAAZ,CAAoB,QAApB,EAA8B,EAA9B,CAAN,GAA0C,EAAjD;AACD,CAFD;;AAIA;;;;;;;;AAQA0M,eAAeC,MAAf,CAAsBrQ,GAAtB,GAA4B,UAAUqQ,MAAV,EAAkBpD,IAAlB,EAAwBjP,GAAxB,EAA6B8W,SAA7B,EAAwC;AAClE,MAAIjV,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBjP,GAAzB,EAA8B8W,SAA9B,CAAV;AACA1E,iBAAe2E,OAAf,CAAuBlV,GAAvB,IAA8BwQ,MAA9B;AACD,CAHD;;AAKA;;;;;;;;AAQAD,eAAeC,MAAf,CAAsBtQ,GAAtB,GAA4B,UAAUkN,IAAV,EAAgBjP,GAAhB,EAAqB8W,SAArB,EAAgC;AAC1D,MAAIjV,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBjP,GAAzB,EAA8B8W,SAA9B,CAAV;AACA,SAAO1E,eAAe2E,OAAf,CAAuBlV,GAAvB,CAAP;AACD,CAHD;;AAKA;;;;;;AAMAuQ,eAAeC,MAAf,CAAsB1N,KAAtB,GAA8B,UAAUsK,IAAV,EAAgBjP,GAAhB,EAAqB;AACjD,MAAI6B,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBjP,GAAzB,CAAV;AACA,SAAOoS,eAAe2E,OAAf,CAAuBlV,GAAvB,CAAP;AACD,CAHD;;AAKA;;;;;;;;AAQAuQ,eAAeC,MAAf,CAAsByB,MAAtB,GAA+B,UAAU7E,IAAV,EAAgBjP,GAAhB,EAAqB;AAClD,MAAIqS,SAASD,eAAeC,MAAf,CAAsBtQ,GAAtB,CAA0BkN,IAA1B,EAAgCjP,GAAhC,CAAb;AACA,SAAOA,OAAO,EAAP,IAAaqS,UAAUD,eAAe+B,KAAf,CAAqBI,MAAnD;AACD,CAHD;;AAKA;;;;;;;AAOAnC,eAAe3V,IAAf,CAAoBuF,GAApB,GAA0B,UAAUiN,IAAV,EAAgBjP,GAAhB,EAAqBvD,IAArB,EAA2B;AACnD,MAAIoF,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBjP,GAAzB,CAAV;AACAoS,iBAAe4E,KAAf,CAAqBnV,GAArB,IAA4BpF,IAA5B;AACD,CAHD;;AAKA;;;;;;;AAOA2V,eAAe3V,IAAf,CAAoBsF,GAApB,GAA0B,UAAUkN,IAAV,EAAgBjP,GAAhB,EAAqB;AAC7C,MAAI6B,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBjP,GAAzB,CAAV;AACA,SAAOoS,eAAe4E,KAAf,CAAqBnV,GAArB,CAAP;AACD,CAHD;;AAKA;;;;;;AAMAuQ,eAAe3V,IAAf,CAAoBkI,KAApB,GAA4B,UAAUsK,IAAV,EAAgBjP,GAAhB,EAAqB;AAC/C,MAAI6B,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBjP,GAAzB,CAAV;AACA,SAAOoS,eAAe4E,KAAf,CAAqBnV,GAArB,CAAP;AACD,CAHD;;AAKA;;;;;;;AAOAuQ,eAAepS,GAAf,CAAmBgC,GAAnB,GAAyB,UAAUiN,IAAV,EAAgBxS,IAAhB,EAAsBuD,GAAtB,EAA2B;AAClD,MAAI6B,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBxS,IAAzB,CAAV;AACA2V,iBAAe6E,IAAf,CAAoBpV,GAApB,IAA2B7B,GAA3B;AACD,CAHD;;AAKA;;;;;;;AAOAoS,eAAepS,GAAf,CAAmB+B,GAAnB,GAAyB,UAAUkN,IAAV,EAAgBxS,IAAhB,EAAsB;AAC7C,MAAIoF,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBxS,IAAzB,CAAV;AACA,MAAIuD,MAAMoS,eAAe6E,IAAf,CAAoBpV,GAApB,CAAV;AACA,SAAO7B,GAAP;AACD,CAJD;;AAMA;;;;;;AAMAoS,eAAepS,GAAf,CAAmB2E,KAAnB,GAA2B,UAAUsK,IAAV,EAAgBxS,IAAhB,EAAsB;AAC/C,MAAIoF,MAAMuQ,eAAevQ,GAAf,CAAmBoN,IAAnB,EAAyBxS,IAAzB,CAAV;AACA,SAAO2V,eAAe6E,IAAf,CAAoBpV,GAApB,CAAP;AACD,CAHD;;AAKA;;;;;;;;AAQAuQ,eAAepS,GAAf,CAAmB8T,MAAnB,GAA4B,UAAU7E,IAAV,EAAgBxS,IAAhB,EAAsB;AAChD,MAAIuD,MAAMoS,eAAepS,GAAf,CAAmB+B,GAAnB,CAAuBkN,IAAvB,EAA6BxS,IAA7B,CAAV;AACA,SAAOuD,OAAO8I,SAAP,IAAoBsJ,eAAeC,MAAf,CAAsByB,MAAtB,CAA6B7E,IAA7B,EAAmCjP,GAAnC,CAA3B;AACD,CAHD;;AAKA;;;;;AAKAoS,eAAe2E,OAAf,GAAyB,EAAzB;;AAEA;;;;;AAKA3E,eAAe4E,KAAf,GAAuB,EAAvB;;AAEA;;;;;AAKA5E,eAAe6E,IAAf,GAAsB,EAAtB;;AAEA;;;;;AAKA7E,eAAe4D,KAAf,GAAuB,iBAAUnR,QAAV,CAAmBqS,UAAUC,SAA7B,EAAwC,WAAxC,CAAvB;;AAEA;;;;AAIA/E,eAAe+B,KAAf,GAAuB;AACrBC,WAAS,CADY;AAErBG,UAAQ;;AAGV;;;;AALuB,CAAvB,CASAnC,eAAeK,IAAf,GAAsB;AACpBqD,OAAK,KADe;AAEpBN,OAAK,KAFe;AAGpB9C,MAAI;;AAGN;AACA;AAPsB,CAAtB,CAQA,0BAAoB;AAClB,kBAAS1Q,GAAT,CAAa,gBAASE,GAAT,CAAa6B,eAA1B,EAA2CqO,eAAe2E,OAA1D;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAASnV,GAAT,CAAa,gBAASM,GAAT,CAAa6B,eAA1B,CAAL,EAAiD;AAC/C,oBAAS/B,GAAT,CAAa,gBAASE,GAAT,CAAa6B,eAA1B,EAA2CqO,eAAe2E,OAA1D;AACD;AACD3E,iBAAe2E,OAAf;AACI,+CACA,gBAAShV,GAAT,CAAa,gBAASG,GAAT,CAAa6B,eAA1B,CAFJ;AAGD;;AAED;AACA;AACA,0BAAoB;AAClB,kBAAS/B,GAAT,CAAa,gBAASE,GAAT,CAAa2B,aAA1B,EAAyCuO,eAAe4E,KAAxD;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAASpV,GAAT,CAAa,gBAASM,GAAT,CAAa2B,aAA1B,CAAL,EAA+C;AAC7C,oBAAS7B,GAAT,CAAa,gBAASE,GAAT,CAAa2B,aAA1B,EAAyCuO,eAAe4E,KAAxD;AACD;AACD5E,iBAAe4E,KAAf,GAAuB,+BACnB,gBAASjV,GAAT,CAAa,gBAASG,GAAT,CAAa2B,aAA1B,CADJ;AAED;;AAED;AACA;AACA,0BAAoB;AAClB,kBAAS7B,GAAT,CAAa,gBAASE,GAAT,CAAa8B,YAA1B,EAAwCoO,eAAe6E,IAAvD;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAASrV,GAAT,CAAa,gBAASM,GAAT,CAAa8B,YAA1B,CAAL,EAA8C;AAC5C,oBAAShC,GAAT,CAAa,gBAASE,GAAT,CAAa8B,YAA1B,EAAwCoO,eAAe6E,IAAvD;AACD;AACD7E,iBAAe6E,IAAf,GAAsB,+BAClB,gBAASlV,GAAT,CAAa,gBAASG,GAAT,CAAa8B,YAA1B,CADJ;AAED;;kBAEcoO,c;;;;;;;;;;;;;;;;;;ACl3Bf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIgF,eAAe,EAAnB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AA3CA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DAA,aAAa9E,IAAb,GAAoB,UAAUtS,GAAV,EAAevD,IAAf,EAAqB8V,MAArB,EAA6B;AAC/C,MAAItD,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,qBAAeJ,IAAf,CAAoBrD,IAApB,EAA0BjP,GAA1B,EAA+BvD,IAA/B,EAAqC8V,MAArC;AACD,CAHD;;AAKA;;;;;;;;AAQA6E,aAAa1D,MAAb,GAAsB,UAAUjX,IAAV,EAAgB;AACpC,MAAIwS,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,qBAAegB,MAAf,CAAsBzE,IAAtB,EAA4BxS,IAA5B;AACD,CAHD;;AAKA;;;AAGA2a,aAAajC,QAAb,GAAwB,YAAY;AAClC,MAAIlG,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,qBAAeyC,QAAf,CAAwBlG,IAAxB;AACD,CAHD;;AAKA;;;;;;;;;AASAmI,aAAarV,GAAb,GAAmB,UAAU/B,GAAV,EAAeuS,MAAf,EAAuB;AACxC,MAAItD,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,qBAAee,MAAf,CAAsBxE,IAAtB,EAA4BjP,GAA5B,EAAiCuS,MAAjC;AACD,CAHD;;AAKA;;;;;;;AAOA6E,aAAa9B,QAAb,GAAwB,UAAU+B,IAAV,EAAgB;AACtC,MAAIpI,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA;AACA2E,SAAO,gBAAS9V,OAAT,CAAiB8V,IAAjB,CAAP;AACA,kBAAS/W,IAAT,CAAc+W,IAAd,EAAoB,UAAUrX,GAAV,EAAe;AACjC,uBAAesV,QAAf,CAAwBrG,IAAxB,EAA8BjP,GAA9B;AACD,GAFD;AAGD,CAPD;;AASA;;;;;;;;;;;AAWAoX,aAAarD,KAAb,GAAqB,UAAUF,KAAV,EAAiBtB,MAAjB,EAAyB+E,WAAzB,EAAsC;AACzD,MAAIrI,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;;AAEA;AACAmB,UAAQ,gBAAStS,OAAT,CAAiBsS,KAAjB,CAAR;AACA,kBAASvN,KAAT,CAAe,cAAf,EAA+BuN,KAA/B;;AAEA;AACAA,UAAQ,gBAAS9S,MAAT,CAAgB8S,KAAhB,EAAuB,UAAUpX,IAAV,EAAgB;AAC7C,WAAO,CAAC,CAACA,IAAT;AACD,GAFO,CAAR;;AAIA;AACA,MAAI8a,UAAU,EAAd;AACA,kBAASjX,IAAT,CAAcuT,KAAd,EAAqB,UAAUpX,IAAV,EAAgB;AACnC,QAAI,mBAAeuD,GAAf,CAAmB+B,GAAnB,CAAuBkN,IAAvB,EAA6BxS,IAA7B,KAAsCqM,SAA1C,EAAqD;AACnDyO,cAAQnb,IAAR,CAAaK,IAAb;AACD;AACF,GAJD;;AAMA;AACA,MAAI+a,QAAQ,CAACD,QAAQ3W,MAArB;AACA,MAAI2R,MAAJ,EAAY;AACV,QAAIuB,SAAS2D,IAAIhc,IAAJ,CAAS,mBAAeuE,GAAf,CAAmB8T,MAA5B,EAAoC,IAApC,EAA0C7E,IAA1C,CAAb;AACA,QAAI8E,QAAQ,gBAASlT,KAAT,CAAegT,KAAf,EAAsBC,MAAtB,CAAZ;AACA,QAAI0D,SAASzD,KAAb,EAAoB;AAClB;AACAxB;AACD,KAHD,MAGO;AACL;AACA,UAAIM,QAAQ,mBAAehR,GAAf,CAAmBoN,IAAnB,EAAyB4E,MAAM6D,IAAN,GAAa3R,IAAb,CAAkB,GAAlB,CAAzB,CAAZ;AACA,sBAASO,KAAT,CAAe,eAAf,EAAgCuM,KAAhC;AACA,uBAAUK,SAAV,CAAoBL,KAApB,EAA2BN,MAA3B;AACD;AACF;AACD;AACA,MAAI+E,eAAe,CAACE,KAApB,EAA2B;AACzBF,gBAAYC,OAAZ;AACD;AACF,CAvCD;;AAyCA;;;;;;AAMAH,aAAaO,IAAb,GAAoB,UAAUlb,IAAV,EAAgB;AAClC,MAAIwS,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,qBAAe1S,GAAf,CAAmBgC,GAAnB,CAAuBiN,IAAvB,EAA6BxS,IAA7B,EAAmC,EAAnC,EAFkC,CAEM;AACxC,qBAAe6W,KAAf,CAAqBrE,IAArB;AACD,CAJD;;AAMA;;;;;;;;;;;;AAYAmI,aAAaQ,MAAb,GAAsB,UAAU/D,KAAV,EAAiBnY,EAAjB,EAAqB;AACzC,MAAIuT,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA;AACAmB,UAAQ,gBAAStS,OAAT,CAAiBsS,KAAjB,CAAR;AACA,kBAASvN,KAAT,CAAe,eAAf,EAAgCuN,KAAhC;AACA,MAAIhB,QAAQ,mBAAehR,GAAf,CAAmBoN,IAAnB,EAAyB4E,MAAM6D,IAAN,GAAa3R,IAAb,CAAkB,GAAlB,CAAzB,CAAZ;AACA,kBAASO,KAAT,CAAe,iBAAf,EAAkCuM,KAAlC;AACA,mBAAUgF,WAAV,CAAsBhF,KAAtB,EAA6BnX,EAA7B;AACD,CARD;;AAUA;;;;;;;;AAQA0b,aAAaU,OAAb,GAAuB,UAAUjE,KAAV,EAAiBtB,MAAjB,EAAyB;AAC9C,MAAItD,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,kBAASpM,KAAT,CAAe,gBAAf,EAAiCuN,KAAjC;;AAEA;AACA;AACA;AACA;AACA,MAAI,qBAAJ,EAAqB;AACnB;AACAA,YAAQ,gBAAStS,OAAT,CAAiBsS,KAAjB,CAAR;AACA,oBAASvT,IAAT,CAAcuT,KAAd,EAAqB,UAAUpX,IAAV,EAAgB;AACnC,UAAIA,IAAJ,EAAU;AACR,YAAIuD,MAAMoX,aAAaH,IAAb,CAAkBxa,IAAlB,KAA2BA,IAArC;AACAuD,cAAM,mBAAe2S,YAAf,CAA4B1D,IAA5B,EAAkCjP,GAAlC,CAAN;AACA,YAAIsW,WAAW,mBAAetW,GAAf,CAAmB+B,GAAnB,CAAuBkN,IAAvB,EAA6BxS,IAA7B,CAAf;AACA,YAAI6Z,YAAYtW,OAAOsW,QAAvB,EAAiC;AAC/Bc,uBAAaW,SAAb,CAAuBtb,IAAvB;AACD;AACF;AACF,KATD;AAUD;;AAED2a,eAAarD,KAAb,CAAmBF,KAAnB,EAA0BtB,MAA1B,EAAkC6E,aAAaY,QAA/C;AACD,CAxBD;;AA0BA;;;;;;AAMAZ,aAAaY,QAAb,GAAwB,UAAUnE,KAAV,EAAiB;AACvC;AACA;AACA;AACA,kBAASvT,IAAT,CAAcuT,KAAd,EAAqB,UAAUpX,IAAV,EAAgB;AACnC,QAAIwb,OAAOb,aAAac,KAAb,CAAmBzb,IAAnB,CAAX;AACA,QAAIuD,MAAMoX,aAAaH,IAAb,CAAkBxa,IAAlB,KAA2BA,IAArC;AACA,QAAI6X,OAAO,SAAPA,IAAO,GAAY;AACrB8C,mBAAa9E,IAAb,CAAkBtS,GAAlB,EAAuBvD,IAAvB;AACD,KAFD;AAGA,QAAIwb,IAAJ,EAAU;AACRb,mBAAaU,OAAb,CAAqBG,IAArB,EAA2B3D,IAA3B;AACD,KAFD,MAEO;AACLA;AACD;AACF,GAXD;AAYD,CAhBD;;AAkBA;;;;;;AAMA8C,aAAaW,SAAb,GAAyB,UAAUlE,KAAV,EAAiB;AACxC,kBAASvN,KAAT,CAAe,kBAAf,EAAmCuN,KAAnC;AACA;AACAA,UAAQ,gBAAStS,OAAT,CAAiBsS,KAAjB,CAAR;AACA,kBAASvT,IAAT,CAAcuT,KAAd,EAAqB,UAAUpX,IAAV,EAAgB;AACnC,QAAI0b,cAAc,EAAlB;AACA,SAAK,IAAIC,GAAT,IAAgBhB,aAAac,KAA7B,EAAoC;AAClC,UAAIG,OAAOjB,aAAac,KAAb,CAAmBE,GAAnB,CAAX;AACAC,aAAO,gBAAS9W,OAAT,CAAiB8W,IAAjB,CAAP;AACA,sBAAS/X,IAAT,CAAc+X,IAAd,EAAoB,UAAU1X,CAAV,EAAa;AAC/B,YAAIA,KAAKlE,IAAT,EAAe;AACb0b,sBAAY/b,IAAZ,CAAiBgc,GAAjB;AACD;AACF,OAJD;AAKD;AACD,oBAAS9X,IAAT,CAAc6X,WAAd,EAA2B,UAAUG,OAAV,EAAmB;AAC5ClB,mBAAaW,SAAb,CAAuBO,OAAvB;AACD,KAFD;AAGAlB,iBAAa1D,MAAb,CAAoBjX,IAApB;AACD,GAfD;AAgBD,CApBD;;AAsBA;;;;;;;;;;AAUA2a,aAAahB,IAAb,GAAoB,UAAUC,IAAV,EAAgB5Z,IAAhB,EAAsB;AACxC,MAAIwS,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,MAAIa,KAAK,mBAAe6C,IAAf,CAAoBnH,IAApB,EAA0BoH,IAA1B,EAAgC5Z,IAAhC,CAAT;AACD,CAHD;;AAKA;;;;;AAKA2a,aAAaZ,IAAb,GAAoB,UAAUH,IAAV,EAAgB;AAClC,MAAIpH,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,MAAIa,KAAK,mBAAeiD,IAAf,CAAoBvH,IAApB,EAA0BoH,IAA1B,CAAT;AACD,CAHD;;AAKA;;;;;;;AAOAe,aAAamB,OAAb,GAAuB,UAAUN,IAAV,EAAgBO,QAAhB,EAA0B;AAC/C,MAAIP,IAAJ,EAAU;AACR,SAAK,IAAIxb,IAAT,IAAiBwb,IAAjB,EAAuB;AACrBb,mBAAac,KAAb,CAAmBzb,IAAnB,IAA2Bwb,KAAKxb,IAAL,CAA3B;AACD;AACD,QAAI+b,QAAJ,EAAc;AACZ,WAAK,IAAI/b,IAAT,IAAiB+b,QAAjB,EAA2B;AACzBpB,qBAAaH,IAAb,CAAkBxa,IAAlB,IAA0B+b,SAAS/b,IAAT,CAA1B;AACD;AACF;AACF;AACF,CAXD;;AAaA;;;;;;;AAOA2a,aAAavI,IAAb,GAAoB,UAAU8H,KAAV,EAAiB;AACnC,MAAI1H,OAAO,mBAAewD,IAAf,CAAoBC,EAA/B;AACA,qBAAe7D,IAAf,CAAoBI,IAApB,EAA0B0H,KAA1B;AACD,CAHD;;AAKA;;;;;AAKAS,aAAac,KAAb,GAAqB,EAArB;AACA;AACA,0BAAoB;AAClB,kBAASlW,GAAT,CAAa,gBAASE,GAAT,CAAa+B,WAA1B,EAAuCmT,aAAac,KAApD;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAAStW,GAAT,CAAa,gBAASM,GAAT,CAAa+B,WAA1B,CAAL,EAA6C;AAC3C,oBAASjC,GAAT,CAAa,gBAASE,GAAT,CAAa+B,WAA1B,EAAuCmT,aAAac,KAApD;AACD;AACDd,eAAac,KAAb,GAAqB,gDACjB,gBAASnW,GAAT,CAAa,gBAASG,GAAT,CAAa+B,WAA1B,CADJ;AAED;;AAED;;;;;;AAMAmT,aAAaH,IAAb,GAAoB,EAApB;AACA;AACA,0BAAoB;AAClB,kBAASjV,GAAT,CAAa,gBAASE,GAAT,CAAagC,UAA1B,EAAsCkT,aAAaH,IAAnD;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAASrV,GAAT,CAAa,gBAASM,GAAT,CAAagC,UAA1B,CAAL,EAA4C;AAC1C,oBAASlC,GAAT,CAAa,gBAASE,GAAT,CAAagC,UAA1B,EAAsCkT,aAAaH,IAAnD;AACD;AACDG,eAAaH,IAAb,GAAoB,+BAChB,gBAASlV,GAAT,CAAa,gBAASG,GAAT,CAAagC,UAA1B,CADJ;AAED;;kBAEckT,Y;;;;;;;;;;;;;;;;;;ACrXf;;;;AACA;;;;AACA;;;;;;AAEA,IAAIqB,cAAc,EAAlB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAnBA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;AAkCAA,YAAYnG,IAAZ,GAAmB,UAAUtS,GAAV,EAAevD,IAAf,EAAqB8V,MAArB,EAA6B;AAC9C,MAAItD,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAexD,IAAf,CAAoBrD,IAApB,EAA0BjP,GAA1B,EAA+BvD,IAA/B,EAAqC8V,MAArC;AACD,CAHD;;AAKA;;;;;AAKAkG,YAAY/E,MAAZ,GAAqB,UAAUjX,IAAV,EAAgB;AACnC,MAAIwS,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAepC,MAAf,CAAsBzE,IAAtB,EAA4BxS,IAA5B;AACD,CAHD;;AAKA;;;AAGAgc,YAAYtD,QAAZ,GAAuB,YAAY;AACjC,MAAIlG,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAeX,QAAf,CAAwBlG,IAAxB;AACD,CAHD;;AAKA;;;;;;;;;AASAwJ,YAAY1W,GAAZ,GAAkB,UAAU/B,GAAV,EAAeuS,MAAf,EAAuB;AACvC;AACA;AACA,MAAItD,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAerC,MAAf,CAAsBxE,IAAtB,EAA4BjP,GAA5B,EAAiCuS,MAAjC;AACD,CALD;;AAOA;;;;;;;AAOAkG,YAAYnD,QAAZ,GAAuB,UAAU+B,IAAV,EAAgB;AACrC,MAAIpI,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA;AACAuB,SAAO,gBAAS9V,OAAT,CAAiB8V,IAAjB,CAAP;AACA,kBAAS/W,IAAT,CAAc+W,IAAd,EAAoB,UAAUrX,GAAV,EAAe;AACjC,uBAAesV,QAAf,CAAwBrG,IAAxB,EAA8BjP,GAA9B;AACD,GAFD;AAGD,CAPD;;AASA;;;;;;;;;;AAUAyY,YAAYrC,IAAZ,GAAmB,UAAUC,IAAV,EAAgB5Z,IAAhB,EAAsB;AACvC,MAAIwS,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAeM,IAAf,CAAoBnH,IAApB,EAA0BoH,IAA1B,EAAgC5Z,IAAhC;AACD,CAHD;;AAKA;;;;;AAKAgc,YAAYjC,IAAZ,GAAmB,UAAUH,IAAV,EAAgB;AACjC,MAAIpH,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAeU,IAAf,CAAoBvH,IAApB,EAA0BoH,IAA1B;AACD,CAHD;;AAKA;;;;;;;AAOAoC,YAAY5J,IAAZ,GAAmB,UAAU8H,KAAV,EAAiB;AAClC,MAAI1H,OAAO,mBAAewD,IAAf,CAAoBqD,GAA/B;AACA,qBAAejH,IAAf,CAAoBI,IAApB,EAA0B0H,KAA1B;AACD,CAHD;;kBAKe8B,W;;;;;;;;;;;;;;;;;;AC9Hf;;AACA;;;;AACA;;;;AACA;;;;;;AAdA;AACA;AACA;AACA;;AAEA;;;;;;AAUA,IAAIC,WAAW,EAAf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AASAA,SAASpM,GAAT,GAAe,UAAUzK,GAAV,EAAenG,EAAf,EAAmBid,SAAnB,EAA8B;AAC3C,MAAIC,SAASF,SAASG,OAAtB;AACA,MAAIC,QAAQF,OAAO/W,GAAP,CAAZ;AACA,MAAIA,OAAOnG,EAAX,EAAe;AACb,QAAI,CAACod,KAAL,EAAY;AACVA,cAAQF,OAAO/W,GAAP,IAAc6W,SAASK,YAAT,EAAtB;AACD;AACD,QAAIC,OAAON,SAASO,WAAT,CAAqBvd,EAArB,EAAyBid,aAAa,CAAtC,CAAX;AACA,WAAOG,MAAMI,KAAN,CAAY9c,IAAZ,CAAiB4c,IAAjB,CAAP;AACD;AACD,SAAQF,SAASA,MAAMI,KAAN,CAAYtY,MAAtB,IAAiC,CAAxC;AACD,CAXD;;AAaA;;;;;;;AAOA8X,SAAShD,GAAT,GAAe,UAAU7T,GAAV,EAAesX,QAAf,EAAyB;AACtC,MAAIL,QAAQJ,SAASG,OAAT,CAAiBhX,GAAjB,CAAZ;AACA,MAAIiX,KAAJ,EAAW;AACT,QAAIM,SAAS,CAAC,CAACN,MAAMO,YAAR,IAAwB,CAAC,CAACP,MAAMQ,UAA7C;AACA,QAAIC,YAAY,EAAET,MAAMU,SAAN,GAAkB,CAApB,CAAhB;AACA,QAAI,CAACD,SAAD,KAAeJ,YAAY,CAACC,MAA5B,CAAJ,EAAyC;AACvCV,eAASe,GAAT,CAAa5X,GAAb,EAAkBsX,QAAlB;AACD;AACF;AACF,CATD;;AAWA;;;;;;;;;;;;AAYAT,SAASgB,OAAT,GAAmB,UAAU7X,GAAV,EAAe;AAChC,MAAIiX,QAAQJ,SAASG,OAAT,CAAiBhX,GAAjB,CAAZ;AACA,MAAIiX,KAAJ,EAAW;AACTA,UAAMU,SAAN;AACD;AACF,CALD;;AAOA;;;;;;;;;;;;;;AAcAd,SAASiB,MAAT,GAAkB,UAAU9X,GAAV,EAAesX,QAAf,EAAyB;AACzC,MAAIL,QAAQJ,SAASG,OAAT,CAAiBhX,GAAjB,CAAZ;AACA,MAAIiX,KAAJ,EAAW;AACTA,UAAMU,SAAN;AACAd,aAAShD,GAAT,CAAa7T,GAAb,EAAkBsX,QAAlB;AACD;AACF,CAND;;AAQA;;;;;AAKAT,SAASkB,MAAT,GAAkB,UAAU/X,GAAV,EAAe;AAC/B,MAAIiX,QAAQJ,SAASG,OAAT,CAAiBhX,GAAjB,CAAZ;AACA,MAAIiX,KAAJ,EAAW;AACTJ,aAASmB,gBAAT,CAA0Bf,KAA1B;AACA,WAAOJ,SAASG,OAAT,CAAiBhX,GAAjB,CAAP;AACD;AACF,CAND;;AAQA;;;;;;;;AAQA6W,SAASoB,eAAT,GAA2B,UAAUC,aAAV,EAAyBC,WAAzB,EAAsC;AAC/D,MAAIC,YAAYF,iBAAiB,EAAjC;AACA,OAAK,IAAIlY,GAAT,IAAgB6W,SAASG,OAAzB,EAAkC;AAChC,QAAImB,eAAenY,GAAf,IAAsB,iBAAUmD,UAAV,CAAqBnD,GAArB,EAA0BoY,SAA1B,CAA1B,EAAgE;AAC9DvB,eAASkB,MAAT,CAAgB/X,GAAhB;AACD;AACF;AACF,CAPD;;AASA;;;;;;;AAOA6W,SAAS7W,GAAT,GAAe,UAAUsG,GAAV,EAAe;AAC5B,MAAI1K,MAAME,SAAS,gBAASoE,GAAT,CAAa,gBAASG,GAAT,CAAaiC,SAA1B,CAAT,EAA+C,EAA/C,KAAsD,CAAhE;AACA1G;AACA,SAAO0K,IAAI,SAAJ,MACHA,IAAI,SAAJ,IAAiB,KAAK,gBAASnG,GAAT,CAAa,gBAASE,GAAT,CAAaiC,SAA1B,EAAqC1G,GAArC,CADnB,CAAP;AAED,CALD;;AAOA;;;;;;AAMAib,SAASe,GAAT,GAAe,UAAU5X,GAAV,EAAesX,QAAf,EAAyB;AACtC,MAAIL,QAAQJ,SAASG,OAAT,CAAiBhX,GAAjB,CAAZ;AACA,MAAIiX,KAAJ,EAAW;AACTJ,aAASmB,gBAAT,CAA0Bf,KAA1B;AACA,QAAIA,MAAMU,SAAN,GAAkB,CAAlB,IAAuBV,MAAMI,KAAN,CAAYtY,MAAvC,EAA+C;AAC7C,UAAIoY,OAAOF,MAAMI,KAAN,CAAY,CAAZ,CAAX;AACA,UAAIF,IAAJ,EAAU;AACR,YAAI1E,OAAO,cAAQ7Y,IAAR,CAAaid,SAASe,GAAtB,EAA2B,IAA3B,EAAiC5X,GAAjC,EAAsCsX,QAAtC,CAAX;AACA,YAAIe,OAAO,cAAQze,IAAR,CAAa,UAAU0e,MAAV,EAAkBC,MAAlB,EAA0B;AAChDA;AACAD;AACD,SAHU,EAGR,IAHQ,EAGF7F,IAHE,CAAX;AAIA,YAAI6E,QAAJ,EAAc;AACZL,gBAAMI,KAAN,CAAYmB,KAAZ;AACAH,eAAKlB,KAAKtd,EAAV;AACD,SAHD,MAGO;AACLgd,mBAAS4B,aAAT,CAAuBxB,KAAvB,EAA8BE,IAA9B,EAAoCkB,IAApC;AACD;AACF;AACF;AACF;AACF,CArBD;;AAuBA;;;;;;;AAOAxB,SAAS4B,aAAT,GAAyB,UAAUxB,KAAV,EAAiBE,IAAjB,EAAuBkB,IAAvB,EAA6B;AACpD,MAAIlB,KAAKuB,KAAT,EAAgB;AACd;AACA;AACA,QAAI7e,KAAK,cAAQD,IAAR,CAAaye,IAAb,EAAmB,IAAnB,EAAyB,cAAQtc,YAAjC,CAAT;AACAkb,UAAMQ,UAAN,GAAmBtI,WAAWtV,EAAX,EAAesd,KAAKuB,KAApB,CAAnB;AACA;AACA;AACAvB,SAAKuB,KAAL,GAAa,CAAb;AACD,GARD,MAQO;AACLzB,UAAMI,KAAN,CAAYmB,KAAZ;AACA,QAAI3e,KAAK,cAAQD,IAAR,CAAaye,IAAb,EAAmB,IAAnB,EAAyBlB,KAAKtd,EAA9B,CAAT;AACA,QAAI8e,YAAY,oCACZ,iBAAUzY,GAAV,CAAc,yBAAd,CADJ;AAEA,QAAI0Y,UAAUD,aAAaA,UAAU,SAAV,CAA3B;AACA,QAAIC,OAAJ,EAAa;AACX3B,YAAMO,YAAN,GAAqBoB,QAAQ/e,EAAR,CAArB;AACD,KAFD,MAEO;AACLod,YAAMQ,UAAN,GAAmBtI,WAAWtV,EAAX,EAAe,CAAf,CAAnB;AACD;AACF;AACF,CArBD;;AAuBA;;;;;AAKAgd,SAASmB,gBAAT,GAA4B,UAAUf,KAAV,EAAiB;AAC3C,MAAIA,MAAMO,YAAV,EAAwB;AACtB,QAAImB,YAAY,oCACZ,iBAAUzY,GAAV,CAAc,yBAAd,CADJ;AAEA,QAAI2Y,aAAaF,aAAaA,UAAU,YAAV,CAA9B;AACA,QAAIE,UAAJ,EAAgB;AACdA,iBAAW5B,MAAMO,YAAjB;AACD;AACDP,UAAMO,YAAN,GAAqB,CAArB;AACD;AACD,MAAIP,MAAMQ,UAAV,EAAsB;AACpBqB,iBAAa7B,MAAMQ,UAAnB;AACAR,UAAMQ,UAAN,GAAmB,CAAnB;AACD;AACF,CAdD;;AAgBA;;;;;;;;;;AAUAZ,SAASkC,IAAT;;AAEA;;;;;;;;;;;;;;;AAeAlC,SAASmC,KAAT;;AAEA;;;;AAIAnC,SAASK,YAAT,GAAwB,YAAY;AAClC,SAAO,EAACG,OAAO,EAAR,EAAYG,cAAc,CAA1B,EAA6BC,YAAY,CAAzC,EAA4CE,WAAW,CAAvD,EAAP;AACD,CAFD;;AAIA;;;;;;;AAOAd,SAASO,WAAT,GAAuB,UAAUvd,EAAV,EAAc6e,KAAd,EAAqB;AAC1C,SAAO,EAAC7e,IAAIA,EAAL,EAAS6e,OAAOA,KAAhB,EAAP;AACD,CAFD;;AAIA;;;;AAIA7B,SAASG,OAAT,GAAmB,EAAnB;;kBAEeH,Q;;;;;;;;;;;AC5Rf,kBAAkB,0G;;;;;;;;;;;;ACAlB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACRA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,G;;;;;;;;;;;;;;;AC1BD;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,iCAAiC,SAAS,EAAE;AAC5C,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS,qBAAqB;AAC3D,iCAAiC,aAAa;AAC9C;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA,0FAAuE,+DAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;ACFnH;;;;;;AAMA;;AAEA,IAAIoC,gBAAgB,EAApB;;AAEA;;;;;;;;AAQAA,cAAc/Y,GAAd,GAAoB,UAAU8P,IAAV,EAAgBhQ,GAAhB,EAAqB;AACvC,MAAIgQ,KAAKkJ,OAAT,EAAkB;AAChB,WAAOlJ,KAAKkJ,OAAL,CAAalZ,GAAb,CAAP;AACD,GAFD,MAEO;AACL,WAAOgQ,KAAKrS,YAAL,CAAkB,UAAUiY,IAAIuD,MAAJ,CAAW7U,cAAX,CAA0BtE,GAA1B,CAA5B,CAAP;AACD;AACF,CAND;;AAQA;;;;;;;;AAQAiZ,cAAc9Y,GAAd,GAAoB,UAAU6P,IAAV,EAAgBhQ,GAAhB,EAAqBV,GAArB,EAA0B;AAC5C,MAAI0Q,KAAKkJ,OAAT,EAAkB;AAChBlJ,SAAKkJ,OAAL,CAAalZ,GAAb,IAAoBV,GAApB;AACD,GAFD,MAEO;AACL0Q,SAAKjJ,YAAL,CAAkB,UAAU6O,IAAIuD,MAAJ,CAAW7U,cAAX,CAA0BtE,GAA1B,CAA5B,EAA4DV,GAA5D;AACD;AACF,CAND;;kBAQe2Z,a;;;;;;;;;;;;;;;;;;AC/Bf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIG,SAAS,EAAb;AACA;;AAEA;;;AA9BA;AACA;AACA;AACA;;AAEA;;;;;;AA4BAA,OAAO1W,IAAP,GAAc,YAAY;AACxB;AACA,oBAAWA,IAAX,CAAgB0W,OAAOC,cAAvB,EAAuCD,OAAOE,cAA9C;AACA;AACA,MAAI,gBAASpZ,GAAT,CAAa,gBAASG,GAAT,CAAae,QAA1B,KAAuC,CAACtG,SAASoP,gBAArD,EAAuE;AACrE;AACD;AACD;AACA,kBAAS/J,GAAT,CAAa,gBAASE,GAAT,CAAae,QAA1B,EAAoC,IAApC;AACA,kBAASjB,GAAT,CAAa,gBAASE,GAAT,CAAagB,aAA1B,EAAyC,cAAQhG,GAAR,EAAzC;AACA,kBAAS8E,GAAT,CAAa,gBAASE,GAAT,CAAac,WAA1B,EAAuC,CAAvC;AACA;AACArG,WAASoP,gBAAT,CAA0B,OAA1B,EAAmCkP,OAAOG,YAA1C,EAAwD,KAAxD;AACA,kBAASpZ,GAAT,CAAa,gBAASE,GAAT,CAAaiB,kBAA1B,EAA8C8X,OAAOG,YAArD;AACA;AACA,MAAI,iBAAUrZ,GAAV,CAAc,iCAAd,KACA,CAACkZ,OAAOI,uBAAP,EADL,EACuC;AACrC1e,aAASoP,gBAAT,CAA0B,WAA1B,EAAuCkP,OAAOK,gBAA9C,EAAgE,KAAhE;AACA,oBAAStZ,GAAT,CAAa,gBAASE,GAAT,CAAakB,sBAA1B,EACc6X,OAAOK,gBADrB;AAED;AACD;AACA3e,WAASoP,gBAAT,CAA0B,QAA1B,EAAoCkP,OAAOM,aAA3C,EAA0D,KAA1D;AACA,kBAASvZ,GAAT,CAAa,gBAASE,GAAT,CAAamB,mBAA1B,EAA+C4X,OAAOM,aAAtD;AACD,CAxBD;;AA0BA;;;AAGAN,OAAO7O,OAAP,GAAiB,YAAY;AAC3B6O,SAAOrB,MAAP;AACA,MAAI,gBAAS7X,GAAT,CAAa,gBAASG,GAAT,CAAae,QAA1B,CAAJ,EAAyC;AACvC,QAAItG,SAAS0P,mBAAb,EAAkC;AAChC,UAAImP,cAAc,8BACd,gBAASzZ,GAAT,CAAa,gBAASG,GAAT,CAAaiB,kBAA1B,CADJ;AAEAxG,eAAS0P,mBAAT,CAA6B,OAA7B,EAAsCmP,WAAtC,EAAmD,KAAnD;AACA,UAAIC,kBAAkB,8BAClB,gBAAS1Z,GAAT,CAAa,gBAASG,GAAT,CAAakB,sBAA1B,CADJ;AAEAzG,eAAS0P,mBAAT,CAA6B,WAA7B,EAA0CoP,eAA1C,EAA2D,KAA3D;AACA,UAAIC,eAAe,8BACf,gBAAS3Z,GAAT,CAAa,gBAASG,GAAT,CAAamB,mBAA1B,CADJ;AAEA1G,eAAS0P,mBAAT,CAA6B,QAA7B,EAAuCqP,YAAvC,EAAqD,KAArD;AACD;AACD,oBAAS1Z,GAAT,CAAa,gBAASE,GAAT,CAAaiB,kBAA1B,EAA8C,IAA9C;AACA,oBAASnB,GAAT,CAAa,gBAASE,GAAT,CAAakB,sBAA1B,EAAkD,IAAlD;AACA,oBAASpB,GAAT,CAAa,gBAASE,GAAT,CAAamB,mBAA1B,EAA+C,IAA/C;AACA,oBAASrB,GAAT,CAAa,gBAASE,GAAT,CAAaoB,wBAA1B,EAAoD,IAApD;AACA,oBAAStB,GAAT,CAAa,gBAASE,GAAT,CAAaqB,mBAA1B,EAA+C,IAA/C;AACA,oBAASvB,GAAT,CAAa,gBAASE,GAAT,CAAae,QAA1B,EAAoC,KAApC;AACA,oBAASjB,GAAT,CAAa,gBAASE,GAAT,CAAagB,aAA1B,EAAyC,IAAzC;AACA,oBAASlB,GAAT,CAAa,gBAASE,GAAT,CAAac,WAA1B,EAAuC,IAAvC;AACD;AACD,oBAAWoJ,OAAX;AACD,CAxBD;;AA0BA;;;;;;;;AAQA6O,OAAOU,yBAAP,GAAmC,UAAUxR,OAAV,EAAmB;AACpD,SAAO,cAAOS,WAAP,CAAmBT,OAAnB,EAA4B,UAAU0H,IAAV,EAAgB;AACjD,WAAO,oBAAgBhN,QAAhB,CAAyBgN,IAAzB,EAA+B,qBAClC,iBAAU9P,GAAV,CAAc,YAAd,CADG,CAAP;AAED,GAHM,CAAP;AAID,CALD;;AAOA;;;;;;;;AAQAkZ,OAAOW,2BAAP,GAAqC,UAAUzR,OAAV,EAAmB;AACtD,SAAO,cAAOS,WAAP,CAAmBT,OAAnB,EAA4B,UAAU0H,IAAV,EAAgB;AACjD,WAAO,oBAAgBhN,QAAhB,CAAyBgN,IAAzB,EAA+B,qBAClC,iBAAU9P,GAAV,CAAc,cAAd,CADG,CAAP;AAED,GAHM,CAAP;AAID,CALD;;AAOA;;;;;;;;AAQAkZ,OAAOY,oBAAP,GAA8B,UAAU1R,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,SAAO,cAAOO,WAAP,CAAmBT,OAAnB,EAA4B,UAAU0H,IAAV,EAAgB;AACjD;AACA,WAAOA,KAAKhS,IAAL,IAAagS,KAAKiK,OAAL,CAAa1V,WAAb,MAA8B,KAAlD;AACD,GAHM,EAGJiE,MAHI,CAAP;AAID,CALD;;AAOA;;;;;;;AAOA4Q,OAAOc,YAAP,GAAsB,UAAUlf,GAAV,EAAe;AACnC;AACA,MAAIA,IAAImf,OAAJ,IAAenf,IAAIof,MAAnB,IAA6Bpf,IAAIqf,OAAjC,IAA4Crf,IAAIsf,QAApD,EAA8D;AAC5D,oBAAS7V,KAAT,CAAe,sCAAf;AACA,WAAO,IAAP;AACD;AACD;AACA,MAAIzJ,IAAIuf,MAAJ,GAAa,CAAjB,EAAoB;AAClB,oBAAS9V,KAAT,CAAe,0CAAf;AACA,WAAO,IAAP;AACD;AACD;AACA;AACA,MAAI+V,SAASpB,OAAOU,yBAAP,CAAiC9e,IAAIuL,MAArC,CAAb;AACA,MAAI,CAACiU,MAAL,EAAa;AACX,oBAAS/V,KAAT,CAAe,uCAAf;AACA,WAAO,IAAP;AACD;AACD;AACA;AACA,MAAI,iBAAUvE,GAAV,CAAc,cAAd,CAAJ,EAAmC;AACjC,QAAIua,WAAWrB,OAAOW,2BAAP,CAAmC/e,IAAIuL,MAAvC,CAAf;AACA,QAAIkU,QAAJ,EAAc;AACZ,sBAAShW,KAAT,CAAe,sCAAf;AACA,aAAO,IAAP;AACD;AACF;AACD,MAAI8B,SAAS6S,OAAOY,oBAAP,CAA4Bhf,IAAIuL,MAAhC,EAAwCiU,MAAxC,CAAb;AACA;AACA,MAAI,CAACjU,MAAL,EAAa;AACX,oBAAS9B,KAAT,CAAe,wCAAf;AACA,WAAO,IAAP;AACD;AACD,SAAO8B,OAAOvI,IAAd;AACD,CAlCD;;AAoCA;;;;;;;;AAQAob,OAAOsB,UAAP,GAAoB,UAAUvc,GAAV,EAAe;AACjC;AACA;AACA,MAAIwc,cAAc,cAAOhO,MAAP,CAAcxO,GAAd,CAAlB;AACA,MAAIwc,eAAe,cAAOhO,MAAP,CAAcrR,OAAO2C,QAAP,CAAgBD,IAA9B,CAAnB,EAAwD;AACtD,oBAASgH,IAAT,CAAc,6BAAd;AACA,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD,CATD;;AAWA;;;;;;;;AAQAoU,OAAOwB,WAAP,GAAqB,UAAUzc,GAAV,EAAe;AAClC;AACA,MAAI,CAAC,gBAAS+B,GAAT,CAAa,gBAASG,GAAT,CAAae,QAA1B,CAAL,EAA0C;AACxC,oBAAS4D,IAAT,CAAc,4BAAd;AACA,WAAO,KAAP;AACD;AACD;AACA,MAAI6K,QAAQ/T,SAAS,gBAASoE,GAAT,CAAa,gBAASG,GAAT,CAAac,WAA1B,CAAT,EAAiD,EAAjD,KAAwD,CAApE;AACA0O;AACA,MAAIgL,QAAQ/e,SAAS,iBAAUoE,GAAV,CAAc,gBAAd,CAAT,EAA0C,EAA1C,CAAZ;AACA2a,UAAQtL,MAAMsL,KAAN,IAAerL,QAAf,GAA0BqL,KAAlC;AACA,MAAIhL,QAAQgL,KAAZ,EAAmB;AACjB,oBAAS7V,IAAT,CAAc,0BAAd;AACA,WAAO,KAAP;AACD;AACD;AACA,MAAImG,YAAYrP,SAAS,gBAASoE,GAAT,CAAa,gBAASG,GAAT,CAAagB,aAA1B,CAAT,EAAmD,EAAnD,CAAhB;AACA8J;AACA,MAAIsE,MAAM,cAAQpU,GAAR,KAAgB8P,SAA1B;AACA,MAAI6D,WAAWlT,SAAS,iBAAUoE,GAAV,CAAc,mBAAd,CAAT,EAA6C,EAA7C,CAAf;AACA8O,aAAWO,MAAMP,QAAN,IAAkBQ,QAAlB,GAA6BR,QAAxC;AACA,MAAIS,MAAMT,QAAV,EAAoB;AAClB,oBAAShK,IAAT,CAAc,6BAAd;AACA,WAAO,KAAP;AACD;AACD,SAAO,IAAP;AACD,CA1BD;;AA4BA;;;;;;;;;;AAUAoU,OAAO0B,YAAP,GAAsB,UAAU3c,GAAV,EAAe4c,WAAf,EAA4B;AAChD,MAAI1V,UAAU0V,eAAezf,OAAO2C,QAAP,CAAgBD,IAA7C;AACA;AACA;AACA,MAAI,iBAAUgF,QAAV,CAAmB7E,GAAnB,EAAwB,GAAxB,CAAJ,EAAkC;AAChC,QAAI6c,cAAc,cAAOpO,QAAP,CAAgBzO,GAAhB,CAAlB;AACA,QAAI8c,kBAAkB,cAAOrO,QAAP,CAAgBvH,OAAhB,CAAtB;AACA,QAAI2V,eAAeC,eAAnB,EAAoC;AAClC,sBAASxW,KAAT,CAAe,wCAAf;AACA,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD,CAbD;;AAeA;;;;;;;AAOA2U,OAAOG,YAAP,GAAsB,UAAUve,GAAV,EAAe;AACnC,kBAASyJ,KAAT,CAAe,kBAAf,EAAmC,MAAnC,EAA2CzJ,GAA3C;AACA;AACA,MAAIA,IAAIkgB,gBAAR,EAA0B;AACxB;AACD;AACD,MAAI/c,MAAMib,OAAOc,YAAP,CAAoBlf,GAApB,CAAV;AACA;AACA,MAAI,CAACmD,GAAL,EAAU;AACR;AACD;AACDA,QAAM,cAAOkQ,0BAAP,CAAkClQ,GAAlC,CAAN;AACA;AACA,MAAI,CAACib,OAAOsB,UAAP,CAAkBvc,GAAlB,CAAL,EAA6B;AAC3B;AACD;AACD;AACA,MAAI,CAACib,OAAOwB,WAAP,CAAmBzc,GAAnB,CAAL,EAA8B;AAC5B;AACD;AACD;AACA,MAAI,CAACib,OAAO+B,cAAP,CAAsBhd,GAAtB,EAA2BnD,IAAIuL,MAA/B,CAAL,EAA6C;AAC3C;AACD;;AAED;AACA,MAAI6U,UAAUhC,OAAOiC,cAAP,EAAd;AACA,MAAIvW,OAAO,IAAIsU,OAAOkC,IAAX,EAAX;AACAlC,SAAOmC,SAAP,CAAiBpd,GAAjB,EAAsBid,OAAtB,EAA+BtW,IAA/B;AACA;AACA9J,MAAIwgB,cAAJ;AACD,CA/BD;;AAiCA;;;;;;AAMApC,OAAOK,gBAAP,GAA0B,UAAUze,GAAV,EAAe;AACvC,kBAASyJ,KAAT,CAAe,sBAAf,EAAuC,MAAvC,EAA+CzJ,GAA/C;AACA,MAAImD,MAAMib,OAAOc,YAAP,CAAoBlf,GAApB,CAAV;AACA;AACA,MAAI,CAACmD,GAAL,EAAU;AACR;AACD;AACD;AACAgR,aAAW,YAAY;AACrBiK,WAAO3F,QAAP,EAAgB,qBAAsBtV,GAAtC;AACD,GAFD,EAEG,CAFH;AAGD,CAXD;;AAaA;;;;;;;AAOAib,OAAOM,aAAP,GAAuB,UAAU1e,GAAV,EAAe;AACpC,MAAIygB,WAAWrC,OAAOsC,sBAAP,EAAf;AACAtC,SAAOuC,wBAAP;AACA,MAAIF,QAAJ,EAAc;AACZ,oBAAShX,KAAT,CAAe,6CAAf,EAA8DgX,QAA9D;AACAngB,WAAOsgB,MAAP,CAAcphB,KAAd,CAAoB,IAApB,EAA0BihB,QAA1B;AACD;AACF,CAPD;;AASA;;;;;;;AAOArC,OAAOC,cAAP,GAAwB,UAAUlb,GAAV,EAAewM,SAAf,EAA0B;AAChD,kBAASlG,KAAT,CAAe,oBAAf,EAAqC,OAArC,EAA8CtG,GAA9C,EAAmD,QAAnD,EAA6DwM,SAA7D,EAAwE,GAAxE;AACA,MAAI7F,OAAO,IAAIsU,OAAOkC,IAAX,CAAgB;AACzBjW,aAASsF,aAAaA,UAAU,aAAV,CADG;AAEzBM,aAAS,IAFgB;AAGzBwQ,cAAU9Q,aAAaA,UAAU,cAAV,CAHE;AAIzBkR,aAASlR,aAAaA,UAAU,aAAV,CAJG;AAKzBmR,aAAS,CAAC,EAAEnR,aAAaA,UAAU,UAAV,CAAf;AALe,GAAhB,CAAX;AAOA;AACA,MAAIoR,WAAW,sBAAwB,iBAAU7b,GAAV,CAAc,mBAAd,CAAvC;AACA,MAAI6b,QAAJ,EAAc;AACZ5d,UAAM,cAAO6P,gBAAP,CAAwB7P,GAAxB,EAA6B,CAAC4d,QAAD,CAA7B,CAAN;AACD;AACD;AACA,MAAI,CAAC3C,OAAOsB,UAAP,CAAkBvc,GAAlB,CAAL,EAA6B;AAC3Bib,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBC,SAAvC;AACA;AACD;AACD;AACA,MAAI,CAAC9C,OAAOwB,WAAP,CAAmBzc,GAAnB,CAAL,EAA8B;AAC5Bib,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBE,UAAvC;AACA;AACD;AACD;AACA,MAAI,CAAC/C,OAAOgD,gBAAP,CAAwBje,GAAxB,EAA6B2G,KAAK+W,OAAlC,EAA2C/W,KAAKO,OAAhD,CAAL,EAA+D;AAC7D;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIP,KAAK2W,QAAT,EAAmB;AACjBrC,WAAOiD,sBAAP;AACD;AACD;AACA;AACA;AACA,MAAIjB,UAAUhC,OAAOiC,cAAP,EAAd;AACAjC,SAAOmC,SAAP,CAAiBpd,GAAjB,EAAsBid,OAAtB,EAA+BtW,IAA/B;AACD,CA7CD;;AA+CA;;;;;;;;;;;;;;AAcAsU,OAAOkD,QAAP,GAAkB,UAAUne,GAAV,EAAeoe,WAAf,EAA4B;AAC5C,kBAAS9X,KAAT,CAAe,eAAf,EAAgC,OAAhC,EAAyCtG,GAAzC,EAA8C,UAA9C,EAA0Doe,WAA1D,EAAuE,GAAvE;AACA;AACA,MAAI,CAACpe,GAAL,EAAU;AACR;AACD;AACDA,QAAM,cAAOkQ,0BAAP,CAAkClQ,GAAlC,CAAN;AACA;AACA,MAAI,CAACib,OAAOsB,UAAP,CAAkBvc,GAAlB,CAAL,EAA6B;AAC3Bib,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBC,SAAvC;AACA;AACD;AACD;AACA,MAAI,CAAC9C,OAAOwB,WAAP,CAAmBzc,GAAnB,CAAL,EAA8B;AAC5Bib,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBE,UAAvC;AACA;AACD;AACD;AACA,MAAIf,UAAUhC,OAAOiC,cAAP,CAAsBkB,WAAtB,CAAd;AACA,MAAIzX,OAAO,IAAIsU,OAAOkC,IAAX,EAAX;AACAlC,SAAOmC,SAAP,CAAiBpd,GAAjB,EAAsBid,OAAtB,EAA+BtW,IAA/B;AACD,CArBD;;AAuBA;;;;;;;;;AASAsU,OAAOmC,SAAP,GAAmB,UAAUpd,GAAV,EAAeid,OAAf,EAAwBtW,IAAxB,EAA8B;AAC/C,kBAASA,IAAT,CAAc,gBAAd,EAAgC3G,GAAhC,EAAqCid,OAArC,EAA8CtW,IAA9C;;AAEA;AACAsU,SAAOrB,MAAP;;AAEA;AACA,MAAI,CAACqB,OAAO0B,YAAP,CAAoB3c,GAApB,EAAyB2G,KAAKO,OAA9B,CAAL,EAA6C;AAC3C,oBAASZ,KAAT,CAAe,4BAAf;AACA;AACA,QAAI,CAACK,KAAKmG,OAAV,EAAmB;AACjB,UAAIuR,cAAc,cAAQ5iB,IAAR,CAAawf,OAAOqD,oBAApB,EAA0C,IAA1C,EACSrB,OADT,CAAlB;AAEAhC,aAAOsD,mBAAP,CAA2Bve,GAA3B,EAAgC2G,KAAK+W,OAArC,EAA8CW,WAA9C;AACD;AACD;AACApD,WAAOuD,eAAP,CAAuBxe,GAAvB,EAA4B2G,IAA5B;AACA;AACD;;AAED;AACA,MAAI,CAACsU,OAAOwD,gBAAP,CAAwBze,GAAxB,EAA6B2G,KAAK+W,OAAlC,EAA2C/W,KAAKO,OAAhD,EAAyD+V,OAAzD,CAAL,EAAwE;AACtEhC,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBY,gBAAvC;AACA;AACD;;AAED;AACA,MAAIhN,QAAQ,CAAC/T,SAAS,gBAASoE,GAAT,CAAa,gBAASG,GAAT,CAAac,WAA1B,CAAT,EAAiD,EAAjD,KAAwD,CAAzD,IAA8D,CAA1E;AACA,kBAAShB,GAAT,CAAa,gBAASE,GAAT,CAAac,WAA1B,EAAuC0O,KAAvC;;AAEA;AACA;AACA;AACAuJ,SAAO0D,yBAAP,CAAiC3e,GAAjC;AACA;AACA;AACA;AACA;AACA;AACA,MAAI6c,cAAc,cAAOpO,QAAP,CAAgBzO,GAAhB,CAAlB;AACA,MAAI4e,gBAAgB3D,OAAO2D,aAAP,CAAqB/B,WAArB,CAApB;AACA,kBAAS/C,eAAT,CAAyB,YAAzB,EAAuC8E,aAAvC;;AAEA;AACA,MAAIC,aAAa5D,OAAO6D,WAAP,EAAjB;AACA,MAAIC,cAAcF,WAAWhC,WAAX,CAAlB;AACA,kBAAS7a,GAAT,CAAa,gBAASE,GAAT,CAAayB,WAA1B,EAAuCob,WAAvC;AACA;AACA,kBAAS/c,GAAT,CAAa,gBAASE,GAAT,CAAauB,WAA1B,EAAuC,IAAvC;AACA,kBAASzB,GAAT,CAAa,gBAASE,GAAT,CAAawB,gBAA1B,EAA4C,IAA5C;;AAEA;AACA;AACA,MAAIqb,eAAeA,YAAYnK,UAAZ,IAA0B,CAA7C,EAAgD;AAC9C;AACAqG,WAAO+D,wBAAP,CAAgChf,GAAhC,EAAqCid,OAArC,EAA8CtW,IAA9C;AACD,GAHD,MAGO;AACLsU,WAAOgE,oBAAP,CAA4Bjf,GAA5B,EAAiCid,OAAjC,EAA0CtW,IAA1C;AACD;AACF,CA3DD;;AA6DA;;;;;;;;;AASAsU,OAAO+D,wBAAP,GAAkC,UAAUhf,GAAV,EAAeid,OAAf,EAAwBtW,IAAxB,EAA8B;AAC9D,kBAASL,KAAT,CAAe,+BAAf,EAAgDtG,GAAhD;AACA,MAAI4e,gBAAgB3D,OAAO2D,aAAP,CAAqB5e,GAArB,CAApB;AACA,MAAIkf,aAAajE,OAAOiE,UAAP,CAAkBlf,GAAlB,CAAjB;AACA,kBAASgC,GAAT,CAAa,gBAASE,GAAT,CAAauB,WAA1B,EAAuCzD,GAAvC;AACA,kBAASgC,GAAT,CAAa,gBAASE,GAAT,CAAawB,gBAA1B,EAA4C,cAAQxG,GAAR,EAA5C;AACA,kBAAS0c,MAAT,CAAgBgF,aAAhB;AACA,kBAASlJ,GAAT,CAAawJ,UAAb,EAAyB,IAAzB;;AAEA;AACA;AACA,MAAI,CAACvY,KAAKmG,OAAV,EAAmB;AACjB,QAAIuR,cAAc,cAAQ5iB,IAAR,CAAawf,OAAOqD,oBAApB,EAA0C,IAA1C,EACSrB,OADT,CAAlB;AAEAhC,WAAOsD,mBAAP,CAA2Bve,GAA3B,EAAgC2G,KAAK+W,OAArC,EAA8CW,WAA9C;AACD;AACF,CAhBD;;AAkBA;;;;;;;;;AASApD,OAAOgE,oBAAP,GAA8B,UAAUjf,GAAV,EAAeid,OAAf,EAAwBtW,IAAxB,EAA8B;AAC1D,MAAI0X,cAAc,cAAQ5iB,IAAR,CAAawf,OAAOqD,oBAApB,EAA0C,IAA1C,EACSrB,OADT,CAAlB;AAEA,MAAIkC,aAAa,cAAQ1jB,IAAR,CAAawf,OAAOmE,mBAApB,EAAyC,IAAzC,EACSnC,OADT,EACkBtW,IADlB,CAAjB;AAEA,MAAI0Y,gBAAgB,cAAQ5jB,IAAR,CAAawf,OAAOqE,sBAApB,EAA4C,IAA5C,EACSrC,OADT,EACkBtW,IADlB,CAApB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI,CAAC,iBAAU5E,GAAV,CAAc,kCAAd,CAAL,EAAwD;AACtDkZ,WAAOsE,qBAAP;AACD;;AAED5Y,OAAKsI,IAAL,GAAY,UAAZ;AACA,MAAItI,KAAKmG,OAAT,EAAkB;AAChBnG,SAAKsI,IAAL,IAAatI,KAAKgX,OAAL,GAAe,OAAf,GAAyB,UAAtC;AACD;;AAED,MAAI6B,MAAM,kBAAcC,IAAd,CAAmBzf,GAAnB,EAAwB;AAChCgH,YAAQiW,QAAQ,QAAR,CADwB;AAEhCyC,aAASzC,QAAQ,SAAR,CAFuB;AAGhC0C,YAAQR,UAHwB;AAIhCS,aAASvB,WAJuB;AAKhCwB,eAAWR,aALqB;AAMhCS,cAAU7C,QAAQ,UAAR,CANsB;AAOhChO,UAAMtI,KAAKsI,IAPqB;AAQhC/H,aAASP,KAAKO,OARkB;AAShCwW,aAAS/W,KAAK+W;AATkB,GAAxB,CAAV;AAWA,kBAAS1b,GAAT,CAAa,gBAASE,GAAT,CAAayB,WAA1B,EAAuC6b,GAAvC;;AAEA;AACA;AACA;AACA,MAAI,CAAC7Y,KAAKmG,OAAV,EAAmB;AACjBmO,WAAOsD,mBAAP,CAA2Bve,GAA3B,EAAgC2G,KAAK+W,OAArC,EAA8CW,WAA9C;AACD;AACF,CA3CD;;AA6CA;;;;;;;;;AASApD,OAAOuD,eAAP,GAAyB,UAAUxe,GAAV,EAAe2G,IAAf,EAAqB;AAC5C;AACA,MAAIA,KAAK2W,QAAT,EAAmB;AACjB,oBAAShX,KAAT,CAAe,mCAAf;AACA2U,WAAOuC,wBAAP;AACA,oBAASlX,KAAT,CAAe,2BAAf,EAA4CK,KAAK2W,QAAjD;AACAngB,WAAOsgB,MAAP,CAAcphB,KAAd,CAAoB,IAApB,EAA0BsK,KAAK2W,QAA/B;AACA3W,SAAKoZ,QAAL,GAAgB,IAAhB;AACA;AACD;AACD,MAAI9Z,SAAS,iBAAUN,SAAV,CAAoB3F,GAApB,EAAyB,GAAzB,CAAb;AACA;AACA;AACA,MAAIiG,OAAO,CAAP,CAAJ,EAAe;AACb,QAAIsN,KAAK5W,SAASiR,cAAT,CAAwB3H,OAAO,CAAP,CAAxB,CAAT;AACA,QAAIsN,EAAJ,EAAQ;AACN,sBAASjN,KAAT,CAAe,mCAAf;AACA2U,aAAOuC,wBAAP;AACA,sBAASlX,KAAT,CAAe,yBAAf,EAA0CL,OAAO,CAAP,CAA1C;AACAsN,SAAGyM,cAAH;AACArZ,WAAKoZ,QAAL,GAAgB,IAAhB;AACD;AACF,GATD,MASO,IAAI,CAACpZ,KAAKoZ,QAAV,EAAoB;AACzB,oBAASzZ,KAAT,CAAe,mCAAf;AACA2U,WAAOuC,wBAAP;AACA,oBAASlX,KAAT,CAAe,sBAAf;AACAnJ,WAAOsgB,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACA9W,SAAKoZ,QAAL,GAAgB,IAAhB;AACD;AACF,CA7BD;;AA+BA;;;;;;;;AAQA9E,OAAOsD,mBAAP,GAA6B,UAAUve,GAAV,EAAe0d,OAAf,EAAwBW,WAAxB,EAAqC;AAChE,MAAI;AACF;AACA;AACA,QAAIf,WAAW,CAACngB,OAAO8iB,WAAR,EAAqB9iB,OAAO+iB,WAA5B,CAAf;AACA,QAAIC,cAAc,EAAC,gBAAgB7C,QAAjB,EAAlB;AACA,oBAAShX,KAAT,CAAe,yCAAf,EAA0DgX,QAA1D;AACA,sBAAW5X,OAAX,CAAmB,IAAnB,EAAyBya,WAAzB;AACA;AACA;AACA,QAAI,cAAO1R,QAAP,CAAgBzO,GAAhB,EAAqB,IAArB,KAA8B7C,OAAO2C,QAAP,CAAgBD,IAAlD,EAAwD;AACtD,UAAIugB,WAAW,EAAC,eAAe1C,OAAhB,EAAf;AACA,wBAAWpR,GAAX,CAAetM,GAAf,EAAoBogB,QAApB;AACD;AACF,GAbD,CAaE,OAAO7jB,GAAP,EAAY;AACZ;AACA0e,WAAOrB,MAAP;AACA;AACA;AACA,oBAAS7S,KAAT,CAAe,4BAAf,EACgB,OADhB,EACyB/G,GADzB,EAC8B,MAD9B,EACsCzD,GADtC,EAC2C,GAD3C;AAEA8hB,gBAAYre,GAAZ,EAAiBzD,GAAjB;AACD;AACF,CAvBD;;AAyBA;;;;;;;;;;AAUA0e,OAAOqD,oBAAP,GAA8B,UAAUrB,OAAV,EAAmBjd,GAAnB,EAAwBzD,GAAxB,EAA6B8jB,OAA7B,EAAsC;AAClE,kBAASxZ,IAAT,CAAc,gBAAd,EAAgC,OAAhC,EAAyC7G,GAAzC,EAA8C,GAA9C;AACA,kBAASgC,GAAT,CAAa,gBAASE,GAAT,CAAayB,WAA1B,EAAuC,IAAvC;AACA;AACA;AACA,MAAI,CAACsX,OAAOE,cAAP,CAAsBnb,GAAtB,EAA2BzD,GAA3B,EAAgC0gB,OAAhC,EAAyCnU,SAAzC,EAAoDuX,OAApD,CAAL,EAAmE;AACjE;AACD;AACDpF,SAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoB5f,KAAvC,EAA8C3B,GAA9C;AACD,CATD;;AAWA;;;;;;;;;;AAUA0e,OAAOmE,mBAAP,GAA6B,UAAUnC,OAAV,EAAmBtW,IAAnB,EAAyB3G,GAAzB,EAA8BsgB,OAA9B,EAAuC;AAClE;AACA,MAAI,CAACrF,OAAOsF,oBAAP,CAA4BvgB,GAA5B,EAAiCsgB,OAAjC,EAA0CrD,OAA1C,CAAL,EAAyD;AACvDhC,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoB0C,qBAAvC;AACA;AACD;;AAED;AACA,MAAIF,QAAQ,QAAR,CAAJ,EAAuB;AACrBrF,WAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoB2C,iBAAvC;AACA;AACD;;AAED;AACA,MAAIH,QAAQ,UAAR,CAAJ,EAAyB;AACvBrF,WAAOyF,uBAAP,CAA+BzD,OAA/B,EAAwCqD,QAAQ,UAAR,CAAxC;AACA;AACD;;AAED,MAAI;AACF,uBAAeK,OAAf,CAAuB3gB,GAAvB,EAA4BsgB,OAA5B,EAAqC3Z,IAArC,EAA2C,YAAY;AACrDsU,aAAO2F,iBAAP,CAAyB5gB,GAAzB,EAA8BsgB,OAA9B,EAAuCrD,OAAvC;AACD,KAFD;AAGD,GAJD,CAIE,OAAO1gB,GAAP,EAAY;AACZ;AACA;AACA,oBAAS+J,KAAT,CAAe,4BAAf,EAA6Cga,OAA7C;AACArF,WAAOqD,oBAAP,CAA4BrB,OAA5B,EAAqCjd,GAArC,EAA0CzD,GAA1C;AACD;AACF,CA7BD;;AA+BA;;;;;;;;;;;AAWA0e,OAAOqE,sBAAP,GAAgC,UAAUrC,OAAV,EAAmBtW,IAAnB,EAAyB3G,GAAzB,EAA8B6gB,QAA9B,EAAwC;AACtE,kBAAS7e,GAAT,CAAa,gBAASE,GAAT,CAAayB,WAA1B,EAAuC,IAAvC;;AAEA;AACA;AACA,MAAI,gBAAS5B,GAAT,CAAa,gBAASG,GAAT,CAAauB,WAA1B,KAA0CkD,KAAKma,QAAnD,EAA6D;AAC3D,QAAIzjB,SAASwjB,SAAS,QAAT,KAAsB,EAAnC;AACAxjB,WAAO,iBAAP,IAA4B,gBAAS0E,GAAT,CAAa,gBAASG,GAAT,CAAawB,gBAA1B,CAA5B;AACArG,WAAO,eAAP,IAA0B,IAA1B;AACD;;AAED;AACA;AACA,MAAI0jB,YAAYF,SAAS,MAAT,KAAoB,WAApC;AACA,MAAI,CAACE,SAAL,EAAgB;AACd;AACA,QAAI,CAAC9F,OAAO+F,gBAAP,CAAwBhhB,GAAxB,EAA6B6gB,QAA7B,EAAuC5D,OAAvC,CAAL,EAAsD;AACpDhC,aAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBmD,gBAAvC;AACA;AACD;;AAED;AACA,QAAIJ,SAAS,QAAT,CAAJ,EAAwB;AACtB5F,aAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoB2C,iBAAvC;AACA;AACD;;AAED;AACA,QAAII,SAAS,UAAT,CAAJ,EAA0B;AACxB5F,aAAOyF,uBAAP,CAA+BzD,OAA/B,EAAwC4D,SAAS,UAAT,CAAxC;AACA;AACD;AACF;;AAED;AACA,MAAI;AACF;AACA;AACA;AACA,QAAIK,IAAI,qCAAuCH,YAAY,EAAZ,GAAiBF,QAAhE;AACA,uBAAeF,OAAf,CAAuB3gB,GAAvB,EAA4BkhB,CAA5B,EAA+Bva,IAA/B,EAAqC,YAAY;AAC/C;AACA,UAAIlK,OAAOokB,SAAS,MAAT,KAAoB,EAA/B;AACA,UAAIE,SAAJ,EAAe;AACb,YAAII,QAAQN,SAAS,OAAT,CAAZ;AACA,wBAASvgB,IAAT,CAAc6gB,KAAd,EAAqB,UAAUC,IAAV,EAAgB;AACnC3kB,iBAAO2kB,KAAK,MAAL,KAAgB3kB,IAAvB;AACD,SAFD;AAGD;AACD,wBAAcuF,GAAd,CAAkBrF,SAASuM,IAA3B,EAAiC,SAAjC,EAA4CzM,IAA5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAwe,aAAOuD,eAAP,CAAuBxe,GAAvB,EAA4B2G,IAA5B;AACAsU,aAAOoG,aAAP,CAAqBrhB,GAArB,EAA0B6gB,QAA1B,EAAoC5D,OAApC;AACD,KAnBD;AAoBD,GAzBD,CAyBE,OAAO1gB,GAAP,EAAY;AACZ;AACA;AACA,oBAAS+J,KAAT,CAAe,gCAAf,EAAiDua,QAAjD;AACA5F,WAAOqD,oBAAP,CAA4BrB,OAA5B,EAAqCjd,GAArC,EAA0CzD,GAA1C;AACD;AACF,CAlED;;AAoEA;;;;;;;AAOA0e,OAAOyF,uBAAP,GAAiC,UAAUzD,OAAV,EAAmBqE,WAAnB,EAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA,MAAI;AACF;AACAA,kBAAcA,cAAcnkB,OAAO2C,QAAP,CAAgBuO,IAA5C;AACA,sBAAW3I,OAAX,CAAmB4b,WAAnB,EAAgC,IAAhC,EAAsC,IAAtC;AACD,GAJD,CAIE,OAAO/kB,GAAP,EAAY;AACZ0e,WAAOrB,MAAP;AACA,oBAAS7S,KAAT,CAAe,0BAAf,EACgB,OADhB,EACyBua,WADzB,EACsC,MADtC,EAC8C/kB,GAD9C,EACmD,GADnD;AAEA0e,WAAOqD,oBAAP,CAA4BrB,OAA5B,EAAqCqE,WAArC,EAAkD/kB,GAAlD;AACD;AACF,CAhBD;;AAkBA;;;AAGA0e,OAAOrB,MAAP,GAAgB,YAAY;AAC1B,MAAI4F,MAAM,6BACN,gBAASzd,GAAT,CAAa,gBAASG,GAAT,CAAayB,WAA1B,CADJ;AAEA,MAAI6b,GAAJ,EAAS;AACP,oBAAS3Y,IAAT,CAAc,6BAAd,EACe,MADf,EACuB2Y,GADvB;AAEAA,QAAI+B,KAAJ;AACA,oBAASvf,GAAT,CAAa,gBAASE,GAAT,CAAayB,WAA1B,EAAuC,IAAvC;AACD;AACF,CATD;;AAWA;;;;;;;;;AASAsX,OAAOpP,QAAP,GAAkB,UAAUnQ,EAAV,EAAcE,QAAd,EAAwB;AACxC,MAAIuF,GAAJ;AACA,MAAIzF,EAAJ,EAAQ;AACN,QAAIG,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACAL,SAAK,CAAL,IAAUH,EAAV;AACAyF,UAAM,cAAQ7E,OAAR,CAAgBD,KAAhB,CAAsB,IAAtB,EAA4BR,IAA5B,CAAN;AACA,QAAIsF,eAAesM,KAAnB,EAA0B;AACxB,sBAAS1G,KAAT,CAAe,yBAAf,EAA0C5J,OAAO2C,QAAP,CAAgBD,IAA1D,EACgB,MADhB,EACwBsB,GADxB,EAC6B,GAD7B;AAED;AACF;AACD,SAAQA,QAAQ,KAAhB;AACD,CAZD;;AAcA;;;;;;;;AAQA8Z,OAAO4C,MAAP,GAAgB,UAAU7d,GAAV,EAAewhB,MAAf,EAAuBC,OAAvB,EAAgC;AAC9C,MAAIllB,MAAMklB,UAAUA,QAAQC,OAAlB,GAA4B,EAAtC;AACA,kBAAS7a,IAAT,CAAc,aAAd,EAA6B,MAA7B,EAAqC7G,GAArC,EAA0C,SAA1C,EAAqDwhB,MAArD,EACe,QADf,EACyBjlB,GADzB,EAC8B,GAD9B;AAEA0e,SAAOrB,MAAP;AACAqB,SAAO0D,yBAAP;AACA;AACA,MAAIgD,YAAYH,MAAhB;AACA,MAAIjlB,GAAJ,EAAS;AACPolB,iBAAa,eAAeplB,GAA5B;AACD;AACD0e,SAAO2G,eAAP,CAAuB5hB,GAAvB,EAA4B2hB,SAA5B;AACA,MAAIza,UAAU/J,OAAO2C,QAAP,CAAgBD,IAA9B;AACA;AACA;AACA;AACA;AACA;AACA,MAAI,iBAAUkC,GAAV,CAAc,6BAAd,KAAgDmF,WAAWlH,GAA/D,EAAoE;AAClE,sBAAW6M,kBAAX;AACD;AACD;AACAmE,aAAW,YAAY;AACrB,QAAI4M,WAAW,sBAAwB,iBAAU7b,GAAV,CAAc,mBAAd,CAAvC;AACA,QAAI6b,QAAJ,EAAc;AACZ,UAAIpV,SAAS,EAAb;AACAA,aAAOoV,QAAP,IAAmBiE,mBAAmBL,MAAnB,CAAnB;AACAxhB,YAAM,cAAO0P,gBAAP,CAAwB1P,GAAxB,EAA6BwI,MAA7B,CAAN;AACD;AACDrL,WAAO2C,QAAP,CAAgBD,IAAhB,GAAuBG,GAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,CAACib,OAAO0B,YAAP,CAAoB3c,GAApB,EAAyBkH,OAAzB,CAAL,EAAwC;AACtC/J,aAAO2C,QAAP,CAAgB+d,MAAhB;AACD;AACF,GAlBD,EAkBG,CAlBH;AAmBD,CAzCD;;AA2CA;;;;;;;;;;AAUA5C,OAAO3I,IAAP,GAAc,UAAUtS,GAAV,EAAeoe,WAAf,EAA4B;AACxCpe,QAAM,cAAOkQ,0BAAP,CAAkClQ,GAAlC,CAAN;AACA,MAAIid,UAAUhC,OAAOiC,cAAP,CAAsBkB,WAAtB,CAAd;AACA,MAAIzX,OAAO,IAAIsU,OAAOkC,IAAX,EAAX;AACAlC,SAAO6G,KAAP,CAAa9hB,GAAb,EAAkBid,OAAlB,EAA2BtW,IAA3B;AACD,CALD;;AAOA;;;;;;;;;AASAsU,OAAO6G,KAAP,GAAe,UAAU9hB,GAAV,EAAeid,OAAf,EAAwBtW,IAAxB,EAA8B;AAC3C,kBAASA,IAAT,CAAc,WAAd,EAA2B3G,GAA3B,EAAgCid,OAAhC,EAAyCtW,IAAzC;;AAEAA,OAAKma,QAAL,GAAgBna,KAAKma,QAAL,IAAiB9gB,GAAjC;;AAEA;AACA;AACA,MAAI,CAACib,OAAOwD,gBAAP,CAAwBze,GAAxB,EAA6B8I,SAA7B,EAAwCA,SAAxC,EAAmDmU,OAAnD,EAA4D,IAA5D,CAAL,EAAwE;AACtE;AACD;;AAED,MAAIoB,cAAc,cAAQ5iB,IAAR,CAAawf,OAAO8G,gBAApB,EAAsC,IAAtC,EACS,KADT,EACgB9E,OADhB,EACyBtW,IADzB,CAAlB;AAEA,MAAIwY,aAAa,cAAQ1jB,IAAR,CAAawf,OAAO+G,eAApB,EAAqC,IAArC,EACS,KADT,EACgB/E,OADhB,EACyBtW,IADzB,CAAjB;AAEA,MAAI0Y,gBAAgB,cAAQ5jB,IAAR,CAAawf,OAAOgH,kBAApB,EAAwC,IAAxC,EACS,KADT,EACgBhF,OADhB,EACyBtW,IADzB,CAApB;;AAGAA,OAAKsI,IAAL,GAAY,MAAZ;;AAEA,oBAAcwQ,IAAd,CAAmBzf,GAAnB,EAAwB;AACtBgH,YAAQiW,QAAQ,QAAR,CADc;AAEtByC,aAASzC,QAAQ,SAAR,CAFa;AAGtB0C,YAAQR,UAHc;AAItBS,aAASvB,WAJa;AAKtBwB,eAAWR,aALW;AAMtBS,cAAU7C,QAAQ,UAAR,CANY;AAOtBhO,UAAMtI,KAAKsI,IAPW;AAQtBiT,qBAAiBjF,QAAQ,iBAAR;AARK,GAAxB;AAUD,CA9BD;;AAgCA;;;;;;;;;;AAUAhC,OAAO3F,QAAP,GAAkB,UAAUtV,GAAV,EAAeoe,WAAf,EAA4B;AAC5Cpe,QAAM,cAAOkQ,0BAAP,CAAkClQ,GAAlC,CAAN;AACA,MAAIid,UAAUhC,OAAOiC,cAAP,CAAsBkB,WAAtB,CAAd;AACA,MAAIzX,OAAO,IAAIsU,OAAOkC,IAAX,EAAX;AACAlC,SAAOtF,SAAP,CAAiB3V,GAAjB,EAAsBid,OAAtB,EAA+BtW,IAA/B;AACD,CALD;;AAOA;;;;;;;;;AASAsU,OAAOtF,SAAP,GAAmB,UAAU3V,GAAV,EAAeid,OAAf,EAAwBtW,IAAxB,EAA8B;AAC/C,kBAASA,IAAT,CAAc,eAAd,EAA+B3G,GAA/B,EAAoCid,OAApC,EAA6CtW,IAA7C;AACAA,OAAKma,QAAL,GAAgBna,KAAKma,QAAL,IAAiB9gB,GAAjC;;AAEA;AACA;AACA,MAAI,CAACib,OAAOwD,gBAAP,CAAwBze,GAAxB,EAA6B8I,SAA7B,EAAwCA,SAAxC,EAAmDmU,OAAnD,EAA4D,IAA5D,CAAL,EAAwE;AACtE;AACD;;AAED,MAAIoB,cAAc,cAAQ5iB,IAAR,CAAawf,OAAO8G,gBAApB,EAAsC,IAAtC,EACS,IADT,EACe9E,OADf,EACwBtW,IADxB,CAAlB;AAEA,MAAIwY,aAAa,cAAQ1jB,IAAR,CAAawf,OAAO+G,eAApB,EAAqC,IAArC,EACS,IADT,EACe/E,OADf,EACwBtW,IADxB,CAAjB;AAEA,MAAI0Y,gBAAgB,cAAQ5jB,IAAR,CAAawf,OAAOgH,kBAApB,EAAwC,IAAxC,EACS,IADT,EACehF,OADf,EACwBtW,IADxB,CAApB;;AAGAA,OAAKsI,IAAL,GAAY,UAAZ;;AAEA,MAAIuQ,MAAM,kBAAcC,IAAd,CAAmBzf,GAAnB,EAAwB;AAChCgH,YAAQiW,QAAQ,QAAR,CADwB;AAEhCyC,aAASzC,QAAQ,SAAR,CAFuB;AAGhC0C,YAAQR,UAHwB;AAIhCS,aAASvB,WAJuB;AAKhCwB,eAAWR,aALqB;AAMhCS,cAAU7C,QAAQ,UAAR,CANsB;AAOhChO,UAAMtI,KAAKsI,IAPqB;AAQhC/H,aAASP,KAAKO;AARkB,GAAxB,CAAV;AAUA+T,SAAOkH,WAAP,CAAmBniB,GAAnB,EAAwBwf,GAAxB;AACD,CA9BD;;AAgCA;;;;;;;;;;;AAWAvE,OAAO8G,gBAAP,GAA0B,UAAUK,UAAV,EAAsBnF,OAAtB,EAA+BtW,IAA/B,EAAqC3G,GAArC,EAA0CzD,GAA1C,EAA+C;AACvE,kBAASsK,IAAT,CAAcub,aAAa,UAAb,GAA0B,MAAxC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkEpiB,GAAlE,EAAuE,GAAvE;;AAEA,MAAIoiB,UAAJ,EAAgB;AACdnH,WAAOoH,cAAP,CAAsBriB,GAAtB;AACD;;AAED;AACA;AACA,MAAIoiB,cAAc,gBAASrgB,GAAT,CAAa,gBAASG,GAAT,CAAauB,WAA1B,KAA0CkD,KAAKma,QAAjE,EAA2E;AACzE7F,WAAOqD,oBAAP,CAA4BrB,OAA5B,EAAqCjd,GAArC,EAA0CzD,GAA1C;AACD,GAFD,MAEO;AACL;AACA0e,WAAOE,cAAP,CAAsBnb,GAAtB,EAA2BzD,GAA3B,EAAgC0gB,OAAhC,EAAyC,IAAzC;AACD;AACF,CAfD;;AAiBA;;;;;;;;;;;AAWAhC,OAAO+G,eAAP,GAAyB,UAAUI,UAAV,EAAsBnF,OAAtB,EAA+BtW,IAA/B,EAAqC3G,GAArC,EAA0CsgB,OAA1C,EAAmD;AAC1E;AACA;AACA,MAAI,CAACrF,OAAOsF,oBAAP,CAA4BvgB,GAA5B,EAAiCsgB,OAAjC,EAA0CrD,OAA1C,EAAmD,IAAnD,CAAL,EAA+D;AAC7D;AACD;;AAED;AACA;AACA;AACA,MAAIqD,QAAQ,QAAR,CAAJ,EAAuB;AACrB,QAAI,CAAC8B,UAAL,EAAiB;AACf;AACD;AACD,QAAI,gBAASrgB,GAAT,CAAa,gBAASG,GAAT,CAAauB,WAA1B,KAA0CkD,KAAKma,QAAnD,EAA6D;AAC3D7F,aAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoB2C,iBAAvC;AACA;AACD;AACF;;AAED;AACA,MAAIH,QAAQ,UAAR,CAAJ,EAAyB;AACvBrF,WAAOqH,mBAAP,CAA2BF,UAA3B,EAAuCnF,OAAvC,EAAgDtW,IAAhD,EAAsD2Z,QAAQ,UAAR,CAAtD;AACA;AACD;;AAED,MAAI8B,UAAJ,EAAgB;AACd;AACA;AACA;AACA;AACA,QAAI1mB,KAAK,cAAQD,IAAR,CAAawf,OAAOmE,mBAApB,EAAyC,IAAzC,EACSnC,OADT,EACkBtW,IADlB,EACwB3G,GADxB,EAC6BsgB,OAD7B,CAAT;AAEA,QAAIpB,aAAajE,OAAOiE,UAAP,CAAkBvY,KAAKma,QAAvB,CAAjB;AACA,oBAASxU,GAAT,CAAa4S,UAAb,EAAyBxjB,EAAzB;AACA;AACA;AACA,QAAI,gBAASqG,GAAT,CAAa,gBAASG,GAAT,CAAauB,WAA1B,KAA0CkD,KAAKma,QAAnD,EAA6D;AAC3D,sBAASpL,GAAT,CAAawJ,UAAb,EAAyB,IAAzB;AACA;AACD;AACF;;AAED,MAAIqD,YAAYH,aACV,mBAAeI,UADL,GAEV,mBAAe7B,OAFrB;AAGA4B,YAAUviB,GAAV,EAAesgB,OAAf,EAAwB3Z,IAAxB,EAA8B,YAAY;AACxC;AACAsU,WAAO2F,iBAAP,CAAyB5gB,GAAzB,EAA8BsgB,OAA9B,EAAuCrD,OAAvC,EAAgD,IAAhD;AACD,GAHD;AAID,CAlDD;;AAoDA;;;;;;;;;;;;AAYAhC,OAAOgH,kBAAP,GAA4B,UAAUG,UAAV,EAAsBnF,OAAtB,EAA+BtW,IAA/B,EAAqC3G,GAArC,EACU6gB,QADV,EACoB;AAC9C;AACA;AACA,MAAIE,YAAYF,SAAS,MAAT,KAAoB,WAApC;AACA,MAAI,CAACE,SAAL,EAAgB;AACd;AACA;AACA,QAAI,CAAC9F,OAAO+F,gBAAP,CAAwBhhB,GAAxB,EAA6B6gB,QAA7B,EAAuC5D,OAAvC,EAAgD,IAAhD,CAAL,EAA4D;AAC1DhC,aAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoBmD,gBAAvC;AACA;AACD;;AAED;AACA;AACA;AACA,QAAIJ,SAAS,QAAT,CAAJ,EAAwB;AACtB,UAAI,CAACuB,UAAL,EAAiB;AACf;AACD;AACD,UAAI,gBAASrgB,GAAT,CAAa,gBAASG,GAAT,CAAauB,WAA1B,KAA0CkD,KAAKma,QAAnD,EAA6D;AAC3D7F,eAAO4C,MAAP,CAAc7d,GAAd,EAAmBib,OAAO6C,YAAP,CAAoB2C,iBAAvC;AACA;AACD;AACF;;AAED;AACA,QAAII,SAAS,UAAT,CAAJ,EAA0B;AACxB5F,aAAOqH,mBAAP,CAA2BF,UAA3B,EAAuCnF,OAAvC,EAAgDtW,IAAhD,EAC4Bka,SAAS,UAAT,CAD5B;AAEA;AACD;AACF;;AAED,MAAI3B,aAAajE,OAAOiE,UAAP,CAAkBvY,KAAKma,QAAvB,CAAjB;AACA,MAAIsB,UAAJ,EAAgB;AACd;AACA;AACAnH,WAAOoH,cAAP,CAAsBriB,GAAtB;AACA;AACA;AACA;AACA;AACA,QAAI,gBAAS+B,GAAT,CAAa,gBAASG,GAAT,CAAauB,WAA1B,KAA0CkD,KAAKma,QAAnD,EAA6D;AAC3D;AACA;AACA,UAAIplB,KAAK,cAAQD,IAAR,CAAawf,OAAOqE,sBAApB,EAA4C,IAA5C,EACSrC,OADT,EACkBtW,IADlB,EACwB3G,GADxB,EAC6B6gB,QAD7B,CAAT;AAEA,sBAASvU,GAAT,CAAa4S,UAAb,EAAyBxjB,EAAzB;AACA,sBAASga,GAAT,CAAawJ,UAAb,EAAyB,IAAzB;AACA;AACD,KARD,MAQO;AACL,sBAAStF,MAAT,CAAgBsF,UAAhB;AACD;AACF;;AAED;AACA,MAAIqD,YAAYH,aACV,mBAAeI,UADL,GAEV,mBAAe7B,OAFrB;AAGA,MAAI;AACF;AACA;AACA;AACA,QAAIO,IAAI,qCAAuCH,YAAY,EAAZ,GAAiBF,QAAhE;AACA0B,cAAUviB,GAAV,EAAekhB,CAAf,EAAkBva,IAAlB,EAAwB,YAAY;AAClC;AACAsU,aAAOoG,aAAP,CAAqBrhB,GAArB,EAA0B6gB,QAA1B,EAAoC5D,OAApC,EAA6C,IAA7C;AACD,KAHD;AAID,GATD,CASE,OAAO1gB,GAAP,EAAY;AACZ;AACA;AACA,oBAAS+J,KAAT,CAAe,gCAAf,EAAiDua,QAAjD;AACA5F,WAAO8G,gBAAP,CAAwBK,UAAxB,EAAoCnF,OAApC,EAA6CtW,IAA7C,EAAmD3G,GAAnD,EAAwDzD,GAAxD;AACD;AACF,CA3ED;;AA6EA;;;;;;;;;AASA0e,OAAOqH,mBAAP,GAA6B,UAAUF,UAAV,EAAsBnF,OAAtB,EAA+BtW,IAA/B,EAAqC2a,WAArC,EAAkD;AAC7E,MAAImB,aAAaL,aAAanH,OAAOtF,SAApB,GAAgCsF,OAAO6G,KAAxD;AACA;AACA;AACA,MAAItQ,OAAO,CACTyJ,OAAOyH,QAAP,CAAgBxkB,KADP,EAET+c,OAAOyH,QAAP,CAAgB/jB,OAFP,EAGTsc,OAAOyH,QAAP,CAAgBnkB,YAHP,EAIT0c,OAAOyH,QAAP,CAAgBpkB,SAJP,EAKT2c,OAAOyH,QAAP,CAAgBlkB,OALP,EAMTyc,OAAOyH,QAAP,CAAgBzkB,IANP,CAAX;AAQA,MAAI0kB,eAAe,qCAAuC,EAA1D;AACA,kBAASriB,IAAT,CAAckR,IAAd,EAAoB,UAAU3P,GAAV,EAAe;AACjC8gB,iBAAa9gB,GAAb,IAAoBob,QAAQpb,GAAR,CAApB;AACD,GAFD;AAGA4gB,aAAWnB,WAAX,EAAwBqB,YAAxB,EAAsChc,IAAtC;AACD,CAjBD;;AAmBA;;;;;;;;;AASAsU,OAAO0F,OAAP,GAAiB,UAAUE,QAAV,EAAoBvV,YAApB,EAAkC;AACjD,MAAItL,MAAM7C,OAAO2C,QAAP,CAAgBD,IAA1B;AACA,MAAIkhB,YAAYF,SAAS,MAAT,KAAoB,WAApC;AACA,MAAIlJ,OAAO,SAAPA,IAAO,CAAUf,KAAV,EAAiB9F,GAAjB,EAAsBb,CAAtB,EAAyB2S,IAAzB,EAA+B;AACxC,QAAIhM,SAAS9F,GAAT,IAAgBxF,YAApB,EAAkC;AAChCA,mBAAasX,IAAb;AACD;AACF,GAJD;AAKA,MAAI7B,SAAJ,EAAe;AACb,QAAII,QAAQN,SAAS,OAAT,CAAZ;AACA,QAAI/P,MAAMqQ,MAAMvgB,MAAN,GAAe,CAAzB;AACA,oBAASN,IAAT,CAAc6gB,KAAd,EAAqB,UAAUC,IAAV,EAAgBxK,KAAhB,EAAuB;AAC1C,UAAIlb,KAAK,cAAQD,IAAR,CAAakc,IAAb,EAAmB,IAAnB,EAAyBf,KAAzB,EAAgC9F,GAAhC,CAAT;AACA,yBAAe6P,OAAf,CAAuB3gB,GAAvB,EAA4BohB,IAA5B,EAAkC,IAAlC,EAAwC1lB,EAAxC;AACD,KAHD;AAID,GAPD,MAOO;AACLmlB,eAAW,qCAAuCA,QAAlD;AACA,QAAInlB,KAAK,cAAQD,IAAR,CAAakc,IAAb,EAAmB,IAAnB,EAAyB,CAAzB,EAA4B,CAA5B,CAAT;AACA,uBAAegJ,OAAf,CAAuB3gB,GAAvB,EAA4B6gB,QAA5B,EAAsC,IAAtC,EAA4CnlB,EAA5C;AACD;AACF,CApBD;;AAsBA;;;;;;;;;;;;;;;;;AAiBAuf,OAAOE,cAAP,GAAwB,UAAUnb,GAAV,EAAezD,GAAf,EAAoB6hB,WAApB,EAAiCyE,YAAjC,EACUxC,OADV,EACmB;AACzC,MAAIyC,SAAS,EAAC,OAAO9iB,GAAR,EAAa,OAAOzD,GAApB,EAAyB,OAAO8jB,OAAhC,EAAb;AACA,MAAIpD,UAAUmB,eAAe,qCAAuC,EAApE;AACA,MAAI1iB,KAAKuhB,QAAQhC,OAAOyH,QAAP,CAAgBxkB,KAAxB,CAAT;AACA,MAAI6kB,UAAU9H,OAAOpP,QAAP,CAAgBnQ,EAAhB,EAAoBonB,MAApB,CAAd;AACA,MAAIC,WAAW,CAACF,YAAhB,EAA8B;AAC5BE,cAAU,cAAQvmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBK,KAAnC,EAA0C4kB,MAA1C,CAAV;AACD;AACD,SAAOC,OAAP;AACD,CAVD;;AAYA;;;;;;;;;AASA9H,OAAO2G,eAAP,GAAyB,UAAU5hB,GAAV,EAAewhB,MAAf,EAAuB;AAC9C,MAAIsB,SAAS,EAAC,OAAO9iB,GAAR,EAAa,UAAUwhB,MAAvB,EAAb;AACA,gBAAQhlB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBa,MAAnC,EAA2CokB,MAA3C;AACD,CAHD;;AAKA;;;;;;;;;;AAUA7H,OAAO+B,cAAP,GAAwB,UAAUhd,GAAV,EAAeoI,MAAf,EAAuB;AAC7C,MAAI0a,SAAS,EAAC,OAAO9iB,GAAR,EAAa,UAAUoI,MAAvB,EAAb;AACA,SAAO,cAAQ5L,QAAR,CAAiB,cAAQqB,SAAR,CAAkBC,KAAnC,EAA0CglB,MAA1C,CAAP;AACD,CAHD;;AAKA;;;;;;;;;;;;AAYA7H,OAAOgD,gBAAP,GAA0B,UAAUje,GAAV,EAAegjB,WAAf,EAA4BC,YAA5B,EAA0C;AAClE,MAAIH,SAAS,EAAC,OAAO9iB,GAAR,EAAa,WAAWgjB,WAAxB,EAAqC,YAAYC,YAAjD,EAAb;AACA,SAAO,cAAQzmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBM,OAAnC,EAA4C2kB,MAA5C,CAAP;AACD,CAHD;;AAKA;;;;;;;;;;;;;;;;;;AAkBA7H,OAAOwD,gBAAP,GAA0B,UAAUze,GAAV,EAAe0d,OAAf,EAAwBpH,QAAxB,EAAkC8H,WAAlC,EACUyE,YADV,EACwB;AAChD,MAAIC,SAAS,EAAC,OAAO9iB,GAAR,EAAa,WAAW0d,OAAxB,EAAiC,YAAYpH,QAA7C,EAAb;AACA,MAAI2G,UAAUmB,eAAe,qCAAuC,EAApE;AACA,MAAI1iB,KAAKuhB,QAAQhC,OAAOyH,QAAP,CAAgB/jB,OAAxB,CAAT;AACA,MAAIokB,UAAU9H,OAAOpP,QAAP,CAAgBnQ,EAAhB,EAAoBonB,MAApB,CAAd;AACA,MAAIC,WAAW,CAACF,YAAhB,EAA8B;AAC5BE,cAAU,cAAQvmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBc,OAAnC,EAA4CmkB,MAA5C,CAAV;AACD;AACD,SAAOC,OAAP;AACD,CAVD;;AAYA;;;;;;;;;;;;;;;;;AAiBA9H,OAAOsF,oBAAP,GAA8B,UAAUvgB,GAAV,EAAesgB,OAAf,EAAwBlC,WAAxB,EACUyE,YADV,EACwB;AACpD,MAAIC,SAAS,EAAC,OAAO9iB,GAAR,EAAa,QAAQsgB,OAArB,EAAb;AACA,MAAIrD,UAAUmB,eAAe,qCAAuC,EAApE;AACA,MAAI1iB,KAAKuhB,QAAQhC,OAAOyH,QAAP,CAAgBnkB,YAAxB,CAAT;AACA,MAAIwkB,UAAU9H,OAAOpP,QAAP,CAAgBnQ,EAAhB,EAAoBonB,MAApB,CAAd;AACA,MAAIC,WAAW,CAACF,YAAhB,EAA8B;AAC5BE,cAAU,cAAQvmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBU,YAAnC,EAAiDukB,MAAjD,CAAV;AACD;AACD,SAAOC,OAAP;AACD,CAVD;;AAYA;;;;;;;;;;;;;;;;;AAiBA9H,OAAO2F,iBAAP,GAA2B,UAAU5gB,GAAV,EAAesgB,OAAf,EAAwBlC,WAAxB,EAAqCyE,YAArC,EAAmD;AAC5E,MAAIC,SAAS,EAAC,OAAO9iB,GAAR,EAAa,QAAQsgB,OAArB,EAAb;AACA,MAAIrD,UAAUmB,eAAe,qCAAuC,EAApE;AACA,MAAI1iB,KAAKuhB,QAAQhC,OAAOyH,QAAP,CAAgBpkB,SAAxB,CAAT;AACA,MAAIykB,UAAU9H,OAAOpP,QAAP,CAAgBnQ,EAAhB,EAAoBonB,MAApB,CAAd;AACA,MAAIC,WAAW,CAACF,YAAhB,EAA8B;AAC5BE,cAAU,cAAQvmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBS,SAAnC,EAA8CwkB,MAA9C,CAAV;AACD;AACD,SAAOC,OAAP;AACD,CATD;;AAWA;;;;;;;;;;;;;;;;;AAiBA9H,OAAO+F,gBAAP,GAA0B,UAAUhhB,GAAV,EAAe6gB,QAAf,EAAyBzC,WAAzB,EAAsCyE,YAAtC,EAAoD;AAC5E,MAAIC,SAAS,EAAC,OAAO9iB,GAAR,EAAa,YAAY6gB,QAAzB,EAAb;AACA,MAAI5D,UAAUmB,eAAe,qCAAuC,EAApE;AACA,MAAI1iB,KAAKuhB,QAAQhC,OAAOyH,QAAP,CAAgBlkB,OAAxB,CAAT;AACA,MAAIukB,UAAU9H,OAAOpP,QAAP,CAAgBnQ,EAAhB,EAAoBonB,MAApB,CAAd;AACA,MAAIC,WAAW,CAACF,YAAhB,EAA8B;AAC5BE,cAAU,cAAQvmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBW,OAAnC,EAA4CskB,MAA5C,CAAV;AACD;AACD,SAAOC,OAAP;AACD,CATD;;AAWA;;;;;;;;;;;;;;;;;AAiBA9H,OAAOoG,aAAP,GAAuB,UAAUrhB,GAAV,EAAe6gB,QAAf,EAAyBzC,WAAzB,EAAsCyE,YAAtC,EAAoD;AACzE,MAAIC,SAAS,EAAC,OAAO9iB,GAAR,EAAa,YAAY6gB,QAAzB,EAAb;AACA,MAAI5D,UAAUmB,eAAe,qCAAuC,EAApE;AACA,MAAI1iB,KAAKuhB,QAAQhC,OAAOyH,QAAP,CAAgBzkB,IAAxB,CAAT;AACA,MAAI8kB,UAAU9H,OAAOpP,QAAP,CAAgBnQ,EAAhB,EAAoBonB,MAApB,CAAd;AACA,MAAIC,WAAW,CAACF,YAAhB,EAA8B;AAC5BE,cAAU,cAAQvmB,QAAR,CAAiB,cAAQqB,SAAR,CAAkBI,IAAnC,EAAyC6kB,MAAzC,CAAV;AACD;AACD,SAAOC,OAAP;AACD,CATD;;AAWA;;;;;;AAMA9H,OAAOiE,UAAP,GAAoB,UAAUlf,GAAV,EAAe;AACjC,SAAO,aAAa,cAAOyO,QAAP,CAAgBzO,GAAhB,CAApB;AACD,CAFD;;AAIA;;;;;;AAMAib,OAAO2D,aAAP,GAAuB,UAAU5e,GAAV,EAAe;AACpC,SAAO,gBAAgB,cAAOyO,QAAP,CAAgBzO,GAAhB,CAAvB;AACD,CAFD;;AAIA;;;;;;AAMAib,OAAOkH,WAAP,GAAqB,UAAUniB,GAAV,EAAewf,GAAf,EAAoB;AACvC,kBAASlZ,KAAT,CAAe,kBAAf,EAAmCtG,GAAnC,EAAwCwf,GAAxC;AACA,MAAI3C,cAAc,cAAOpO,QAAP,CAAgBzO,GAAhB,CAAlB;AACA,MAAI6e,aAAa5D,OAAO6D,WAAP,EAAjB;AACAD,aAAWhC,WAAX,IAA0B2C,GAA1B;AACD,CALD;;AAOA;;;;;AAKAvE,OAAOoH,cAAP,GAAwB,UAAUriB,GAAV,EAAe;AACrC,kBAASsG,KAAT,CAAe,qBAAf,EAAsCtG,GAAtC;AACA,MAAI6c,cAAc,cAAOpO,QAAP,CAAgBzO,GAAhB,CAAlB;AACA,MAAI6e,aAAa5D,OAAO6D,WAAP,EAAjB;AACA,MAAIC,cAAcF,WAAWhC,WAAX,CAAlB;AACA,MAAIkC,WAAJ,EAAiB;AACfA,gBAAYwC,KAAZ;AACD;AACD,SAAO1C,WAAWhC,WAAX,CAAP;AACD,CATD;;AAWA;;;;;;AAMA5B,OAAO0D,yBAAP,GAAmC,UAAUuE,WAAV,EAAuB;AACxD,kBAAS5c,KAAT,CAAe,+BAAf,EAAgD4c,WAAhD;AACA,MAAIrE,aAAa5D,OAAO6D,WAAP,EAAjB;AACA,MAAIjC,cAAcqG,eAAe,cAAOzU,QAAP,CAAgByU,WAAhB,CAAjC;AACA,OAAK,IAAIrhB,GAAT,IAAgBgd,UAAhB,EAA4B;AAC1B,QAAIhC,eAAehb,GAAnB,EAAwB;AACtBoZ,aAAOoH,cAAP,CAAsBxgB,GAAtB;AACD;AACF;AACF,CATD;;AAWA;;;;;AAKAoZ,OAAOsE,qBAAP,GAAgC,YAAY;AAC1C,MAAI4D,uBAAuBhmB,OAAOC,WAAP,KACvBD,OAAOC,WAAP,CAAmB+lB,oBAAnB,IACAhmB,OAAOC,WAAP,CAAmB,4BAAnB,CADA,IAEAD,OAAOC,WAAP,CAAmB,yBAAnB,CAFA,IAGAD,OAAOC,WAAP,CAAmB,wBAAnB,CAHA,IAIAD,OAAOC,WAAP,CAAmB,uBAAnB,CALuB,CAA3B;AAMA,MAAI+lB,oBAAJ,EAA0B;AACxB,WAAO,cAAQ1nB,IAAR,CAAa0nB,oBAAb,EAAmChmB,OAAOC,WAA1C,CAAP;AACD;AACD,SAAO,cAAQQ,YAAf;AACD,CAX8B,EAA/B;;AAaA;;;;;;;AAOAqd,OAAO6D,WAAP,GAAqB,UAAUsE,QAAV,EAAoB;AACvC,MAAIA,YAAY,CAAC,gBAASxhB,GAAT,CAAa,gBAASM,GAAT,CAAasB,cAA1B,CAAjB,EAA4D;AAC1D,WAAO,gDACH,gBAASxB,GAAT,CAAa,gBAASE,GAAT,CAAasB,cAA1B,EAA2C4f,YAAY,EAAvD;AADJ;AAED;AACD,SAAO,gDACH,gBAASrhB,GAAT,CAAa,gBAASG,GAAT,CAAasB,cAA1B;AADJ;AAED,CAPD;;AASA;;;;AAIAyX,OAAOsC,sBAAP,GAAgC,YAAY;AAC1C,MAAID,WAAW,8BACX,gBAASvb,GAAT,CAAa,gBAASG,GAAT,CAAaoB,wBAA1B,CAD0C,IACc,IAD5D;AAEA,MAAItD,MAAM,sBACN,gBAAS+B,GAAT,CAAa,gBAASG,GAAT,CAAaqB,mBAA1B,CAD6B,IACsB,EADvD;AAEA,MAAI+Z,YAAYtd,OAAO7C,OAAO2C,QAAP,CAAgBD,IAAvC,EAA6C;AAC3C,WAAOyd,QAAP;AACD;AACD,SAAO,IAAP;AACD,CATD;;AAWA;;;AAGArC,OAAOiD,sBAAP,GAAgC,YAAY;AAC1C,MAAIZ,WAAW,CAACngB,OAAO8iB,WAAR,EAAqB9iB,OAAO+iB,WAA5B,CAAf;AACA,kBAAS5Z,KAAT,CAAe,iCAAf,EAAkDgX,QAAlD;AACA,kBAAStb,GAAT,CAAa,gBAASE,GAAT,CAAaoB,wBAA1B,EAAoDga,QAApD;AACA,kBAAStb,GAAT,CAAa,gBAASE,GAAT,CAAaqB,mBAA1B,EAA+CpG,OAAO2C,QAAP,CAAgBD,IAA/D;AACD,CALD;;AAOA;;;AAGAob,OAAOuC,wBAAP,GAAkC,YAAY;AAC5C,kBAASxb,GAAT,CAAa,gBAASE,GAAT,CAAaoB,wBAA1B,EAAoD,IAApD;AACA,kBAAStB,GAAT,CAAa,gBAASE,GAAT,CAAaqB,mBAA1B,EAA+C,IAA/C;AACD,CAHD;;AAKA;;;;;;AAMA0X,OAAOI,uBAAP,GAAiC,YAAY;AAC3C,SAAQ,kBAAkBle,MAAlB,IAA4BA,OAAO+Z,SAAP,CAAiB,gBAAjB,IAAqC,CAAjE,IACJ/Z,OAAO+Z,SAAP,CAAiB,kBAAjB,IAAuC,CAD3C;AAED,CAHD;;AAKA;;;;;AAKA+D,OAAOiC,cAAP,GAAwB,UAAUkB,WAAV,EAAuB;AAC7C,MAAInB,UAAUmB,eAAe,qCAAuC,EAApE;AACA,SAAOnB,OAAP;AACD,CAHD;;AAKA;;;;;;;;;;;;;;;AAeAhC,OAAOoI,KAAP;;AAEA;;;;;;;AAOApI,OAAOkC,IAAP,GAAc,UAAUmG,QAAV,EAAoB;AAChCA,aAAWA,YAAY,2BAA6B,EAApD;AACA;;;;;AAKA;AACA;AACA,OAAKpc,OAAL,GAAgBoc,SAASxW,OAAT,IAAoBwW,SAASpc,OAA9B,GACMoc,SAASpc,OADf,GACyB/J,OAAO2C,QAAP,CAAgBD,IADxD;AAEA;;;;;AAKA,OAAKiN,OAAL,GAAe,CAAC,CAACwW,SAASxW,OAA1B;AACA;;;;;AAKA,OAAKgU,QAAL,GAAgBwC,SAASxC,QAAT,IAAqB,EAArC;AACA;;;;;;AAMA,OAAKxD,QAAL,GAAgBgG,SAAShG,QAAT,IAAqB,IAArC;AACA;;;;AAIA;AACA;AACA;AACA,OAAKI,OAAL,GAAgB4F,SAAS5F,OAAT,IAAoB5U,SAArB,GACMwa,SAAS5F,OADf,GACyBvgB,OAAO2C,QAAP,CAAgBD,IADxD;AAEA;;;;;AAKA,OAAK8d,OAAL,GAAe,CAAC,CAAC2F,SAAS3F,OAA1B;AACA;;;;;AAKA,OAAKoC,QAAL,GAAgB,CAAC,CAACuD,SAASvD,QAA3B;AACA;;;;;;AAMA,OAAK9Q,IAAL,GAAYqU,SAASrU,IAAT,IAAiB,EAA7B;AACD,CA1DD;;AA4DA;;;AAGAgM,OAAOyH,QAAP,GAAkB;AAChBxkB,SAAO,SADS;AAEhBS,WAAS,WAFO;AAGhBJ,gBAAc,eAHE;AAIhBD,aAAW,YAJK;AAKhBE,WAAS,WALO;AAMhBP,QAAM;;AAGR;;;AATkB,CAAlB,CAYAgd,OAAO6C,YAAP,GAAsB;AACpBE,cAAa,gBAAD,GAAe,GAAf,GACN,iDAFc;AAGpBU,oBAAmB,gBAAD,GAAe,GAAf,GACZ,8CAJc;AAKpB8B,yBAAwB,gBAAD,GAAe,GAAf,GACjB,kDANc;AAOpBS,oBAAmB,gBAAD,GAAe,GAAf,GACZ,8CARc;AASpBR,qBAAoB,gBAAD,GAAe,GAAf,GACb,8BAVc;AAWpB1C,aAAY,gBAAD,GAAe,GAAf,GACL,mDAZc;AAapB7f,SAAQ,gBAAD,GAAe,IAAf,GACD;AAdc,CAAtB;;kBAiBe+c,M;;;;;;;;;;;;;;;;;;ACpsDf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIsI,iBAAiB,EAArB;AACA;;AAEA;;;;;;;;;;;;;;;AA9BA;AACA;AACA;AACA;;AAEA;;;;;;AAwCAA,eAAeC,KAAf,GAAuB,UAAUnN,IAAV,EAAgBoN,aAAhB,EAA+BC,aAA/B,EAA8C;AACnE,MAAID,aAAJ,EAAmB;AACjB,QAAIE,aAAaJ,eAAeK,KAAf,CAAqBC,KAAtC;AACA,QAAIC,aAAaP,eAAeK,KAAf,CAAqBG,SAAtC;AACA,QAAIC,WAAWT,eAAeK,KAAf,CAAqBK,GAApC;AACA,QAAIC,qBAAqB,MAAzB;AACA,QAAI/C,QAAQ,EAAZ;AACA,QAAIgD,KAAJ;AACA,QAAI9iB,QAAQ,CAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIqiB,aAAJ,EAAmB;AACjBrN,cAAQ6N,kBAAR;AACD;AACD,QAAIE,SAAS/N,KAAKnV,OAAL,CAAayiB,UAAb,EAAyBtiB,KAAzB,CAAb;AACA,QAAI+iB,SAAS,CAAC,CAAd,EAAiB;AACf/iB,cAAQ+iB,SAAST,WAAW/iB,MAA5B;AACD;AACD,WAAO,CAACwjB,SAAS/N,KAAKnV,OAAL,CAAa4iB,UAAb,EAAyBziB,KAAzB,CAAV,IAA6C,CAAC,CAArD,EAAwD;AACtD8iB,cAAQ,iBAAU3e,IAAV,CAAe6Q,KAAK5G,SAAL,CAAepO,KAAf,EAAsB+iB,MAAtB,CAAf,CAAR;AACA/iB,cAAQ+iB,SAASN,WAAWljB,MAA5B;AACA,UAAIujB,KAAJ,EAAW;AACThD,cAAM/kB,IAAN,CAAWioB,KAAKb,KAAL,CAAWW,KAAX,CAAX;AACD;AACF;AACDC,aAAS/N,KAAKnV,OAAL,CAAa8iB,QAAb,EAAuB3iB,KAAvB,CAAT;AACA,QAAI+iB,SAAS,CAAC,CAAd,EAAiB;AACfD,cAAQ,iBAAU3e,IAAV,CAAe6Q,KAAK5G,SAAL,CAAepO,KAAf,EAAsB+iB,MAAtB,CAAf,CAAR;AACA/iB,cAAQ+iB,SAASJ,SAASpjB,MAA1B;AACA,UAAIujB,KAAJ,EAAW;AACThD,cAAM/kB,IAAN,CAAWioB,KAAKb,KAAL,CAAWW,KAAX,CAAX;AACD;AACF;AACD,QAAI5S,QAAQ,EAAZ;AACA,QAAI8E,KAAKzV,MAAL,GAAcS,KAAlB,EAAyB;AACvBkQ,cAAQ8E,KAAK5G,SAAL,CAAepO,KAAf,CAAR;AACA,UAAIqiB,iBAAiB,iBAAUre,QAAV,CAAmBkM,KAAnB,EAA0B2S,kBAA1B,CAArB,EAAoE;AAClE3S,gBAAQA,MAAM9B,SAAN,CAAgB,CAAhB,EAAmB8B,MAAM3Q,MAAN,GAAesjB,mBAAmBtjB,MAArD,CAAR;AACD;AACF;AACDugB,YAAQoC,eAAee,OAAf,CAAuBnD,KAAvB,CAAR;AACA,WAAO;AACLA,aAAO,6CAA8CA,KADhD;AAEL5P,aAAOA;AAFF,KAAP;AAID,GAjDD,MAiDO;AACL,QAAIsP,WAAWwD,KAAKb,KAAL,CAAWnN,IAAX,CAAf;AACA,QAAI8K,QAAQoC,eAAee,OAAf,CAAuB,gBAAS/iB,OAAT,CAAiBsf,QAAjB,CAAvB,CAAZ;AACA,WAAO;AACLM,aAAO,6CAA8CA,KADhD;AAEL5P,aAAO;AAFF,KAAP;AAID;AACF,CA1DD;;AA4DA;;;;;;;;;;AAUAgS,eAAe5C,OAAf,GAAyB,UAAU3gB,GAAV,EAAe6gB,QAAf,EAAyByC,QAAzB,EAAmChY,YAAnC,EAAiD;AACxE,kBAAS3E,IAAT,CAAc,uBAAd,EAAuCka,QAAvC,EAAiDyC,QAAjD;;AAEA,MAAIiB,aAAajB,YAAY,iBAAUte,UAAV,CAAqBse,SAASrU,IAA9B,EAAoC,UAApC,CAA7B;AACA,MAAIuV,YAAYlB,YAAYA,SAAS3F,OAArC;AACA,MAAI8G,cAAcnB,YAAY,CAAC,CAACA,SAAShG,QAAzC;AACA,MAAIoH,cAAcpB,YAAYA,SAASvD,QAAvC;;AAEA,MAAItjB,OAAOokB,SAAS,MAAT,KAAoB,EAA/B;;AAEA;AACA,MAAIhf,MAAM,aAAa,cAAO4M,QAAP,CAAgBzO,GAAhB,CAAvB;AACA,MAAI2kB,OAAO,CAAC,iBAAU5iB,GAAV,CAAc,4BAAd,CAAZ;;AAEA;AACA,MAAIrG,EAAJ;AACA,MAAIkpB,MAAM,CAAV;;AAEA;AACA,MAAI,CAAC/D,SAAS,QAAT,CAAL,EAAyB;AACvBA,aAAS,QAAT,IAAqB,EAArB;AACD;;AAED;AACA,MAAIA,SAAS,OAAT,CAAJ,EAAuB;AACrBlkB,aAASyQ,KAAT,GAAiByT,SAAS,OAAT,CAAjB;AACD;;AAED;AACA;AACA,MAAI0D,cAAc1D,SAAS,KAAT,CAAlB,EAAmC;AACjC,QAAIgE,UAAU,cAAOpW,QAAP,CAAgBoS,SAAS,KAAT,CAAhB,CAAd;AACA;AACA,QAAIgE,WAAWtB,eAAevX,cAAf,EAAf,EAAgD;AAC9C,sBAAS1F,KAAT,CAAe,oCAAf;AACA;AACA,wBAAWZ,OAAX,CAAmBmb,SAAS,KAAT,IAAkB1jB,OAAO2C,QAAP,CAAgBuO,IAArD;AACD;AACF;;AAED;AACA,MAAIwS,SAAS,MAAT,CAAJ,EAAsB;AACpBnlB,SAAK,cAAQD,IAAR,CAAa,UAAUqpB,IAAV,EAAgBznB,MAAhB,EAAwB;AACxC;AACA,UAAI0nB,YAAYxB,eAAeyB,QAAf,CAAwBF,IAAxB,CAAhB;AACA;AACAvB,qBAAe0B,aAAf,CAA6BF,SAA7B;AACA;AACAxB,qBAAe2B,cAAf,CAA8BH,SAA9B;AACA,sBAASze,KAAT,CAAe,cAAf;AACA;AACA;AACA;AACA,sBAASoT,OAAT,CAAiB7X,GAAjB;AACA0hB,qBAAe4B,eAAf,CAA+BJ,SAA/B,EAA0C,YAAY;AACpD1nB,eAAO,gBAAP,IAA2B,cAAQH,GAAR,EAA3B;AACA,wBAASoJ,KAAT,CAAe,aAAf;AACA;AACA,wBAASqT,MAAT,CAAgB9X,GAAhB,EAAqB8iB,IAArB;AACA,wBAASre,KAAT,CAAe,2BAAf;AACD,OAND;AAOD,KAnBI,EAmBF,IAnBE,EAmBIua,SAAS,MAAT,CAnBJ,EAmBsBA,SAAS,QAAT,CAnBtB,CAAL;AAoBA+D,UAAM,gBAAStY,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB,CAAN;AACA,oBAAS4K,KAAT,CAAe,6BAAf,EAA8Cse,GAA9C;AACD;;AAED;AACA,MAAI/D,SAAS,MAAT,CAAJ,EAAsB;AACpBnlB,SAAK,cAAQD,IAAR,CAAa,UAAU2pB,KAAV,EAAiB/nB,MAAjB,EAAyB;AACzC,WAAK,IAAIkO,EAAT,IAAe6Z,KAAf,EAAsB;AACpB,YAAI7R,KAAK5W,SAASiR,cAAT,CAAwBrC,EAAxB,CAAT;AACA,YAAIgI,EAAJ,EAAQ;AACN,wBAAOxI,aAAP,CAAqBwI,EAArB,EAAyB6R,MAAM7Z,EAAN,CAAzB;AACA,0BAASjF,KAAT,CAAe,cAAf,EAA+BiF,EAA/B;AACD;AACF;AACDlO,aAAO,gBAAP,IAA2B,cAAQH,GAAR,EAA3B;AACA,sBAASoJ,KAAT,CAAe,2BAAf;AACD,KAVI,EAUF,IAVE,EAUIua,SAAS,MAAT,CAVJ,EAUsBA,SAAS,QAAT,CAVtB,CAAL;AAWA+D,UAAM,gBAAStY,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB,CAAN;AACA,oBAAS4K,KAAT,CAAe,6BAAf,EAA8Cse,GAA9C;AACD;;AAED;AACA,MAAIS,YAAYxE,SAAS,MAAT,KAAoB,EAApC;AACA,MAAIyE,qBAAqBV,GAAzB;AACA,OAAK,IAAIrZ,EAAT,IAAe8Z,SAAf,EAA0B;AACxB3pB,SAAK,cAAQD,IAAR,CAAa,UAAU8P,EAAV,EAAcrC,IAAd,EAAoB7L,MAApB,EAA4B;AAC5C,UAAIkW,KAAK5W,SAASiR,cAAT,CAAwBrC,EAAxB,CAAT;AACA,UAAIgI,EAAJ,EAAQ;AACN;AACA;AACA;AACA;AACA;AACA,YAAIgR,cAAc,CAACE,WAAf,IAA8B,CAACC,WAAnC,EAAgD;AAC9C,0BAAS1iB,GAAT,CAAa,gBAASE,GAAT,CAAaoB,wBAA1B,EAAoD,IAApD;AACA,0BAAStB,GAAT,CAAa,gBAASE,GAAT,CAAaqB,mBAA1B,EAA+C,IAA/C;AACA,0BAAS+C,KAAT,CAAe,sBAAf;AACAnJ,iBAAOsgB,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACAiH,wBAAc,IAAd;AACA,cAAIpB,QAAJ,EAAc;AACZA,qBAASvD,QAAT,GAAoB,IAApB;AACD;AACF;AACD;AACA,YAAIgF,YAAYxB,eAAeyB,QAAf,CAAwB9b,IAAxB,CAAhB;AACA;AACAqa,uBAAe2B,cAAf,CAA8BH,SAA9B;AACA;AACA,YAAIQ,iBAAiB,SAAjBA,cAAiB,GAAY;AAC/B;AACA;AACA;AACA,0BAAS7L,OAAT,CAAiB7X,GAAjB;AACA0hB,yBAAe4B,eAAf,CAA+BJ,SAA/B,EAA0C,YAAY;AACpD;AACA,4BAASpL,MAAT,CAAgB9X,GAAhB,EAAqB8iB,IAArB;AACA,4BAASre,KAAT,CAAe,2BAAf,EAA4CiF,EAA5C;AACD,WAJD;AAKD,SAVD;;AAYA,YAAIia,iBAAiB,qBACjB,iBAAUzjB,GAAV,CAAc,iBAAd,CADJ;AAEA,YAAI0jB,cAAe,CAAClC,eAAemC,YAAhB,IACA,CAAC,oBAAgB7gB,QAAhB,CAAyB0O,EAAzB,EAA6BiS,cAA7B,CADpB;AAEA,YAAIC,WAAJ,EAAiB;AACf,cAAIE,cAAc,uBACd,iBAAU5jB,GAAV,CAAc,2BAAd,CADJ;AAEA,cAAI4jB,WAAJ,EAAiB;AACf;AACA,4BAASjM,OAAT,CAAiB7X,GAAjB;AACA8jB,wBAAYZ,UAAU,MAAV,CAAZ,EAA+BxR,EAA/B,EAAmC,YAAY;AAC7CgS;AACA;AACA,8BAAS5L,MAAT,CAAgB9X,GAAhB,EAAqB8iB,IAArB;AACD,aAJD;AAKD,WARD,MAQO;AACLpR,eAAGqS,SAAH,GAAeb,UAAU,MAAV,CAAf;AACAQ;AACD;AACF,SAfD,MAeO;AACL,cAAIM,YAAY,IAAItC,eAAeuC,UAAnB,CACZvS,EADY,EAEZwR,UAAU,MAAV,CAFY,EAGZS,cAHY,EAIZ/oB,IAJY,EAKZkB,SAAS,iBAAUoE,GAAV,CAAc,oBAAd,CAAT,EAA8C,EAA9C,CALY,EAMZ,CAAC,CAACyiB,SANU,CAAhB;AAOA;AACA,0BAAS9K,OAAT,CAAiB7X,GAAjB;AACA;AACA,0BAAS6T,GAAT,CAAamQ,UAAUhkB,GAAvB,EAA4B,IAA5B;AACA;AACA,0BAASyK,GAAT,CACIuZ,UAAUhkB,GADd,EAEI,cAAQpG,IAAR,CAAa8nB,eAAewC,iBAA5B,EAA+C,IAA/C,EAAqDF,SAArD,CAFJ,EAGI,CAHJ;AAIA,0BAASvf,KAAT,CAAe,oCAAf,EAAqDiF,EAArD;AACA;AACA,0BAASe,GAAT,CACIuZ,UAAUhkB,GADd,EAEI,cAAQpG,IAAR,CAAa8nB,eAAeyC,aAA5B,EAA2C,IAA3C,EAAiDH,SAAjD,CAFJ,EAGI,EAHJ;AAIA,0BAASvf,KAAT,CAAe,gCAAf,EAAiDiF,EAAjD;AACA;AACA,0BAASe,GAAT,CACIuZ,UAAUhkB,GADd,EAEI,cAAQpG,IAAR,CAAa8nB,eAAe0C,kBAA5B,EAAgD,IAAhD,EAAsDJ,SAAtD,CAFJ,EAGIA,UAAUK,QAHd;AAIA,0BAAS5f,KAAT,CAAe,qCAAf,EAAsDiF,EAAtD;AACA;AACA,0BAASe,GAAT,CACIuZ,UAAUhkB,GADd,EAEI,cAAQpG,IAAR,CAAa,YAAY;AACvB8pB;AACA,4BAAS5L,MAAT,CAAgB9X,GAAhB,EAAqB8iB,IAArB;AACD,WAHD,EAGG,IAHH,CAFJ,EAMI,CANJ;AAOA,0BAASjP,GAAT,CAAamQ,UAAUhkB,GAAvB;AACD;AACF;AACF,KA/FI,EA+FF,IA/FE,EA+FI0J,EA/FJ,EA+FQ8Z,UAAU9Z,EAAV,CA/FR,EA+FuBsV,SAAS,QAAT,CA/FvB,CAAL;AAgGA+D,UAAM,gBAAStY,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB,CAAN;AACA,oBAAS4K,KAAT,CAAe,6BAAf,EAA8CiF,EAA9C,EAAkDqZ,GAAlD;AACD;AACD,MAAIuB,oBAAoBvB,GAAxB;AACA,MAAIwB,eAAeD,oBAAoBb,kBAAvC;;AAEA;AACA,MAAIzE,SAAS,MAAT,CAAJ,EAAsB;AACpBnlB,SAAK,cAAQD,IAAR,CAAa,UAAU4qB,IAAV,EAAgBhpB,MAAhB,EAAwB+oB,YAAxB,EAAsC;AACtD;AACA;AACA,UAAIA,YAAJ,EAAkB;AAChB/oB,eAAO,gBAAP,IAA2B,cAAQH,GAAR,EAA3B;AACD;AACD;AACA,UAAI6nB,YAAYxB,eAAeyB,QAAf,CAAwBqB,IAAxB,CAAhB;AACA;AACA9C,qBAAe2B,cAAf,CAA8BH,SAA9B;AACA,sBAASze,KAAT,CAAe,cAAf;AACA;AACA;AACA;AACA,sBAASoT,OAAT,CAAiB7X,GAAjB;AACA0hB,qBAAe4B,eAAf,CAA+BJ,SAA/B,EAA0C,YAAY;AACpD1nB,eAAO,gBAAP,IAA2B,cAAQH,GAAR,EAA3B;AACA,wBAASoJ,KAAT,CAAe,aAAf;AACA,wBAASqT,MAAT,CAAgB9X,GAAhB,EAAqB8iB,IAArB,EAHoD,CAGxB;AAC5B,wBAASre,KAAT,CAAe,2BAAf;AACD,OALD;AAMD,KArBI,EAqBF,IArBE,EAqBIua,SAAS,MAAT,CArBJ,EAqBsBA,SAAS,QAAT,CArBtB,EAsBDuF,YAtBC,CAAL;AAuBAxB,UAAM,gBAAStY,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB,CAAN;AACA,oBAAS4K,KAAT,CAAe,6BAAf,EAA8Cse,GAA9C;AACD,GA1BD,MA0BO,IAAIwB,YAAJ,EAAkB;AACvB;AACA;AACA;AACA;AACA1qB,SAAK,cAAQD,IAAR,CAAa,UAAU4B,MAAV,EAAkB;AAClCA,aAAO,gBAAP,IAA2B,cAAQH,GAAR,EAA3B;AACA,sBAASoJ,KAAT,CAAe,sCAAf;AACD,KAHI,EAGF,IAHE,EAGIua,SAAS,QAAT,CAHJ,CAAL;AAIA+D,UAAM,gBAAStY,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB,CAAN;AACA,oBAAS4K,KAAT,CAAe,wCAAf,EAAyDse,GAAzD;AACD;;AAED;AACA,MAAItZ,YAAJ,EAAkB;AAChBsZ,UAAM,gBAAStY,GAAT,CAAazK,GAAb,EAAkB,cAAQpG,IAAR,CAAa6P,YAAb,EAA2B,IAA3B,EAAiCtL,GAAjC,EAAsC6gB,QAAtC,CAAlB,CAAN;AACA,oBAASva,KAAT,CAAe,iCAAf,EAAkDse,GAAlD;AACD;;AAED,kBAASte,KAAT,CAAe,eAAf,EAAgCzE,GAAhC,EAAqC8iB,IAArC;AACA,kBAASjP,GAAT,CAAa7T,GAAb,EAAkB8iB,IAAlB;AACD,CA7OD;;AA+OA;;;;;;;;;;;;;AAaApB,eAAef,UAAf,GAA4B,UAAUxiB,GAAV,EAAe6gB,QAAf,EAAyByC,QAAzB,EAAmChY,YAAnC,EAAiD;AAC3E,kBAAS3E,IAAT,CAAc,0BAAd,EAA0Cka,QAA1C;AACA;AACA,MAAIhf,MAAM,gBAAgB,cAAO4M,QAAP,CAAgBzO,GAAhB,CAA1B;;AAEA;AACA,MAAItE,EAAJ;;AAEA;AACA,MAAImlB,SAAS,MAAT,CAAJ,EAAsB;AACpBnlB,SAAK,cAAQD,IAAR,CAAa,UAAUqpB,IAAV,EAAgB;AAChC,UAAIC,YAAYxB,eAAeyB,QAAf,CAAwBF,IAAxB,CAAhB;AACAvB,qBAAe+C,gBAAf,CAAgCvB,SAAhC;AACAxB,qBAAegD,iBAAf,CAAiCxB,SAAjC;AACAxB,qBAAeiD,kBAAf,CAAkCzB,SAAlC;AACA,sBAASze,KAAT,CAAe,8BAAf;AACD,KANI,EAMF,IANE,EAMIua,SAAS,MAAT,CANJ,CAAL;AAOA,oBAASvU,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB;AACA,oBAAS4K,KAAT,CAAe,gCAAf;AACD;;AAED;AACA,MAAI+e,YAAYxE,SAAS,MAAT,KAAoB,EAApC;AACA,OAAK,IAAItV,EAAT,IAAe8Z,SAAf,EAA0B;AACxB,QAAIA,UAAU9Z,EAAV,CAAJ,EAAmB;AACjB7P,WAAK,cAAQD,IAAR,CAAa,UAAU8P,EAAV,EAAcrC,IAAd,EAAoB;AACpC,YAAI6b,YAAYxB,eAAeyB,QAAf,CAAwB9b,IAAxB,CAAhB;AACAqa,uBAAegD,iBAAf,CAAiCxB,SAAjC;AACAxB,uBAAeiD,kBAAf,CAAkCzB,SAAlC;AACA,wBAASze,KAAT,CAAe,aAAf,EAA8BiF,EAA9B;AACA,wBAASjF,KAAT,CAAe,8BAAf,EAA+CiF,EAA/C;AACD,OANI,EAMF,IANE,EAMIA,EANJ,EAMQ8Z,UAAU9Z,EAAV,CANR,CAAL;AAOA,sBAASe,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB;AACA,sBAAS4K,KAAT,CAAe,gCAAf,EAAiDiF,EAAjD;AACD;AACF;;AAED;AACA,MAAIsV,SAAS,MAAT,CAAJ,EAAsB;AACpBnlB,SAAK,cAAQD,IAAR,CAAa,UAAU4qB,IAAV,EAAgB;AAChC,UAAItB,YAAYxB,eAAeyB,QAAf,CAAwBqB,IAAxB,CAAhB;AACA9C,qBAAegD,iBAAf,CAAiCxB,SAAjC;AACAxB,qBAAeiD,kBAAf,CAAkCzB,SAAlC;AACA,sBAASze,KAAT,CAAe,8BAAf;AACD,KALI,EAKF,IALE,EAKIua,SAAS,MAAT,CALJ,CAAL;AAMA,oBAASvU,GAAT,CAAazK,GAAb,EAAkBnG,EAAlB;AACA,oBAAS4K,KAAT,CAAe,gCAAf;AACD;;AAED;AACA,MAAIgF,YAAJ,EAAkB;AAChB,oBAASgB,GAAT,CAAazK,GAAb,EAAkB,cAAQpG,IAAR,CAAa6P,YAAb,EAA2B,IAA3B,EAAiCtL,GAAjC,EAAsC6gB,QAAtC,CAAlB;AACA,oBAASva,KAAT,CAAe,oCAAf;AACD;;AAED;AACA,kBAASoP,GAAT,CAAa7T,GAAb;AACD,CAzDD;;AA2DA;;;;AAIA0hB,eAAewC,iBAAf,GAAmC,UAAU5Y,IAAV,EAAgB;AACjD;AACA,sBAAgBb,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAKsZ,QAAvC;AACA,sBAAgBna,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAKuZ,SAAvC;AACA,sBAAgBpa,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAKwZ,OAAvC;AACA,sBAAgBra,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAKyZ,UAAvC;AACA,sBAAgBta,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAK0Z,oBAAvC;AACA;AACA1Z,OAAK2Z,KAAL,GAAanqB,SAASiD,aAAT,CAAuB,KAAvB,CAAb;AACAuN,OAAK2Z,KAAL,CAAW7b,SAAX,GAAuBkC,KAAK4Z,QAA5B;AACA,gBAAOrc,WAAP,CAAmByC,KAAKhD,OAAxB,EAAiCgD,KAAK2Z,KAAtC;AACA;AACA3Z,OAAK6Z,KAAL,GAAarqB,SAASiD,aAAT,CAAuB,KAAvB,CAAb;AACAuN,OAAK6Z,KAAL,CAAW/b,SAAX,GAAuBkC,KAAK8Z,QAA5B;AACA9Z,OAAK6Z,KAAL,CAAWpB,SAAX,GAAuBzY,KAAK+Z,IAA5B;AACA,MAAI/Z,KAAKwQ,OAAT,EAAkB;AAChB,kBAAOhU,mBAAP,CAA2BwD,KAAK6Z,KAAhC,EAAuC7Z,KAAK2Z,KAA5C;AACD,GAFD,MAEO;AACL,kBAAO9c,kBAAP,CAA0BmD,KAAK6Z,KAA/B,EAAsC7Z,KAAK2Z,KAA3C;AACD;AACD,kBAASxgB,KAAT,CAAe,kCAAf,EAAmD6G,KAAKhD,OAAL,CAAaoB,EAAhE;AACD,CArBD;;AAuBA;;;;AAIAgY,eAAeyC,aAAf,GAA+B,UAAU7Y,IAAV,EAAgB;AAC7C,sBAAgBwD,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAKyZ,UAA1C;AACA,sBAAgBjW,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAK0Z,oBAA1C;AACA,sBAAgBva,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAKga,QAAvC;AACA,sBAAgB7a,GAAhB,CAAoBa,KAAKhD,OAAzB,EAAkCgD,KAAKia,kBAAvC;AACA,kBAAS9gB,KAAT,CAAe,8BAAf,EAA+C6G,KAAKhD,OAAL,CAAaoB,EAA5D;AACD,CAND;;AAQA;;;;AAIAgY,eAAe0C,kBAAf,GAAoC,UAAU9Y,IAAV,EAAgB;AAClD;AACAA,OAAKhD,OAAL,CAAaM,WAAb,CAAyB0C,KAAK2Z,KAA9B;AACA;AACA,gBAAO5c,aAAP,CAAqBiD,KAAK6Z,KAA1B;AACA;AACA,sBAAgBrW,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAKga,QAA1C;AACA,sBAAgBxW,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAKia,kBAA1C;AACA,sBAAgBzW,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAKuZ,SAA1C;AACA,sBAAgB/V,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAKwZ,OAA1C;AACA,sBAAgBhW,MAAhB,CAAuBxD,KAAKhD,OAA5B,EAAqCgD,KAAKsZ,QAA1C;AACA,kBAASngB,KAAT,CAAe,mCAAf,EAAoD6G,KAAKhD,OAAL,CAAaoB,EAAjE;AACD,CAZD;;AAcA;;;;;;;;;AASAgY,eAAee,OAAf,GAAyB,UAAUzD,QAAV,EAAoB;AAC3C,kBAASva,KAAT,CAAe,wBAAf,EAAyCua,QAAzC;AACA,MAAIM,QAAQ,gBAAS5f,OAAT,CAAiBsf,QAAjB,CAAZ;AACA,kBAASvgB,IAAT,CAAc6gB,KAAd,EAAqB,UAAUC,IAAV,EAAgB;AACnC,QAAIA,IAAJ,EAAU;AACR,UAAIA,KAAK,MAAL,CAAJ,EAAkB;AAChBA,aAAK,MAAL,IAAemC,eAAeyB,QAAf,CAAwB5D,KAAK,MAAL,CAAxB,CAAf;AACD;AACD,UAAIA,KAAK,MAAL,CAAJ,EAAkB;AAChB,aAAK,IAAI7V,EAAT,IAAe6V,KAAK,MAAL,CAAf,EAA6B;AAC3BA,eAAK,MAAL,EAAa7V,EAAb,IAAmBgY,eAAeyB,QAAf,CAAwB5D,KAAK,MAAL,EAAa7V,EAAb,CAAxB,CAAnB;AACD;AACF;AACD,UAAI6V,KAAK,MAAL,CAAJ,EAAkB;AAChBA,aAAK,MAAL,IAAemC,eAAeyB,QAAf,CAAwB5D,KAAK,MAAL,CAAxB,CAAf;AACD;AACF;AACF,GAdD;AAeA,SAAOP,QAAP;AACD,CAnBD;;AAqBA;;;;;;;;;;;AAWA0C,eAAeyB,QAAf,GAA0B,UAAUqC,IAAV,EAAgB;AACxC,MAAIphB,SAAS,IAAIsd,eAAe+D,WAAnB,EAAb;AACA,MAAI,CAACD,IAAL,EAAW;AACT,WAAOphB,MAAP;AACD;;AAED;AACA;AACA,MAAI,CAAC,iBAAUV,QAAV,CAAmB8hB,IAAnB,CAAL,EAA+B;AAC7B;AACA,QAAIA,KAAK,SAAL,CAAJ,EAAqB;AACnB,sBAAS/mB,IAAT,CAAc+mB,KAAK,SAAL,CAAd,EAA+B,UAAUE,MAAV,EAAkB;AAC/CthB,eAAO,SAAP,EAAkB7J,IAAlB,CAAuB,EAAC4D,KAAKunB,OAAO,KAAP,KAAiB,EAAvB;AACrBlR,gBAAMkR,OAAO,MAAP,KAAkB,EADH;AAErB9qB,gBAAM8qB,OAAO,MAAP,KAAkB,EAFH;AAGrBxS,iBAAOwS,OAAO,OAAP,KAAmB,KAHL,EAAvB;AAID,OALD;AAMD;AACD;AACA,QAAIF,KAAK,QAAL,CAAJ,EAAoB;AAClB,sBAAS/mB,IAAT,CAAc+mB,KAAK,QAAL,CAAd,EAA8B,UAAU3e,KAAV,EAAiB;AAC7CzC,eAAO,QAAP,EAAiB7J,IAAjB,CAAsB,EAAC4D,KAAK0I,MAAM,KAAN,KAAgB,EAAtB;AACpB2N,gBAAM3N,MAAM,MAAN,KAAiB,EADH;AAEpBjM,gBAAMiM,MAAM,MAAN,KAAiB,EAFH,EAAtB;AAGD,OAJD;AAKD;AACD;AACA,QAAI2e,KAAK,OAAL,CAAJ,EAAmB;AACjB,sBAAS/mB,IAAT,CAAc+mB,KAAK,OAAL,CAAd,EAA6B,UAAUpf,IAAV,EAAgB;AAC3C,YAAIA,KAAK,KAAL,KAAe,gBAAnB,EAAqC;AACnChC,iBAAO,OAAP,EAAgB7J,IAAhB,CAAqB,EAAC4D,KAAKiI,KAAK,KAAL,KAAe,EAArB;AACnB+M,iBAAK/M,KAAK,KAAL,KAAe,EADD,EAArB;AAED;AACF,OALD;AAMD;AACDhC,WAAO,MAAP,IAAiBohB,KAAK,MAAL,KAAgB,EAAjC;AACA,WAAOphB,MAAP;AACD;;AAED;AACAohB,SAAO,qBAAuBA,IAA9B;;AAEA;AACAA,SAAOA,KAAK3hB,OAAL,CAAa6d,eAAeiE,YAAf,CAA4BC,YAAzC,EACH,UAAUC,IAAV,EAAgBrT,GAAhB,EAAqBsT,IAArB,EAA2BtR,IAA3B,EAAiC;AAC/B;AACA;AACA,QAAIhC,OAAO,QAAX,EAAqB;AACnB,UAAI5X,OAAOkrB,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BC,IAAzC,CAAX;AACAprB,aAAOA,OAAOA,KAAK,CAAL,CAAP,GAAiB,EAAxB;AACA,UAAIuD,MAAM2nB,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BE,GAAzC,CAAV;AACA9nB,YAAMA,MAAMA,IAAI,CAAJ,CAAN,GAAe,EAArB;AACA,UAAI+U,QAAQwO,eAAeqE,cAAf,CAA8BG,KAA9B,CAAoCpT,IAApC,CAAyCgT,IAAzC,CAAZ;AACA,UAAI1Y,OAAOsU,eAAeqE,cAAf,CAA8BI,IAA9B,CAAmCxR,IAAnC,CAAwCmR,IAAxC,CAAX;AACA,UAAIM,SAAS,CAAChZ,IAAD,IAAS,iBAAUpK,QAAV,CAAmBoK,KAAK,CAAL,CAAnB,EAA4B,aAA5B,CAAT,IACT,iBAAUpK,QAAV,CAAmBoK,KAAK,CAAL,CAAnB,EAA4B,eAA5B,CADS,IAET,iBAAUpK,QAAV,CAAmBoK,KAAK,CAAL,CAAnB,EAA4B,aAA5B,CAFJ;AAGA,UAAIgZ,MAAJ,EAAY;AACVhiB,eAAO,SAAP,EAAkB7J,IAAlB,CACI,EAAC4D,KAAKA,GAAN,EAAWqW,MAAMA,IAAjB,EAAuB5Z,MAAMA,IAA7B,EAAmCsY,OAAOA,KAA1C,EADJ;AAEA,eAAO,EAAP;AACD,OAJD,MAIO;AACL,eAAO2S,IAAP;AACD;AACF;AACD;AACA,QAAIrT,OAAO,OAAX,EAAoB;AAClB,UAAI5X,OAAOkrB,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BC,IAAzC,CAAX;AACAprB,aAAOA,OAAOA,KAAK,CAAL,CAAP,GAAiB,EAAxB;AACA,UAAIwS,OAAOsU,eAAeqE,cAAf,CAA8BI,IAA9B,CAAmCxR,IAAnC,CAAwCmR,IAAxC,CAAX;AACA,UAAIM,SAAS,CAAChZ,IAAD,IAAS,iBAAUpK,QAAV,CAAmBoK,KAAK,CAAL,CAAnB,EAA4B,UAA5B,CAAtB;AACA,UAAIgZ,MAAJ,EAAY;AACVhiB,eAAO,QAAP,EAAiB7J,IAAjB,CAAsB,EAAC4D,KAAK,EAAN,EAAUqW,MAAMA,IAAhB,EAAsB5Z,MAAMA,IAA5B,EAAtB;AACA,eAAO,EAAP;AACD,OAHD,MAGO;AACL,eAAOirB,IAAP;AACD;AACF;AACD;AACA,WAAOA,IAAP;AACD,GArCE,CAAP;;AAuCA;AACAL,SAAOA,KAAK3hB,OAAL,CAAa6d,eAAeiE,YAAf,CAA4BU,IAAzC,EACH,UAAUR,IAAV,EAAgBC,IAAhB,EAAsB;AACpB,QAAI3S,MAAM2S,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BO,GAAzC,CAAV;AACAnT,UAAMA,MAAMA,IAAI,CAAJ,CAAN,GAAe,EAArB;AACA;AACA;AACA,QAAIA,OAAO,YAAX,EAAyB;AACvB,UAAIvY,OAAOkrB,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BC,IAAzC,CAAX;AACAprB,aAAOA,OAAOA,KAAK,CAAL,CAAP,GAAiB,EAAxB;AACA,UAAIuD,MAAM2nB,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BQ,IAAzC,CAAV;AACApoB,YAAMA,MAAMA,IAAI,CAAJ,CAAN,GAAe,EAArB;AACAiG,aAAO,QAAP,EAAiB7J,IAAjB,CAAsB,EAAC4D,KAAKA,GAAN,EAAWqW,MAAM,EAAjB,EAAqB5Z,MAAMA,IAA3B,EAAtB;AACA,aAAO,EAAP;AACD;AACD;AACA;AACA,QAAIuY,OAAO,gBAAX,EAA6B;AAC3B,UAAIhV,MAAM2nB,KAAK5V,KAAL,CAAWwR,eAAeqE,cAAf,CAA8BQ,IAAzC,CAAV;AACApoB,YAAMA,MAAMA,IAAI,CAAJ,CAAN,GAAe,EAArB;AACAiG,aAAO,OAAP,EAAgB7J,IAAhB,CAAqB,EAAC4D,KAAKA,GAAN,EAAWgV,KAAKA,GAAhB,EAArB;AACA,aAAO,EAAP;AACD;AACD;AACA,WAAO0S,IAAP;AACD,GAxBE,CAAP;;AA0BA;AACAzhB,SAAO,MAAP,IAAiBohB,IAAjB;;AAEA,SAAOphB,MAAP;AACD,CAjHD;;AAmHA;;;;;;;;;;AAUAsd,eAAe4B,eAAf,GAAiC,UAAUlf,MAAV,EAAkBqF,YAAlB,EAAgC;AAC/D,MAAIrF,OAAO,SAAP,EAAkBrF,MAAlB,IAA4B,CAAhC,EAAmC;AACjC0K,oBAAgBA,cAAhB;AACA;AACD;AACD;AACA,MAAIsL,QAAQ,CAAC,CAAb;AACA,MAAItC,OAAO,SAAPA,IAAO,GAAY;AACrBsC;AACA,QAAIA,QAAQ3Q,OAAO,SAAP,EAAkBrF,MAA9B,EAAsC;AACpC,UAAIsR,OAAOjM,OAAO,SAAP,EAAkB2Q,KAAlB,CAAX;AACA,UAAIlb,KAAK,cAAY,CAAE,CAAvB;AACA,UAAIwW,KAAKlS,GAAT,EAAc;AACZ,YAAIkS,KAAKzV,IAAT,EAAe;AACbf,eAAK,cAAQD,IAAR,CAAa,iBAAa6W,IAA1B,EAAgC,IAAhC,EAAsCJ,KAAKlS,GAA3C,EAAgDkS,KAAKzV,IAArD,CAAL;AACD,SAFD,MAEO;AACLf,eAAK,cAAQD,IAAR,CAAa,iBAAasG,GAA1B,EAA+B,IAA/B,EAAqCmQ,KAAKlS,GAA1C,CAAL;AACD;AACF,OAND,MAMO,IAAIkS,KAAKmE,IAAT,EAAe;AACpB,YAAInE,KAAKzV,IAAT,EAAe;AACbf,eAAK,cAAQD,IAAR,CAAa,iBAAa2a,IAA1B,EAAgC,IAAhC,EAAsClE,KAAKmE,IAA3C,EAAiDnE,KAAKzV,IAAtD,CAAL;AACD,SAFD,MAEO;AACLf,eAAK,cAAQD,IAAR,CAAa,iBAAa+a,IAA1B,EAAgC,IAAhC,EAAsCtE,KAAKmE,IAA3C,CAAL;AACD;AACF;AACD,UAAInE,KAAKlS,GAAL,IAAY,CAACkS,KAAK6C,KAAtB,EAA6B;AAC3BrZ,WAAG4Y,IAAH;AACD,OAFD,MAEO;AACL5Y;AACA4Y;AACD;AACF,KAtBD,MAsBO;AACLhJ,sBAAgBA,cAAhB;AACD;AACF,GA3BD;AA4BAgJ;AACD,CApCD;;AAsCA;;;;;;;AAOAiP,eAAeiD,kBAAf,GAAoC,UAAUvgB,MAAV,EAAkB;AACpD,MAAIA,OAAO,SAAP,EAAkBrF,MAAlB,IAA4B,CAAhC,EAAmC;AACjC;AACD;AACD;AACA,MAAIyW,OAAO,gBAAS/V,GAAT,CAAa2E,OAAO,SAAP,CAAb,EAAgC,UAAUiM,IAAV,EAAgB;AACzD,WAAOA,KAAKlS,GAAZ;AACD,GAFU,CAAX;AAGA,mBAAasV,QAAb,CAAsB+B,IAAtB;AACD,CATD;;AAWA;;;;;;;;AAQAkM,eAAe2B,cAAf,GAAgC,UAAUjf,MAAV,EAAkB;AAChD,MAAIA,OAAO,QAAP,EAAiBrF,MAAjB,IAA2B,CAA/B,EAAkC;AAChC;AACD;AACD;AACA,kBAASN,IAAT,CAAc2F,OAAO,QAAP,CAAd,EAAgC,UAAUiM,IAAV,EAAgB;AAC9C,QAAIA,KAAKlS,GAAT,EAAc;AACZ,UAAIkS,KAAKzV,IAAT,EAAe;AACb,wBAAY6V,IAAZ,CAAiBJ,KAAKlS,GAAtB,EAA2BkS,KAAKzV,IAAhC;AACD,OAFD,MAEO;AACL,wBAAYsF,GAAZ,CAAgBmQ,KAAKlS,GAArB;AACD;AACF,KAND,MAMO,IAAIkS,KAAKmE,IAAT,EAAe;AACpB,UAAInE,KAAKzV,IAAT,EAAe;AACb,wBAAY2Z,IAAZ,CAAiBlE,KAAKmE,IAAtB,EAA4BnE,KAAKzV,IAAjC;AACD,OAFD,MAEO;AACL,wBAAY+Z,IAAZ,CAAiBtE,KAAKmE,IAAtB;AACD;AACF;AACF,GAdD;AAeD,CApBD;;AAsBA;;;;;;;AAOAkN,eAAegD,iBAAf,GAAmC,UAAUtgB,MAAV,EAAkB;AACnD,MAAIA,OAAO,QAAP,EAAiBrF,MAAjB,IAA2B,CAA/B,EAAkC;AAChC;AACD;AACD;AACA,MAAIyW,OAAO,gBAAS/V,GAAT,CAAa2E,OAAO,QAAP,CAAb,EAA+B,UAAUiM,IAAV,EAAgB;AACxD,WAAOA,KAAKlS,GAAZ;AACD,GAFU,CAAX;AAGA,kBAAYsV,QAAZ,CAAqB+B,IAArB;AACD,CATD;;AAWA;;;;;;;AAOAkM,eAAe0B,aAAf,GAA+B,UAAUhf,MAAV,EAAkB;AAC/C;AACAsd,iBAAe+C,gBAAf,CAAgCrgB,MAAhC;AACD,CAHD;;AAKA;;;;;;;AAOAsd,eAAe+C,gBAAf,GAAkC,UAAUrgB,MAAV,EAAkB;AAClD,MAAIA,OAAO,OAAP,EAAgBrF,MAAhB,IAA0B,CAA9B,EAAiC;AAC/B;AACD;AACD;AACA,MAAIyW,OAAO,gBAAS/V,GAAT,CAAa2E,OAAO,OAAP,CAAb,EAA8B,UAAUiM,IAAV,EAAgB;AACvD,WAAOA,KAAK8C,GAAL,IAAY,gBAAZ,GAA+B9C,KAAKlS,GAApC,GAA0C,EAAjD;AACD,GAFU,CAAX;AAGA,oBAAcqoB,UAAd,CAAyBhR,IAAzB;AACD,CATD;;AAWA;;;;;AAKAkM,eAAevX,cAAf,GAAgC,YAAY;AAC1C,SAAO,cAAOyC,QAAP,CAAgBtR,OAAO2C,QAAP,CAAgBD,IAAhC,CAAP;AACD,CAFD;;AAIA;;;;;;;;;;;;;;AAcA0jB,eAAeuC,UAAf,GAA4B,UAAUvS,EAAV,EAAc2T,IAAd,EAAoBlV,GAApB,EAAyBvV,IAAzB,EAA+BypB,QAA/B,EAAyCvI,OAAzC,EAAkD;AAC5E;AACA,OAAKxT,OAAL,GAAeoJ,EAAf;AACA;AACA,OAAK2T,IAAL,GAAYA,IAAZ;AACA;AACA,OAAKhB,QAAL,GAAgBA,QAAhB;AACA;AACA,OAAKvI,OAAL,GAAeA,OAAf;;AAEA,MAAIxK,WAAW,kBAAcpR,GAAd,CAAkBpF,SAASuM,IAA3B,EAAiC,SAAjC,KAA+C,EAA9D;;AAEA;AACA,OAAKrH,GAAL,GAAW,gBAASA,GAAT,CAAa0R,EAAb,CAAX;AACA;AACA,OAAKmT,SAAL,GAAiBvT,YAAanB,MAAM,QAAN,GAAiBmB,QAA/C;AACA;AACA,OAAKwT,OAAL,GAAelqB,QAASuV,MAAM,MAAN,GAAevV,IAAvC;AACA;AACA,OAAKqqB,KAAL,GAAa,IAAb;AACA;AACA,OAAKC,QAAL,GAAgB/U,MAAM,MAAtB;AACA;AACA,OAAKgV,KAAL,GAAa,IAAb;AACA;AACA,OAAKC,QAAL,GAAgBjV,MAAM,MAAtB;AACA;AACA,OAAKyU,QAAL,GAAgBzU,OAAO2L,UAAU,UAAV,GAAuB,UAA9B,CAAhB;AACA;AACA,OAAKiJ,UAAL,GAAkB5U,MAAM,QAAxB;AACA;AACA,OAAK6U,oBAAL,GAA4B,KAAKJ,QAAL,GAAgB,QAA5C;AACA;AACA,OAAKU,QAAL,GAAgBnV,MAAM,MAAtB;AACA;AACA,OAAKoV,kBAAL,GAA0B,KAAKX,QAAL,GAAgB,MAA1C;AACD,CApCD;;AAsCA;;;;;;;;;;;;AAYA;AACA;AACAlD,eAAe+D,WAAf,GAA6B,YAAY;AACvC;AACA,OAAK,MAAL,IAAe,EAAf;AACA;AACA,OAAK,SAAL,IAAkB,EAAlB;AACA;AACA,OAAK,QAAL,IAAiB,EAAjB;AACA;AACA,OAAK,OAAL,IAAgB,EAAhB;AACD,CATD;;AAWA;;;;AAIA/D,eAAemC,YAAf,GAA+B,YAAY;AACzC,MAAI4C,SAAS3rB,SAASiD,aAAT,CAAuB,KAAvB,CAAb;AACA,MAAI,gBAAgB0oB,OAAO5f,KAA3B,EAAkC;AAChC,WAAO,IAAP;AACD;AACD,MAAI6f,WAAW,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,OAA7B,CAAf;AACA,SAAO,gBAASznB,IAAT,CAAcynB,QAAd,EAAwB,UAAUtjB,MAAV,EAAkB;AAC/C,WAAOA,SAAS,YAAT,IAAyBqjB,OAAO5f,KAAvC;AACD,GAFM,CAAP;AAGD,CAT6B,EAA9B;;AAWA;;;;;AAKA6a,eAAeiE,YAAf,GAA8B;AAC5BU,QAAM,0BADsB;AAE5BT,gBAAc;;AAGhB;;;;AAL8B,CAA9B,CASAlE,eAAeqE,cAAf,GAAgC;AAC9BG,SAAO,0BADuB;AAE9BK,QAAM,qCAFwB;AAG9BP,QAAM,qCAHwB;AAI9BM,OAAK,oCAJyB;AAK9BL,OAAK,oCALyB;AAM9BE,QAAM;;AAGR;;;;AATgC,CAAhC,CAaAzE,eAAeK,KAAf,GAAuB;AACrBC,SAAO,OADc;AAErBE,aAAW,OAFU;AAGrBE,OAAK;AAHgB,CAAvB;;kBAMeV,c;;;;;;;;;;;;;;;;;;ACz4Bf;;AACA;;;;AACA;;;;;;AAEA,IAAIiF,YAAY,EAAhB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AAvBA;AACA;AACA;AACA;;AAEA;;;;;;;AA6BAA,UAAUtV,SAAV,GAAsB,UAAUL,KAAV,EAAiBnX,EAAjB,EAAqB;AACzC,MAAImX,SAASnX,EAAb,EAAiB;AACf,QAAI,EAAEmX,SAAS2V,UAAU5U,aAArB,CAAJ,EAAyC;AACvC4U,gBAAU5U,aAAV,CAAwBf,KAAxB,IAAiC,EAAjC;AACD;AACD2V,cAAU5U,aAAV,CAAwBf,KAAxB,EAA+BzW,IAA/B,CAAoCV,EAApC;AACD;AACF,CAPD;;AASA;;;;;;;;AAQA8sB,UAAU3Q,WAAV,GAAwB,UAAUhF,KAAV,EAAiBnX,EAAjB,EAAqB;AAC3C,MAAImX,SAAS2V,UAAU5U,aAAnB,IAAoClY,EAAxC,EAA4C;AAC1C,oBAASmF,KAAT,CAAe2nB,UAAU5U,aAAV,CAAwBf,KAAxB,CAAf,EAA+C,UAAU4V,KAAV,EAAiB/nB,CAAjB,EAAoBH,GAApB,EAAyB;AACtE,UAAIkoB,SAAS/sB,EAAb,EAAiB;AACf6E,YAAIG,CAAJ,IAAS,IAAT;AACA,eAAO,KAAP;AACD;AACD,aAAO,IAAP;AACD,KAND;AAOD;AACF,CAVD;;AAYA;;;;;;;;AAQA8nB,UAAUE,OAAV,GAAoB,UAAU7V,KAAV,EAAiB;AACnC2V,YAAUG,QAAV,CAAmB9V,KAAnB;AACD,CAFD;;AAIA;;;;;;;;;AASA2V,UAAUxU,KAAV,GAAkB,UAAUnB,KAAV,EAAiB;AACjC2V,YAAUG,QAAV,CAAmB9V,KAAnB,EAA0B,IAA1B;AACD,CAFD;;AAIA;;;;;;;AAOA2V,UAAUG,QAAV,GAAqB,UAAU9V,KAAV,EAAiB+V,SAAjB,EAA4B;AAC/C,MAAI/V,SAAS2V,UAAU5U,aAAvB,EAAsC;AACpC,oBAAStT,IAAT,CAAckoB,UAAU5U,aAAV,CAAwBf,KAAxB,CAAd,EAA8C,UAAU4V,KAAV,EAAiB/nB,CAAjB,EAAoBH,GAApB,EAAyB;AACrE,UAAIqoB,SAAJ,EAAe;AACbroB,YAAIG,CAAJ,IAAS,IAAT;AACD;AACD,UAAI+nB,KAAJ,EAAW;AACTA;AACD;AACF,KAPD;AAQD;AACF,CAXD;;AAaA;;;;;;;;;AASAD,UAAUnV,MAAV,GAAmB,UAAUwV,QAAV,EAAoBC,QAApB,EAA8B;AAC/C,MAAID,YAAYC,QAAZ,IAAwBD,YAAYL,UAAU5U,aAAlD,EAAiE;AAC/D,QAAImV,WAAWP,UAAU5U,aAAV,CAAwBkV,QAAxB,KAAqC,EAApD;AACAN,cAAU5U,aAAV,CAAwBkV,QAAxB,IACIC,SAASC,MAAT,CAAgBR,UAAU5U,aAAV,CAAwBiV,QAAxB,CAAhB,CADJ;AAEAL,cAAU7jB,KAAV,CAAgBkkB,QAAhB;AACD;AACF,CAPD;;AASA;;;;;AAKAL,UAAU7jB,KAAV,GAAkB,UAAUkO,KAAV,EAAiB;AACjC,SAAO2V,UAAU5U,aAAV,CAAwBf,KAAxB,CAAP;AACD,CAFD;;AAIA;;;;AAIA2V,UAAU5U,aAAV,GAA0B,EAA1B;;AAEA;AACA;AACA,0BAAoB;AAClB,kBAAS5R,GAAT,CAAa,gBAASE,GAAT,CAAa0B,WAA1B,EAAuC4kB,UAAU5U,aAAjD;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAAShS,GAAT,CAAa,gBAASM,GAAT,CAAa0B,WAA1B,CAAL,EAA6C;AAC3C,oBAAS5B,GAAT,CAAa,gBAASE,GAAT,CAAa0B,WAA1B,EAAuC4kB,UAAU5U,aAAjD;AACD;AACD4U,YAAU5U,aAAV,GAA0B,8BACtB,gBAAS7R,GAAT,CAAa,gBAASG,GAAT,CAAa0B,WAA1B,CADJ;AAED;;kBAEc4kB,S;;;;;;;;;;;;;;;;;;;;;;;;;ACzJf,CAAC,YAAY;AACX,MAAIxsB,QAAQ,GAAGA,KAAf;;AAEA,OAAKitB,WAAL,GAAmB;AACjBC,cAAU;AACR,uBAAiB;AACf,mBAAW,SADI;AAEf,gBAAQ,MAFO;AAGf,wBAAgB,sBAHD;AAIf,qBAAa;AAJE,OADT;AAOR,4BAAsB,QAPd;AAQR,mBAAa,CAAC,qBAAD,EAAwB,yBAAxB;AARL,KADO;AAWjBC,oBAAgB,wBAAUnpB,GAAV,EAAe;AAC7B,UAAIopB,GAAJ;AACA,UAAIppB,OAAO,IAAX,EAAiB;AACfA,cAAM,CAACopB,MAAM,KAAKC,SAAL,CAAe,KAAf,CAAP,KAAiC,IAAjC,GAAwCD,GAAxC,GAA8C,KAAKF,QAAL,CAAcI,kBAAlE;AACD;AACD,aAAO,IAAIL,YAAYM,QAAhB,CAAyB,KAAKC,kBAAL,CAAwBxpB,GAAxB,CAAzB,CAAP;AACD,KAjBgB;AAkBjBqpB,eAAW,mBAAU5sB,IAAV,EAAgB;AACzB,UAAI0N,OAAJ;AACAA,gBAAUxN,SAASmoB,IAAT,CAAcvlB,aAAd,CAA4B,6BAA6B9C,IAA7B,GAAoC,IAAhE,CAAV;AACA,aAAO0N,WAAW,IAAX,GAAkBA,QAAQ3K,YAAR,CAAqB,SAArB,CAAlB,GAAoD,KAAK,CAAhE;AACD,KAtBgB;AAuBjBgqB,wBAAoB,4BAAUxpB,GAAV,EAAe;AACjC,UAAIiB,CAAJ;AACA,UAAIjB,OAAO,CAAC,UAAU2U,IAAV,CAAe3U,GAAf,CAAZ,EAAiC;AAC/BiB,YAAItE,SAASiD,aAAT,CAAuB,GAAvB,CAAJ;AACAqB,UAAEpB,IAAF,GAASG,GAAT;AACAiB,UAAEpB,IAAF,GAASoB,EAAEpB,IAAX;AACAoB,UAAEhB,QAAF,GAAagB,EAAEhB,QAAF,CAAWyF,OAAX,CAAmB,MAAnB,EAA2B,IAA3B,CAAb;AACA,eAAOzE,EAAEpB,IAAT;AACD,OAND,MAMO;AACL,eAAOG,GAAP;AACD;AACF,KAlCgB;AAmCjBypB,oBAAgB,0BAAY;AAC1B,aAAO,KAAKC,SAAL,GAAiB,IAAxB;AACD,KArCgB;AAsCjBC,mBAAe,yBAAY;AACzB,aAAO,KAAKD,SAAL,GAAiB,IAAxB;AACD,KAxCgB;AAyCjBhjB,SAAK,eAAY;AACf,UAAIkjB,QAAJ;AACAA,iBAAW1tB,UAAU0E,MAAV,IAAoB,CAApB,GAAwB5E,MAAMC,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAxB,GAAmD,EAA9D;AACA,UAAI,KAAKwtB,SAAT,EAAoB;AAClBE,iBAASxtB,IAAT,CAAcmB,KAAKL,GAAL,EAAd;AACA,eAAO+J,QAAQP,GAAR,CAAYrK,KAAZ,CAAkB4K,OAAlB,EAA2B,CAAC,eAAD,EAAkB+hB,MAAlB,CAAyBhtB,MAAMC,IAAN,CAAW2tB,QAAX,CAAzB,CAA3B,CAAP;AACD;AACF;AAhDgB,GAAnB;;AAmDA,MAAI,OAAOzsB,MAAP,KAAkB,WAAlB,IAAiCA,WAAW,IAAhD,EAAsD;AACpDA,WAAO8rB,WAAP,GAAqB,KAAKA,WAA1B;AACD;;AAED,MAAI,OAAOY,MAAP,KAAkB,WAAlB,IAAiCA,WAAW,IAAhD,EAAsD;AACpDA,WAAOC,OAAP,GAAiB,KAAKb,WAAtB;AACD;AACF,CA7DD,EA6DGhtB,IA7DH,CA6DQkB,MA7DR;AA8DA,CAAC,YAAY;AACX,MAAI1B,OAAO,SAAPA,IAAO,CAAUC,EAAV,EAAcquB,EAAd,EAAkB;AAAE,WAAO,YAAY;AAAE,aAAOruB,GAAGW,KAAH,CAAS0tB,EAAT,EAAa7tB,SAAb,CAAP;AAAgC,KAArD;AAAuD,GAAtF;;AAEA+sB,cAAYe,iBAAZ,GAAiC,YAAY;AAC3C,QAAIC,KAAJ,EAAW/sB,GAAX,EAAgBgtB,YAAhB;;AAEAF,sBAAkBG,YAAlB,GAAiC;AAC/B1Y,WAAK,CAD0B;AAE/BX,WAAK;AAF0B,KAAjC;;AAKAkZ,sBAAkBI,cAAlB,GAAmC,CAAnC;;AAEA,aAASJ,iBAAT,CAA4BK,UAA5B,EAAwC;AACtC,WAAKA,UAAL,GAAkBA,UAAlB;AACA,WAAKC,mBAAL,GAA2B7uB,KAAK,KAAK6uB,mBAAV,EAA+B,IAA/B,CAA3B;AACA,WAAKC,iBAAL,GAAyB,CAAzB;AACD;;AAEDP,sBAAkBjuB,SAAlB,CAA4BsF,KAA5B,GAAoC,YAAY;AAC9C,UAAI,CAAC,KAAKmpB,SAAL,EAAL,EAAuB;AACrB,aAAKC,SAAL,GAAiBvtB,KAAjB;AACA,eAAO,KAAKwtB,SAAZ;AACA,aAAKC,YAAL;AACAhuB,iBAASoP,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKue,mBAAnD;AACA,eAAOrB,YAAYviB,GAAZ,CAAgB,+CAAgD,KAAKkkB,eAAL,EAAhD,GAA0E,KAA1F,CAAP;AACD;AACF,KARD;;AAUAZ,sBAAkBjuB,SAAlB,CAA4B8uB,IAA5B,GAAmC,YAAY;AAC7C,UAAI,KAAKL,SAAL,EAAJ,EAAsB;AACpB,aAAKE,SAAL,GAAiBxtB,KAAjB;AACA,aAAK4tB,WAAL;AACAnuB,iBAAS0P,mBAAT,CAA6B,kBAA7B,EAAiD,KAAKie,mBAAtD;AACA,eAAOrB,YAAYviB,GAAZ,CAAgB,2BAAhB,CAAP;AACD;AACF,KAPD;;AASAsjB,sBAAkBjuB,SAAlB,CAA4ByuB,SAA5B,GAAwC,YAAY;AAClD,aAAQ,KAAKC,SAAL,IAAkB,IAAnB,IAA6B,KAAKC,SAAL,IAAkB,IAAtD;AACD,KAFD;;AAIAV,sBAAkBjuB,SAAlB,CAA4BgvB,UAA5B,GAAyC,YAAY;AACnD,aAAO,KAAKC,QAAL,GAAgB9tB,KAAvB;AACD,KAFD;;AAIA8sB,sBAAkBjuB,SAAlB,CAA4BkvB,aAA5B,GAA4C,YAAY;AACtD,WAAKV,iBAAL,GAAyB,CAAzB;AACA,WAAKQ,UAAL;AACA,aAAO,KAAKG,cAAZ;AACA,aAAOjC,YAAYviB,GAAZ,CAAgB,oCAAhB,CAAP;AACD,KALD;;AAOAsjB,sBAAkBjuB,SAAlB,CAA4BovB,gBAA5B,GAA+C,YAAY;AACzD,WAAKD,cAAL,GAAsBhuB,KAAtB;AACA,aAAO+rB,YAAYviB,GAAZ,CAAgB,uCAAhB,CAAP;AACD,KAHD;;AAKAsjB,sBAAkBjuB,SAAlB,CAA4B4uB,YAA5B,GAA2C,YAAY;AACrD,WAAKG,WAAL;AACA,aAAO,KAAKM,IAAL,EAAP;AACD,KAHD;;AAKApB,sBAAkBjuB,SAAlB,CAA4B+uB,WAA5B,GAA0C,YAAY;AACpD,aAAOnQ,aAAa,KAAK0Q,WAAlB,CAAP;AACD,KAFD;;AAIArB,sBAAkBjuB,SAAlB,CAA4BqvB,IAA5B,GAAmC,YAAY;AAC7C,aAAO,KAAKC,WAAL,GAAmBra,WAAY,UAAUsa,KAAV,EAAiB;AACrD,eAAO,YAAY;AACjBA,gBAAMC,gBAAN;AACA,iBAAOD,MAAMF,IAAN,EAAP;AACD,SAHD;AAID,OALoC,CAKlC,IALkC,CAAX,EAKhB,KAAKR,eAAL,EALgB,CAA1B;AAMD,KAPD;;AASAZ,sBAAkBjuB,SAAlB,CAA4B6uB,eAA5B,GAA8C,YAAY;AACxD,UAAIY,QAAJ,EAAc1a,GAAd,EAAmBW,GAAnB,EAAwB2X,GAAxB;AACAA,YAAM,KAAKqC,WAAL,CAAiBtB,YAAvB,EAAqC1Y,MAAM2X,IAAI3X,GAA/C,EAAoDX,MAAMsY,IAAItY,GAA9D;AACA0a,iBAAW,IAAIE,KAAKhlB,GAAL,CAAS,KAAK6jB,iBAAL,GAAyB,CAAlC,CAAf;AACA,aAAOmB,KAAKC,KAAL,CAAW1B,MAAMuB,QAAN,EAAgB/Z,GAAhB,EAAqBX,GAArB,IAA4B,IAAvC,CAAP;AACD,KALD;;AAOAkZ,sBAAkBjuB,SAAlB,CAA4BwvB,gBAA5B,GAA+C,YAAY;AACzD,UAAI,KAAKK,iBAAL,EAAJ,EAA8B;AAC5B3C,oBAAYviB,GAAZ,CAAgB,sEAAsE,KAAK6jB,iBAA3E,GAA+F,mBAA/F,GAAsH,KAAKK,eAAL,EAAtH,GAAgJ,2BAAhJ,GAA+KV,aAAa,KAAKgB,cAAlB,CAA/K,GAAoN,wBAApN,GAA+O,KAAKO,WAAL,CAAiBrB,cAAhQ,GAAiR,IAAjS;AACA,aAAKG,iBAAL;AACA,YAAI,KAAKsB,oBAAL,EAAJ,EAAiC;AAC/B,iBAAO5C,YAAYviB,GAAZ,CAAgB,wDAAhB,CAAP;AACD,SAFD,MAEO;AACLuiB,sBAAYviB,GAAZ,CAAgB,6BAAhB;AACA,iBAAO,KAAK2jB,UAAL,CAAgByB,MAAhB,EAAP;AACD;AACF;AACF,KAXD;;AAaA9B,sBAAkBjuB,SAAlB,CAA4B6vB,iBAA5B,GAAgD,YAAY;AAC1D,UAAIxC,GAAJ;AACA,aAAOc,aAAa,CAACd,MAAM,KAAK4B,QAAZ,KAAyB,IAAzB,GAAgC5B,GAAhC,GAAsC,KAAKqB,SAAxD,IAAqE,KAAKgB,WAAL,CAAiBrB,cAA7F;AACD,KAHD;;AAKAJ,sBAAkBjuB,SAAlB,CAA4B8vB,oBAA5B,GAAmD,YAAY;AAC7D,aAAO,KAAKX,cAAL,IAAuBhB,aAAa,KAAKgB,cAAlB,IAAoC,KAAKO,WAAL,CAAiBrB,cAAnF;AACD,KAFD;;AAIAJ,sBAAkBjuB,SAAlB,CAA4BuuB,mBAA5B,GAAkD,YAAY;AAC5D,UAAI3tB,SAASovB,eAAT,KAA6B,SAAjC,EAA4C;AAC1C,eAAO/a,WAAY,UAAUsa,KAAV,EAAiB;AAClC,iBAAO,YAAY;AACjB,gBAAIA,MAAMM,iBAAN,MAA6B,CAACN,MAAMjB,UAAN,CAAiB2B,MAAjB,EAAlC,EAA6D;AAC3D/C,0BAAYviB,GAAZ,CAAgB,wFAAwF/J,SAASovB,eAAjH;AACA,qBAAOT,MAAMjB,UAAN,CAAiByB,MAAjB,EAAP;AACD;AACF,WALD;AAMD,SAPiB,CAOf,IAPe,CAAX,EAOG,GAPH,CAAP;AAQD;AACF,KAXD;;AAaA5uB,UAAM,eAAY;AAChB,aAAO,IAAIK,IAAJ,GAAWC,OAAX,EAAP;AACD,KAFD;;AAIA0sB,mBAAe,sBAAU+B,IAAV,EAAgB;AAC7B,aAAO,CAAC/uB,QAAQ+uB,IAAT,IAAiB,IAAxB;AACD,KAFD;;AAIAhC,YAAQ,eAAUiC,MAAV,EAAkBza,GAAlB,EAAuBX,GAAvB,EAA4B;AAClC,aAAO4a,KAAK5a,GAAL,CAASW,GAAT,EAAcia,KAAKja,GAAL,CAASX,GAAT,EAAcob,MAAd,CAAd,CAAP;AACD,KAFD;;AAIA,WAAOlC,iBAAP;AACD,GAhI+B,EAAhC;AAiID,CApID,EAoIG/tB,IApIH,CAoIQkB,MApIR;AAqIA,CAAC,YAAY;AACX,MAAIuD,CAAJ;AAAA,MAAOyrB,aAAP;AAAA,MAAsBC,SAAtB;AAAA,MAAiChD,GAAjC;AAAA,MAAsCiD,kBAAtC;AAAA,MAA0DC,mBAA1D;AAAA,MACEtwB,QAAQ,GAAGA,KADb;AAAA,MAEEP,OAAO,SAAPA,IAAO,CAAUC,EAAV,EAAcquB,EAAd,EAAkB;AAAE,WAAO,YAAY;AAAE,aAAOruB,GAAGW,KAAH,CAAS0tB,EAAT,EAAa7tB,SAAb,CAAP;AAAgC,KAArD;AAAuD,GAFpF;AAAA,MAGEgF,UAAU,GAAGA,OAAH,IAAc,UAAUgR,IAAV,EAAgB;AAAE,SAAK,IAAIxR,IAAI,CAAR,EAAWC,IAAI,KAAKC,MAAzB,EAAiCF,IAAIC,CAArC,EAAwCD,GAAxC,EAA6C;AAAE,UAAIA,KAAK,IAAL,IAAa,KAAKA,CAAL,MAAYwR,IAA7B,EAAmC,OAAOxR,CAAP;AAAU,KAAC,OAAO,CAAC,CAAR;AAAW,GAHpJ;;AAKA0oB,QAAMH,YAAYC,QAAlB,EAA4BiD,gBAAgB/C,IAAI+C,aAAhD,EAA+DC,YAAYhD,IAAIgD,SAA/E;;AAEAC,uBAAqBD,UAAUxrB,MAAV,IAAoB,CAApB,GAAwB5E,MAAMC,IAAN,CAAWmwB,SAAX,EAAsB,CAAtB,EAAyB1rB,IAAI0rB,UAAUxrB,MAAV,GAAmB,CAAhD,CAAxB,IAA8EF,IAAI,CAAJ,EAAO,EAArF,CAArB,EAA+G4rB,sBAAsBF,UAAU1rB,GAAV,CAArI;;AAEAuoB,cAAYsD,UAAZ,GAA0B,YAAY;AACpCA,eAAWC,WAAX,GAAyB,GAAzB;;AAEA,aAASD,UAAT,CAAqBE,QAArB,EAA+B;AAC7B,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAKC,IAAL,GAAYjxB,KAAK,KAAKixB,IAAV,EAAgB,IAAhB,CAAZ;AACA,WAAK9Y,aAAL,GAAqB,KAAK6Y,QAAL,CAAc7Y,aAAnC;AACA,WAAK+Y,OAAL,GAAe,IAAI1D,YAAYe,iBAAhB,CAAkC,IAAlC,CAAf;AACA,WAAK4C,YAAL,GAAoB,IAApB;AACD;;AAEDL,eAAWxwB,SAAX,CAAqB0jB,IAArB,GAA4B,UAAUtS,IAAV,EAAgB;AAC1C,UAAI,KAAK6e,MAAL,EAAJ,EAAmB;AACjB,aAAKa,SAAL,CAAepN,IAAf,CAAoB4E,KAAKyI,SAAL,CAAe3f,IAAf,CAApB;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,eAAO,KAAP;AACD;AACF,KAPD;;AASAof,eAAWxwB,SAAX,CAAqB2wB,IAArB,GAA4B,YAAY;AACtC,UAAI,KAAKK,QAAL,EAAJ,EAAqB;AACnB9D,oBAAYviB,GAAZ,CAAgB,yDAA0D,KAAKsmB,QAAL,EAA1E;AACA,cAAM,IAAIvf,KAAJ,CAAU,mDAAV,CAAN;AACD,OAHD,MAGO;AACLwb,oBAAYviB,GAAZ,CAAgB,yCAA0C,KAAKsmB,QAAL,EAA1C,GAA6D,kBAA7D,GAAkFZ,SAAlG;AACA,YAAI,KAAKS,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,eAAKI,sBAAL;AACD;AACD,aAAKJ,SAAL,GAAiB,IAAIK,SAAJ,CAAc,KAAKT,QAAL,CAAczsB,GAA5B,EAAiCosB,SAAjC,CAAjB;AACA,aAAKe,oBAAL;AACA,aAAKR,OAAL,CAAatrB,KAAb;AACA,eAAO,IAAP;AACD;AACF,KAdD;;AAgBAkrB,eAAWxwB,SAAX,CAAqBqxB,KAArB,GAA6B,UAAUC,GAAV,EAAe;AAC1C,UAAIC,cAAJ,EAAoBC,IAApB;AACAD,uBAAiB,CAACD,OAAO,IAAP,GAAcA,GAAd,GAAoB;AACpCC,wBAAgB;AADoB,OAArB,EAEdA,cAFH;AAGA,UAAI,CAACA,cAAL,EAAqB;AACnB,aAAKX,OAAL,CAAa9B,IAAb;AACD;AACD,UAAI,KAAKkC,QAAL,EAAJ,EAAqB;AACnB,eAAO,CAACQ,OAAO,KAAKV,SAAb,KAA2B,IAA3B,GAAkCU,KAAKH,KAAL,EAAlC,GAAiD,KAAK,CAA7D;AACD;AACF,KAXD;;AAaAb,eAAWxwB,SAAX,CAAqB+vB,MAArB,GAA8B,YAAY;AACxC,UAAI/kB,KAAJ,EAAWymB,MAAX;AACAvE,kBAAYviB,GAAZ,CAAgB,2CAA4C,KAAKsmB,QAAL,EAA5D;AACA,UAAI,KAAKD,QAAL,EAAJ,EAAqB;AACnB,YAAI;AACF,iBAAO,KAAKK,KAAL,EAAP;AACD,SAFD,CAEE,OAAOI,MAAP,EAAe;AACfzmB,kBAAQymB,MAAR;AACA,iBAAOvE,YAAYviB,GAAZ,CAAgB,4BAAhB,EAA8CK,KAA9C,CAAP;AACD,SALD,SAKU;AACRkiB,sBAAYviB,GAAZ,CAAgB,4BAA4B,KAAK+kB,WAAL,CAAiBe,WAA7C,GAA2D,IAA3E;AACAxb,qBAAW,KAAK0b,IAAhB,EAAsB,KAAKjB,WAAL,CAAiBe,WAAvC;AACD;AACF,OAVD,MAUO;AACL,eAAO,KAAKE,IAAL,EAAP;AACD;AACF,KAhBD;;AAkBAH,eAAWxwB,SAAX,CAAqB0xB,WAArB,GAAmC,YAAY;AAC7C,UAAIF,IAAJ;AACA,aAAO,CAACA,OAAO,KAAKV,SAAb,KAA2B,IAA3B,GAAkCU,KAAKttB,QAAvC,GAAkD,KAAK,CAA9D;AACD,KAHD;;AAKAssB,eAAWxwB,SAAX,CAAqBiwB,MAArB,GAA8B,YAAY;AACxC,aAAO,KAAK0B,OAAL,CAAa,MAAb,CAAP;AACD,KAFD;;AAIAnB,eAAWxwB,SAAX,CAAqBgxB,QAArB,GAAgC,YAAY;AAC1C,aAAO,KAAKW,OAAL,CAAa,MAAb,EAAqB,YAArB,CAAP;AACD,KAFD;;AAIAnB,eAAWxwB,SAAX,CAAqB4xB,mBAArB,GAA2C,YAAY;AACrD,UAAIJ,IAAJ;AACA,aAAOA,OAAO,KAAKE,WAAL,EAAP,EAA2BvsB,QAAQjF,IAAR,CAAaowB,kBAAb,EAAiCkB,IAAjC,KAA0C,CAA5E;AACD,KAHD;;AAKAhB,eAAWxwB,SAAX,CAAqB2xB,OAArB,GAA+B,YAAY;AACzC,UAAIH,IAAJ,EAAUK,MAAV;AACAA,eAAS1xB,UAAU0E,MAAV,IAAoB,CAApB,GAAwB5E,MAAMC,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAxB,GAAmD,EAA5D;AACA,aAAOqxB,OAAO,KAAKP,QAAL,EAAP,EAAwB9rB,QAAQjF,IAAR,CAAa2xB,MAAb,EAAqBL,IAArB,KAA8B,CAA7D;AACD,KAJD;;AAMAhB,eAAWxwB,SAAX,CAAqBixB,QAArB,GAAgC,YAAY;AAC1C,UAAIO,IAAJ,EAAU7vB,KAAV,EAAiBuE,KAAjB;AACA,WAAKvE,KAAL,IAAcwvB,SAAd,EAAyB;AACvBjrB,gBAAQirB,UAAUxvB,KAAV,CAAR;AACA,YAAIuE,WAAW,CAACsrB,OAAO,KAAKV,SAAb,KAA2B,IAA3B,GAAkCU,KAAK3Y,UAAvC,GAAoD,KAAK,CAApE,CAAJ,EAA4E;AAC1E,iBAAOlX,MAAM0I,WAAN,EAAP;AACD;AACF;AACD,aAAO,IAAP;AACD,KATD;;AAWAmmB,eAAWxwB,SAAX,CAAqBoxB,oBAArB,GAA4C,YAAY;AACtD,UAAIU,SAAJ,EAAeC,OAAf;AACA,WAAKD,SAAL,IAAkB,KAAKE,MAAvB,EAA+B;AAC7BD,kBAAU,KAAKC,MAAL,CAAYF,SAAZ,EAAuBpyB,IAAvB,CAA4B,IAA5B,CAAV;AACA,aAAKoxB,SAAL,CAAe,OAAOgB,SAAtB,IAAmCC,OAAnC;AACD;AACF,KAND;;AAQAvB,eAAWxwB,SAAX,CAAqBkxB,sBAArB,GAA8C,YAAY;AACxD,UAAIY,SAAJ;AACA,WAAKA,SAAL,IAAkB,KAAKE,MAAvB,EAA+B;AAC7B,aAAKlB,SAAL,CAAe,OAAOgB,SAAtB,IAAmC,YAAY,CAAE,CAAjD;AACD;AACF,KALD;;AAOAtB,eAAWxwB,SAAX,CAAqBgyB,MAArB,GAA8B;AAC5BrM,eAAS,iBAAUsM,KAAV,EAAiB;AACxB,YAAIC,UAAJ,EAAgBvM,OAAhB,EAAyB6L,IAAzB,EAA+Bte,IAA/B;AACA,YAAI,CAAC,KAAK0e,mBAAL,EAAL,EAAiC;AAC/B;AACD;AACDJ,eAAOlJ,KAAKb,KAAL,CAAWwK,MAAM7gB,IAAjB,CAAP,EAA+B8gB,aAAaV,KAAKU,UAAjD,EAA6DvM,UAAU6L,KAAK7L,OAA5E,EAAqFzS,OAAOse,KAAKte,IAAjG;AACA,gBAAQA,IAAR;AACE,eAAKkd,cAAc+B,OAAnB;AACE,iBAAKvB,OAAL,CAAa1B,aAAb;AACA,mBAAO,KAAKrX,aAAL,CAAmBiK,MAAnB,EAAP;AACF,eAAKsO,cAAcgC,IAAnB;AACE,mBAAO,KAAKxB,OAAL,CAAa5B,UAAb,EAAP;AACF,eAAKoB,cAAciC,YAAnB;AACE,mBAAO,KAAKxa,aAAL,CAAmBya,MAAnB,CAA0BJ,UAA1B,EAAsC,WAAtC,CAAP;AACF,eAAK9B,cAAcmC,SAAnB;AACE,mBAAO,KAAK1a,aAAL,CAAmB2a,MAAnB,CAA0BN,UAA1B,CAAP;AACF;AACE,mBAAO,KAAKra,aAAL,CAAmBya,MAAnB,CAA0BJ,UAA1B,EAAsC,UAAtC,EAAkDvM,OAAlD,CAAP;AAXJ;AAaD,OApB2B;AAqB5BgL,YAAM,gBAAY;AAChBzD,oBAAYviB,GAAZ,CAAgB,oCAAqC,KAAK+mB,WAAL,EAArC,GAA2D,eAA3E;AACA,aAAKb,YAAL,GAAoB,KAApB;AACA,YAAI,CAAC,KAAKe,mBAAL,EAAL,EAAiC;AAC/B1E,sBAAYviB,GAAZ,CAAgB,8DAAhB;AACA,iBAAO,KAAK0mB,KAAL,CAAW;AAChBE,4BAAgB;AADA,WAAX,CAAP;AAGD;AACF,OA9B2B;AA+B5BF,aAAO,eAAUY,KAAV,EAAiB;AACtB/E,oBAAYviB,GAAZ,CAAgB,yBAAhB;AACA,YAAI,KAAKkmB,YAAT,EAAuB;AACrB;AACD;AACD,aAAKA,YAAL,GAAoB,IAApB;AACA,aAAKD,OAAL,CAAaxB,gBAAb;AACA,eAAO,KAAKvX,aAAL,CAAmB4a,SAAnB,CAA6B,cAA7B,EAA6C;AAClDC,gCAAsB,KAAK9B,OAAL,CAAanC,SAAb;AAD4B,SAA7C,CAAP;AAGD,OAzC2B;AA0C5BzjB,aAAO,iBAAY;AACjB,eAAOkiB,YAAYviB,GAAZ,CAAgB,yBAAhB,CAAP;AACD;AA5C2B,KAA9B;;AA+CA,WAAO6lB,UAAP;AACD,GArKwB,EAAzB;AAsKD,CAhLD,EAgLGtwB,IAhLH,CAgLQkB,MAhLR;AAiLA,CAAC,YAAY;AACX,MAAInB,QAAQ,GAAGA,KAAf;;AAEAitB,cAAYyF,aAAZ,GAA6B,YAAY;AACvC,aAASA,aAAT,CAAwBjC,QAAxB,EAAkC;AAChC,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAK7Y,aAAL,GAAqB,EAArB;AACD;;AAED8a,kBAAc3yB,SAAd,CAAwB0X,MAAxB,GAAiC,UAAUkb,WAAV,EAAuBC,KAAvB,EAA8B;AAC7D,UAAIC,OAAJ,EAAarmB,MAAb,EAAqBsmB,YAArB;AACAD,gBAAUF,WAAV;AACAnmB,eAAS,QAAOqmB,OAAP,uDAAOA,OAAP,OAAmB,QAAnB,GAA8BA,OAA9B,GAAwC;AAC/CA,iBAASA;AADsC,OAAjD;AAGAC,qBAAe,IAAI7F,YAAY8F,YAAhB,CAA6B,KAAKtC,QAAlC,EAA4CjkB,MAA5C,EAAoDomB,KAApD,CAAf;AACA,aAAO,KAAKtiB,GAAL,CAASwiB,YAAT,CAAP;AACD,KARD;;AAUAJ,kBAAc3yB,SAAd,CAAwBuQ,GAAxB,GAA8B,UAAUwiB,YAAV,EAAwB;AACpD,WAAKlb,aAAL,CAAmBxX,IAAnB,CAAwB0yB,YAAxB;AACA,WAAKrC,QAAL,CAAcuC,sBAAd;AACA,WAAKX,MAAL,CAAYS,YAAZ,EAA0B,aAA1B;AACA,WAAKG,WAAL,CAAiBH,YAAjB,EAA+B,WAA/B;AACA,aAAOA,YAAP;AACD,KAND;;AAQAJ,kBAAc3yB,SAAd,CAAwB4U,MAAxB,GAAiC,UAAUme,YAAV,EAAwB;AACvD,WAAKI,MAAL,CAAYJ,YAAZ;AACA,UAAI,CAAC,KAAKK,OAAL,CAAaL,aAAab,UAA1B,EAAsCrtB,MAA3C,EAAmD;AACjD,aAAKquB,WAAL,CAAiBH,YAAjB,EAA+B,aAA/B;AACD;AACD,aAAOA,YAAP;AACD,KAND;;AAQAJ,kBAAc3yB,SAAd,CAAwBwyB,MAAxB,GAAiC,UAAUN,UAAV,EAAsB;AACrD,UAAIvtB,CAAJ,EAAO0uB,GAAP,EAAYhG,GAAZ,EAAiBiG,OAAjB,EAA0BP,YAA1B;AACA1F,YAAM,KAAK+F,OAAL,CAAalB,UAAb,CAAN;AACAoB,gBAAU,EAAV;AACA,WAAK3uB,IAAI,CAAJ,EAAO0uB,MAAMhG,IAAIxoB,MAAtB,EAA8BF,IAAI0uB,GAAlC,EAAuC1uB,GAAvC,EAA4C;AAC1CouB,uBAAe1F,IAAI1oB,CAAJ,CAAf;AACA,aAAKwuB,MAAL,CAAYJ,YAAZ;AACA,aAAKT,MAAL,CAAYS,YAAZ,EAA0B,UAA1B;AACAO,gBAAQjzB,IAAR,CAAa0yB,YAAb;AACD;AACD,aAAOO,OAAP;AACD,KAXD;;AAaAX,kBAAc3yB,SAAd,CAAwBmzB,MAAxB,GAAiC,UAAUJ,YAAV,EAAwB;AACvD,UAAIjmB,CAAJ;AACA,WAAK+K,aAAL,GAAsB,YAAY;AAChC,YAAIlT,CAAJ,EAAO0uB,GAAP,EAAYhG,GAAZ,EAAiBiG,OAAjB;AACAjG,cAAM,KAAKxV,aAAX;AACAyb,kBAAU,EAAV;AACA,aAAK3uB,IAAI,CAAJ,EAAO0uB,MAAMhG,IAAIxoB,MAAtB,EAA8BF,IAAI0uB,GAAlC,EAAuC1uB,GAAvC,EAA4C;AAC1CmI,cAAIugB,IAAI1oB,CAAJ,CAAJ;AACA,cAAImI,MAAMimB,YAAV,EAAwB;AACtBO,oBAAQjzB,IAAR,CAAayM,CAAb;AACD;AACF;AACD,eAAOwmB,OAAP;AACD,OAXqB,CAWpBpzB,IAXoB,CAWf,IAXe,CAAtB;AAYA,aAAO6yB,YAAP;AACD,KAfD;;AAiBAJ,kBAAc3yB,SAAd,CAAwBozB,OAAxB,GAAkC,UAAUlB,UAAV,EAAsB;AACtD,UAAIvtB,CAAJ,EAAO0uB,GAAP,EAAYhG,GAAZ,EAAiBiG,OAAjB,EAA0BxmB,CAA1B;AACAugB,YAAM,KAAKxV,aAAX;AACAyb,gBAAU,EAAV;AACA,WAAK3uB,IAAI,CAAJ,EAAO0uB,MAAMhG,IAAIxoB,MAAtB,EAA8BF,IAAI0uB,GAAlC,EAAuC1uB,GAAvC,EAA4C;AAC1CmI,YAAIugB,IAAI1oB,CAAJ,CAAJ;AACA,YAAImI,EAAEolB,UAAF,KAAiBA,UAArB,EAAiC;AAC/BoB,kBAAQjzB,IAAR,CAAayM,CAAb;AACD;AACF;AACD,aAAOwmB,OAAP;AACD,KAXD;;AAaAX,kBAAc3yB,SAAd,CAAwB8hB,MAAxB,GAAiC,YAAY;AAC3C,UAAInd,CAAJ,EAAO0uB,GAAP,EAAYhG,GAAZ,EAAiBiG,OAAjB,EAA0BP,YAA1B;AACA1F,YAAM,KAAKxV,aAAX;AACAyb,gBAAU,EAAV;AACA,WAAK3uB,IAAI,CAAJ,EAAO0uB,MAAMhG,IAAIxoB,MAAtB,EAA8BF,IAAI0uB,GAAlC,EAAuC1uB,GAAvC,EAA4C;AAC1CouB,uBAAe1F,IAAI1oB,CAAJ,CAAf;AACA2uB,gBAAQjzB,IAAR,CAAa,KAAK6yB,WAAL,CAAiBH,YAAjB,EAA+B,WAA/B,CAAb;AACD;AACD,aAAOO,OAAP;AACD,KATD;;AAWAX,kBAAc3yB,SAAd,CAAwByyB,SAAxB,GAAoC,YAAY;AAC9C,UAAI3yB,IAAJ,EAAUyzB,YAAV,EAAwB5uB,CAAxB,EAA2B0uB,GAA3B,EAAgChG,GAAhC,EAAqCiG,OAArC,EAA8CP,YAA9C;AACAQ,qBAAepzB,UAAU,CAAV,CAAf,EAA6BL,OAAOK,UAAU0E,MAAV,IAAoB,CAApB,GAAwB5E,MAAMC,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAxB,GAAmD,EAAvF;AACAktB,YAAM,KAAKxV,aAAX;AACAyb,gBAAU,EAAV;AACA,WAAK3uB,IAAI,CAAJ,EAAO0uB,MAAMhG,IAAIxoB,MAAtB,EAA8BF,IAAI0uB,GAAlC,EAAuC1uB,GAAvC,EAA4C;AAC1CouB,uBAAe1F,IAAI1oB,CAAJ,CAAf;AACA2uB,gBAAQjzB,IAAR,CAAa,KAAKiyB,MAAL,CAAYhyB,KAAZ,CAAkB,IAAlB,EAAwB,CAACyyB,YAAD,EAAeQ,YAAf,EAA6BtG,MAA7B,CAAoChtB,MAAMC,IAAN,CAAWJ,IAAX,CAApC,CAAxB,CAAb;AACD;AACD,aAAOwzB,OAAP;AACD,KAVD;;AAYAX,kBAAc3yB,SAAd,CAAwBsyB,MAAxB,GAAiC,YAAY;AAC3C,UAAIxyB,IAAJ,EAAUyzB,YAAV,EAAwB5uB,CAAxB,EAA2B0uB,GAA3B,EAAgCC,OAAhC,EAAyCP,YAAzC,EAAuDlb,aAAvD;AACAkb,qBAAe5yB,UAAU,CAAV,CAAf,EAA6BozB,eAAepzB,UAAU,CAAV,CAA5C,EAA0DL,OAAOK,UAAU0E,MAAV,IAAoB,CAApB,GAAwB5E,MAAMC,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAxB,GAAmD,EAApH;AACA,UAAI,OAAO4yB,YAAP,KAAwB,QAA5B,EAAsC;AACpClb,wBAAgB,KAAKub,OAAL,CAAaL,YAAb,CAAhB;AACD,OAFD,MAEO;AACLlb,wBAAgB,CAACkb,YAAD,CAAhB;AACD;AACDO,gBAAU,EAAV;AACA,WAAK3uB,IAAI,CAAJ,EAAO0uB,MAAMxb,cAAchT,MAAhC,EAAwCF,IAAI0uB,GAA5C,EAAiD1uB,GAAjD,EAAsD;AACpDouB,uBAAelb,cAAclT,CAAd,CAAf;AACA2uB,gBAAQjzB,IAAR,CAAa,OAAO0yB,aAAaQ,YAAb,CAAP,KAAsC,UAAtC,GAAmDR,aAAaQ,YAAb,EAA2BjzB,KAA3B,CAAiCyyB,YAAjC,EAA+CjzB,IAA/C,CAAnD,GAA0G,KAAK,CAA5H;AACD;AACD,aAAOwzB,OAAP;AACD,KAdD;;AAgBAX,kBAAc3yB,SAAd,CAAwBkzB,WAAxB,GAAsC,UAAUH,YAAV,EAAwBS,OAAxB,EAAiC;AACrE,UAAItB,UAAJ;AACAA,mBAAaa,aAAab,UAA1B;AACA,aAAO,KAAKxB,QAAL,CAAchN,IAAd,CAAmB;AACxB8P,iBAASA,OADe;AAExBtB,oBAAYA;AAFY,OAAnB,CAAP;AAID,KAPD;;AASA,WAAOS,aAAP;AACD,GA5H2B,EAA5B;AA6HD,CAhID,EAgIGzyB,IAhIH,CAgIQkB,MAhIR;AAiIA,CAAC,YAAY;AACX8rB,cAAY8F,YAAZ,GAA4B,YAAY;AACtC,QAAIS,MAAJ;;AAEA,aAAST,YAAT,CAAuBtC,QAAvB,EAAiCjkB,MAAjC,EAAyComB,KAAzC,EAAgD;AAC9C,WAAKnC,QAAL,GAAgBA,QAAhB;AACA,UAAIjkB,UAAU,IAAd,EAAoB;AAClBA,iBAAS,EAAT;AACD;AACD,WAAKylB,UAAL,GAAkB5J,KAAKyI,SAAL,CAAetkB,MAAf,CAAlB;AACAgnB,aAAO,IAAP,EAAaZ,KAAb;AACD;;AAEDG,iBAAahzB,SAAb,CAAuB0zB,OAAvB,GAAiC,UAAUC,MAAV,EAAkBviB,IAAlB,EAAwB;AACvD,UAAIA,QAAQ,IAAZ,EAAkB;AAChBA,eAAO,EAAP;AACD;AACDA,WAAKuiB,MAAL,GAAcA,MAAd;AACA,aAAO,KAAKjQ,IAAL,CAAUtS,IAAV,CAAP;AACD,KAND;;AAQA4hB,iBAAahzB,SAAb,CAAuB0jB,IAAvB,GAA8B,UAAUtS,IAAV,EAAgB;AAC5C,aAAO,KAAKsf,QAAL,CAAchN,IAAd,CAAmB;AACxB8P,iBAAS,SADe;AAExBtB,oBAAY,KAAKA,UAFO;AAGxB9gB,cAAMkX,KAAKyI,SAAL,CAAe3f,IAAf;AAHkB,OAAnB,CAAP;AAKD,KAND;;AAQA4hB,iBAAahzB,SAAb,CAAuB8b,WAAvB,GAAqC,YAAY;AAC/C,aAAO,KAAK4U,QAAL,CAAc7Y,aAAd,CAA4BjD,MAA5B,CAAmC,IAAnC,CAAP;AACD,KAFD;;AAIA6e,aAAS,gBAAUG,MAAV,EAAkBC,UAAlB,EAA8B;AACrC,UAAI/tB,GAAJ,EAASI,KAAT;AACA,UAAI2tB,cAAc,IAAlB,EAAwB;AACtB,aAAK/tB,GAAL,IAAY+tB,UAAZ,EAAwB;AACtB3tB,kBAAQ2tB,WAAW/tB,GAAX,CAAR;AACA8tB,iBAAO9tB,GAAP,IAAcI,KAAd;AACD;AACF;AACD,aAAO0tB,MAAP;AACD,KATD;;AAWA,WAAOZ,YAAP;AACD,GA5C0B,EAA3B;AA6CD,CA9CD,EA8CG9yB,IA9CH,CA8CQkB,MA9CR;AA+CA,CAAC,YAAY;AACX8rB,cAAYM,QAAZ,GAAwB,YAAY;AAClC,aAASA,QAAT,CAAmBvpB,GAAnB,EAAwB;AACtB,WAAKA,GAAL,GAAWA,GAAX;AACA,WAAK4T,aAAL,GAAqB,IAAIqV,YAAYyF,aAAhB,CAA8B,IAA9B,CAArB;AACA,WAAKrE,UAAL,GAAkB,IAAIpB,YAAYsD,UAAhB,CAA2B,IAA3B,CAAlB;AACD;;AAEDhD,aAASxtB,SAAT,CAAmB0jB,IAAnB,GAA0B,UAAUtS,IAAV,EAAgB;AACxC,aAAO,KAAKkd,UAAL,CAAgB5K,IAAhB,CAAqBtS,IAArB,CAAP;AACD,KAFD;;AAIAoc,aAASxtB,SAAT,CAAmB8zB,OAAnB,GAA6B,YAAY;AACvC,aAAO,KAAKxF,UAAL,CAAgBqC,IAAhB,EAAP;AACD,KAFD;;AAIAnD,aAASxtB,SAAT,CAAmB+zB,UAAnB,GAAgC,YAAY;AAC1C,aAAO,KAAKzF,UAAL,CAAgB+C,KAAhB,CAAsB;AAC3BE,wBAAgB;AADW,OAAtB,CAAP;AAGD,KAJD;;AAMA/D,aAASxtB,SAAT,CAAmBizB,sBAAnB,GAA4C,YAAY;AACtD,UAAI,CAAC,KAAK3E,UAAL,CAAgB0C,QAAhB,EAAL,EAAiC;AAC/B,eAAO,KAAK1C,UAAL,CAAgBqC,IAAhB,EAAP;AACD;AACF,KAJD;;AAMA,WAAOnD,QAAP;AACD,GA5BsB,EAAvB;AA6BD,CA9BD,EA8BGttB,IA9BH,CA8BQkB,MA9BR,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICpiBqB4yB,U;AACnB,sBAAa9S,OAAb,EAAsB;AAAA;;AACrBA,cAAUA,WAAW,EAArB;AACC,SAAK+S,MAAL,GAAc/S,QAAQ+S,MAAtB;AACA,SAAKC,KAAL,GAAahT,QAAQgT,KAArB;AACA,SAAKhhB,IAAL,GAAYgO,QAAQhO,IAAR,IAAgB,QAA5B;AACA,SAAKihB,OAAL,GAAejT,QAAQiT,OAAR,IAAmB,CAAlC;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;;;yBAEKpT,O,EAAS;AACd,UAAItS,YAAYhO,SAASiR,cAAT,CAAwB,sBAAxB,CAAhB;AACA,UAAI0iB,MAAM3zB,SAASiD,aAAT,CAAuB,KAAvB,CAAV;AACA0wB,UAAI/kB,EAAJ,GAAS,YAAT;AACA+kB,UAAIrlB,SAAJ,GAAgB,iBAAhB;;AAEA,UAAIslB,QAAQ5zB,SAASiD,aAAT,CAAuB,MAAvB,CAAZ;AACA2wB,YAAMtlB,SAAN,GAAkB,2DAAlB;;AAEA,WAAKolB,UAAL,GAAkBE,KAAlB;AACAD,UAAIvnB,WAAJ,CAAgBwnB,KAAhB;;AAEA5lB,gBAAU5B,WAAV,CAAsBunB,GAAtB;AACA;;;4BAEQ;AAAA;;AACR,UAAI,KAAKF,KAAT,EAAgB;AAChB,WAAKF,OAAL,GAAe,CAAf;AACA,WAAK3rB,IAAL;AACA,WAAK6rB,KAAL,GAAaI,YAAY,YAAM;AAC9B,cAAKN,OAAL,IAAgBxE,KAAK+E,KAAL,CAAW/E,KAAKgF,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAhB;AACA,YAAI,MAAKR,OAAL,GAAe,EAAnB,EAAuB;AAClBS,wBAAc,MAAKP,KAAnB;AACJ;AACD,cAAKQ,MAAL,CAAY;AACVV,mBAAS,MAAKA,OADJ;AAEVjhB,gBAAM,QAFI;AAGVkhB,gBAAM;AAHI,SAAZ;AAKD,OAVa,EAUX,GAVW,CAAb;AAWA;;;2BAEOlT,O,EAAS;AAChB,WAAKiT,OAAL,GAAejT,QAAQiT,OAAvB;AACA,WAAKjhB,IAAL,GAAYgO,QAAQhO,IAApB;AACA,WAAKkhB,IAAL,GAAYlT,QAAQkT,IAApB;AACA,UAAI,KAAKlhB,IAAL,KAAc,OAAlB,EAA2B,KAAKohB,UAAL,CAAgB3nB,KAAhB,CAAsBmoB,eAAtB,GAAwC,KAAxC;AAC3B,WAAKR,UAAL,CAAgB3nB,KAAhB,CAAsBunB,KAAtB,GAA8B,KAAKC,OAAL,GAAe,GAA7C;AACA;;;6BAES;AACT,WAAKU,MAAL,CAAY;AACXV,iBAAS,GADE;AAEXjhB,cAAM,QAFK;AAGXkhB,cAAM;AAHK,OAAZ;AAKA;;;4BAEQ;AACR,WAAKS,MAAL,CAAY;AACXV,iBAAS,GADE;AAEXjhB,cAAM,OAFK;AAGXkhB,cAAM;AAHK,OAAZ;AAKA;;;8BAEU;AACVQ,oBAAc,KAAKP,KAAnB;AACA,UAAIU,gBAAgBn0B,SAASiR,cAAT,CAAwB,YAAxB,CAApB;AACAkjB,oBAAcC,aAAd,CAA4BtmB,WAA5B,CAAwCqmB,aAAxC;AACA;;;;;kBAxEkBf,U;;;;;;;;;;;;;;;;;;;;;QCELiB,S,GAAAA,S;;AAFhB;;AAEO,SAASA,SAAT,GAAsB;AAC3Br0B,WAASoP,gBAAT,CAA0B,OAA1B,EAAmCklB,eAAnC,EAAoD,KAApD;AACD;AACD,SAASA,eAAT,CAA0BC,EAA1B,EAA8B;AAC5B,MAAI/wB,IAAIhD,OAAOgD,CAAP,IAAY+wB,EAApB;;AAEA,MAAI/wB,EAAEiI,MAAF,CAAS0T,OAAT,KAAqB,GAAzB,EAA8B;;AAE9B,MAAI3b,EAAEiI,MAAF,CAAS2S,OAAT,CAAiB/T,MAAjB,KAA4B,QAAhC,EAA0C;AACxC7G,MAAEkd,cAAF;AACA,QAAIld,EAAEiI,MAAF,CAAS5I,YAAT,CAAsB,MAAtB,MAAkC,SAAtC,EAAiD;AAC/C,UAAI2xB,EAAExd,OAAF,CAAUwd,EAAEC,EAAF,CAAKC,WAAf,CAAJ,EAAiCF,EAAExd,OAAF,CAAUwd,EAAEC,EAAF,CAAKC,WAAf,EAA4Bh1B,KAA5B,CAAkC,IAAlC;AAClC;AACD,oCAAa8D,EAAEiI,MAAf;AACD;AACD,MAAIjI,EAAEiI,MAAF,CAAS2S,OAAT,CAAiB/T,MAAjB,KAA4B,OAAhC,EAAyC;AACvC7G,MAAEkd,cAAF;AACA,oCAAald,EAAEiI,MAAf;AACD;AACF,C;;;;;;;;;;;;;;;;;;;;;;QCdekpB,iB,GAAAA,iB;QAuDAC,U,GAAAA,U;;;;AA9DhB,IAAIC,mBAAJ;AACA,IAAIC,WAAJ;AAAA,IAAQC,WAAR;AACA,SAASC,qBAAT,CAA+BF,EAA/B,EAAmC;AACjC,SAAO,2CAAIA,GAAGG,OAAH,EAAJ,GACJtwB,GADI,CACA;AAAA,WAAKugB,mBAAmB1hB,EAAE,CAAF,CAAnB,IAA2B,GAA3B,GAAiC0hB,mBAAmB1hB,EAAE,CAAF,CAAnB,CAAtC;AAAA,GADA,EAEJ4F,IAFI,CAEC,GAFD,CAAP;AAGD;AACM,SAASurB,iBAAT,CAA2BJ,EAA3B,EAA+B;AACpC,MAAI/wB,IAAIhD,OAAOgD,CAAP,IAAY+wB,EAApB;AACA,MAAIW,KAAK1xB,EAAEiI,MAAX;;AAEA,MACEypB,GAAG/V,OAAH,KAAe,OAAf,IACA+V,GAAG/f,SAAH,CAAajN,QAAb,CAAsB,eAAtB,CADA,IAEAgtB,GAAGryB,YAAH,CAAgB,MAAhB,MAA4B,QAF5B,IAGAqyB,GAAGryB,YAAH,CAAgB,MAAhB,MAA4B,QAJ9B,EAKE;AACAW,MAAEkd,cAAF;AACA,QAAI5U,IAAIopB,GAAGC,OAAH,CAAW,MAAX,CAAR;AACA,QAAIJ,MAAKjpB,EAAEinB,MAAX;AACA,QAAIqC,KAAKtpB,EAAEzB,MAAX;AACA,QAAIyqB,MAAK,IAAIO,QAAJ,CAAavpB,CAAb,CAAT;AACAtL,WAAOg0B,CAAP,CAAS1Z,GAAT,CAAanF,IAAb,MACKof,GADL,IACUK,GAAG3rB,WAAH,OAAqB,KAArB,GACJ,MAAMurB,sBAAsBF,GAAtB,CADF,GAEJ,EAHN,GAIE;AACE/R,eAAS;AACPuS,gBAAQ;AADD,OADX;AAIEjrB,cAAQ+qB,EAJV;AAKEjS,gBAAU2R,GALZ;AAMES,iBAAW,mBAASr1B,GAAT,EAAc;AACvB;AACA,YACEs0B,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,KACAF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,SAA7B,CADA,IAEA,OAAOF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,SAA7B,CAAP,KAAmD,UAHrD,EAIE;AACAF,YAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,SAA7B,EAAwCh1B,KAAxC,CAA8C,IAA9C;AACD;AACF,OAfH;AAgBE+1B,cAAQ,gBAASv1B,GAAT,EAAc;AACpB;AACA,YACEs0B,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,KACAF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,MAA7B,CADA,IAEA,OAAOF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,MAA7B,CAAP,KAAgD,UAHlD,EAIE;AACAF,YAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,MAA7B,EAAqCh1B,KAArC,CAA2C,IAA3C;AACD;AACD,YACEQ,IAAIgkB,QAAJ,IACAhkB,IAAIgkB,QAAJ,CAAaxO,MAAb,KAAwB,SADxB,IAEAxV,IAAIgkB,QAAJ,CAAa7gB,GAHf,EAKE7C,OAAOg0B,CAAP,CAAS1Z,GAAT,CAAa0G,QAAb,CAAsBthB,IAAIgkB,QAAJ,CAAa7gB,GAAnC;AACH;AA/BH,KAJF;AAsCD;AACF;AACM,SAASuxB,UAAT,GAAsB;AAC3B50B,WAASoP,gBAAT,CAA0B,OAA1B,EAAmCulB,iBAAnC,EAAsD,KAAtD;AACD;AACD,SAASe,mBAAT,GAA+B;AAC7B11B,WAAS0P,mBAAT,CAA6B,OAA7B,EAAsC4kB,eAAtC,EAAuD,KAAvD;AACD,C;;;;;;;;;;;;;;;;;;;QC9DeA,e,GAAAA,e;QAgCAqB,e,GAAAA,e;;AArChB;;AAEA,IAAId,mBAAJ;AACA,IAAIC,WAAJ;AAAA,IAAQC,WAAR;;AAEO,SAAST,eAAT,CAA0BC,EAA1B,EAA8B;AACnC,MAAI/wB,IAAIhD,OAAOgD,CAAP,IAAY+wB,EAApB;;AAEA,MAAI/wB,EAAEiI,MAAF,CAAS0T,OAAT,KAAqB,GAAzB,EAA8B;;AAE9B,MAAI3b,EAAEiI,MAAF,CAAS2S,OAAT,CAAiB/T,MAAjB,KAA4B,aAAhC,EAA+C;AAC7C7G,MAAEkd,cAAF;AACAmU,iBAAa,gCAAarxB,EAAEiI,MAAf,EAAuB,QAAvB,CAAb;AACAspB,SAAKvxB,EAAEiI,MAAF,CAAS5I,YAAT,CAAsB,MAAtB,CAAL;AACAiyB,SAAK,IAAIO,QAAJ,CAAaR,UAAb,CAAL;AACAr0B,WAAOg0B,CAAP,CAAS1Z,GAAT,CAAanF,IAAb,CAAkBof,EAAlB,EAAsB;AACpB1qB,cAAQ,MADY;AAEpB8Y,gBAAU2R,EAFU;AAGpBS,iBAAW,mBAAUr1B,GAAV,EAAe;AACxB;AACA,YAAIs0B,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,KACFF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,SAA7B,CADE,IAED,OAAOF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,SAA7B,CAAP,KAAmD,UAFtD,EAEmE;AAClEF,YAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,SAA7B,EAAwCh1B,KAAxC,CAA8C,IAA9C;AACA;AACF,OAVmB;AAWpB+1B,cAAQ,gBAAUv1B,GAAV,EAAe;AACrB;AACA,YAAIs0B,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,KACFF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,MAA7B,CADE,IAED,OAAOF,EAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,MAA7B,CAAP,KAAgD,UAFnD,EAEgE;AAC/DF,YAAEgB,QAAF,CAAWhB,EAAEC,EAAF,CAAKC,WAAhB,EAA6B,MAA7B,EAAqCh1B,KAArC,CAA2C,IAA3C;AACA;AACF;AAlBmB,KAAtB;AAoBD;AACF;AACM,SAASi2B,eAAT,GAA4B;AACjC31B,WAASoP,gBAAT,CAA0B,OAA1B,EAAmCklB,eAAnC,EAAoD,KAApD;AACD;AACD,SAASoB,mBAAT,GAAgC;AAC9B11B,WAAS0P,mBAAT,CAA6B,OAA7B,EAAsC4kB,eAAtC,EAAuD,KAAvD;AACD,C;;;;;;;;;;;;;;;;;;;;;AC1CD;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIsB,WAAW,EAAf;AACA;AACA;AACA;AACA;AACAA,SAASC,IAAT,GAAgB;AACd,UAAQ,eAAQjuB,IADF;AAEd,aAAW,eAAQ6H,OAFL;AAGd,cAAY,cAAO+R,QAHL;AAId,UAAQ,cAAO7L,IAJD;AAKd,cAAY,cAAOgD,QALL;AAMd,aAAW,cAAOqL;AAEpB;AARgB,CAAhB,CASA4R,SAASE,MAAT,GAAkB;AAChB,WAAS;AACP;AACA;AACA,cAAU,gBAAS9hB,MAHZ;AAIP;AACA,aAAS,gBAAShM;AALX,GADO;AAQhB,YAAU;AACR;AACA;AACA,YAAQ,iBAAa2N,IAHb;AAIR,WAAO,iBAAavQ,GAJZ;AAKR;AACA,aAAS,iBAAagS,KANd;AAOR,YAAQ,iBAAa4D,IAPb;AAQR;AACA,eAAW,iBAAaG,OAThB;AAUR;AACA,eAAW,iBAAaS,OAXhB;AAYR,YAAQ,iBAAa1J,IAZb;AAaR;AACA;AACA,cAAU,iBAAa6E,MAff;AAgBR;AACA,cAAU,iBAAakE,MAjBf;AAkBR;AACA,iBAAa,iBAAaG,SAnBlB;AAoBR;AACA,gBAAY,iBAAazC;AArBjB,GARM;AA+BhB,WAAS;AACP;AACA;AACA,YAAQ,gBAAYhD,IAHb;AAIP,WAAO,gBAAYvQ,GAJZ;AAKP;AACA,cAAU,gBAAY2R,MANf;AAOP;AACA,YAAQ,gBAAY7E,IARb;AASP;AACA,gBAAY,gBAAYyG;AAVjB;AAaX;AACA;AA7CkB,CAAlB,CA8CA,IAAIod,QAAQ,EAAZ;;AAEA,KAAK,IAAIC,GAAT,IAAgBJ,SAASC,IAAzB,EAA+B;AAC7BE,QAAMC,GAAN,IAAaJ,SAASC,IAAT,CAAcG,GAAd,CAAb;AACD;AACD;AACA;AACA,KAAK,IAAIC,EAAT,IAAeL,SAASE,MAAxB,EAAgC;AAC9B,OAAK,IAAII,GAAT,IAAgBN,SAASE,MAAT,CAAgBG,EAAhB,CAAhB,EAAqC;AACnCF,UAAME,EAAN,IAAYF,MAAME,EAAN,KAAa,EAAzB;AACAF,UAAME,EAAN,EAAUC,GAAV,IAAiBN,SAASE,MAAT,CAAgBG,EAAhB,EAAoBC,GAApB,CAAjB;AACD;AACF;;kBAEcH,K;;;;;;;;;;;ACpFf,yC;;;;;;;;;;;;;;;;;;;;;;;QCQgB1qB,Y,GAAAA,Y;;AARhB;;AACA;;;;;;;AAOO,SAASA,YAAT,CAAuBC,IAAvB,EAAuC;AAAA,MAAVE,GAAU,uEAAJ,EAAI;;AAC5C,MAAItI,OAAOoI,KAAKzI,YAAL,CAAkB,MAAlB,CAAX;AAAA,MACEwH,SAASiB,KAAK8S,OAAL,CAAa/T,MADxB;AAAA,MAEEoB,SAASH,KAAKzI,YAAL,CAAkB,QAAlB,CAFX;AAAA,MAGEF,YAAY,gBAAIA,SAAJ,EAHd;AAAA,MAIEG,YAAY,gBAAIA,SAAJ,EAJd;AAKA,MAAI4I,YAAY;AACdxI,UAAMA,IADQ;AAEdmH,YAAQA,MAFM;AAGdoB,YAAQA,MAHM;AAId9I,eAAWA,SAJG;AAKdG,eAAWA;AALG,GAAhB;AAOA,MAAI6I,UAAUC,WAAWF,SAAX,EAAsBF,GAAtB,CAAd;AACAa,kBAAgBV,OAAhB;AACAa,aAAWb,OAAX;AACD;AACD,SAASC,UAAT,CAAqBC,MAArB,EAA6BL,GAA7B,EAAkC;AAChC,MAAIM,IAAI9L,SAASiD,aAAT,CAAuB,MAAvB,CAAR;AACA6I,IAAEC,KAAF,CAAQC,OAAR,GAAkB,MAAlB;AACAF,IAAEG,YAAF,CAAe,QAAf,EAAyB,MAAzB;AACAH,IAAEG,YAAF,CAAe,QAAf,EAAyBJ,OAAO3I,IAAhC;AACA,MAAI2I,OAAOJ,MAAX,EAAmB;AACjBK,MAAEG,YAAF,CAAe,QAAf,EAAyBJ,OAAOJ,MAAhC;AACD;;AAED,MAAI1H,IAAI/D,SAASiD,aAAT,CAAuB,OAAvB,CAAR;AACAc,IAAEkI,YAAF,CAAe,MAAf,EAAuB,QAAvB;AACAlI,IAAEkI,YAAF,CAAe,MAAf,EAAuB,SAAvB;AACAlI,IAAEkI,YAAF,CAAe,OAAf,EAAwBJ,OAAOxB,MAA/B;;AAEA,MAAI6B,CAAJ;AACA,MAAIL,OAAO/I,SAAP,KAAqBqJ,SAArB,IACAN,OAAOlJ,SAAP,KAAqBwJ,SADrB,IAEA,CAAC,gBAAIpJ,aAAJ,CAAkB8I,OAAO3I,IAAzB,CAFL,EAEqC;AACnCgJ,QAAIlM,SAASiD,aAAT,CAAuB,OAAvB,CAAJ;AACAiJ,MAAED,YAAF,CAAe,MAAf,EAAuB,QAAvB;AACAC,MAAED,YAAF,CAAe,MAAf,EAAuBJ,OAAO/I,SAA9B;AACAoJ,MAAED,YAAF,CAAe,OAAf,EAAwBJ,OAAOlJ,SAA/B;AACD;AACDmJ,IAAEM,WAAF,CAAcrI,CAAd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAImI,CAAJ,EAAO;AACLJ,MAAEM,WAAF,CAAcF,CAAd;AACD;AACD,SAAOJ,CAAP;AACD;;AAED,SAASO,eAAT,CAA0BC,IAA1B,EAAgC;AAC9BtM,WAASuM,IAAT,CAAcH,WAAd,CAA0BE,IAA1B;AACD;AACD,SAASE,UAAT,CAAqBF,IAArB,EAA2B;AACzBA,OAAKG,MAAL;AACD,C;;;;;;;;;;;;;;;;;;;;;;;;;ACvED;;;;AAEA;;AAEA;;;;AACA;;AACA;;AAEA;;AAEA;;;;;;AAEA,IAAI+nB,IAAIh0B,OAAOg0B,CAAP,IAAY,EAApB;AACAh0B,OAAOg0B,CAAP,GAAWA,CAAX;AACAA,EAAE1Z,GAAF;AACA,IAAIqb,MAAM31B,OAAOg0B,CAAP,CAAS2B,GAAT,IAAgB,EAA1B;;AAEA;AACA;AACA;;AAEA;;;AAGAA,IAAIvuB,IAAJ,GAAW,YAAY;AACrBuuB,MAAIzrB,MAAJ,GAAa,CAAC,IAAI9J,IAAJ,EAAd;AACA,MAAIJ,OAAO4O,gBAAX,EAA6B;AAC3B5O,WAAO4O,gBAAP,CAAwB,UAAxB,EAAoC+mB,IAAIC,OAAxC;AACA51B,WAAO4O,gBAAP,CAAwB,YAAxB,EAAsC+mB,IAAIE,SAA1C;AACA71B,WAAO4O,gBAAP,CAAwB,YAAxB,EAAsC+mB,IAAIG,SAA1C;AACA91B,WAAO4O,gBAAP,CAAwB,gBAAxB,EAA0C+mB,IAAII,aAA9C;AACA/1B,WAAO4O,gBAAP,CAAwB,aAAxB,EAAuC+mB,IAAIK,UAA3C;AACAh2B,WAAO4O,gBAAP,CAAwB,YAAxB,EAAsC+mB,IAAIZ,SAA1C;AACA/0B,WAAO4O,gBAAP,CAAwB,SAAxB,EAAmC+mB,IAAIV,MAAvC;AACAj1B,WAAO4O,gBAAP,CAAwB,UAAxB,EAAoC+mB,IAAIlT,OAAxC;;AAEAziB,WAAO4O,gBAAP,CAAwB,mBAAxB,EAA6C+mB,IAAIM,oBAAjD;AACAj2B,WAAO4O,gBAAP,CAAwB,aAAxB,EAAuC+mB,IAAIO,cAA3C;AACAl2B,WAAO4O,gBAAP,CAAwB,oBAAxB,EAA8C+mB,IAAIQ,mBAAlD;AACAn2B,WAAO4O,gBAAP,CAAwB,cAAxB,EAAwC+mB,IAAIS,aAA5C;AACD;AACDT,MAAIU,OAAJ,GAAcrC,EAAE1Z,GAAF,CAAMlT,IAAN,EAAd;AACD,CAlBD;;AAoBA;;;AAGAuuB,IAAI1mB,OAAJ,GAAc,YAAY;AACxB0mB,MAAIzrB,MAAJ,GAAa,CAAb;AACAyrB,MAAIU,OAAJ,GAAc,KAAd;AACA,MAAIr2B,OAAOkP,mBAAX,EAAgC;AAC9BlP,WAAOkP,mBAAP,CAA2B,UAA3B,EAAuCymB,IAAIC,OAA3C;AACA51B,WAAOkP,mBAAP,CAA2B,YAA3B,EAAyCymB,IAAIE,SAA7C;AACA71B,WAAOkP,mBAAP,CAA2B,YAA3B,EAAyCymB,IAAIG,SAA7C;AACA91B,WAAOkP,mBAAP,CAA2B,gBAA3B,EAA6CymB,IAAII,aAAjD;AACA/1B,WAAOkP,mBAAP,CAA2B,aAA3B,EAA0CymB,IAAIK,UAA9C;AACAh2B,WAAOkP,mBAAP,CAA2B,YAA3B,EAAyCymB,IAAIZ,SAA7C;AACA/0B,WAAOkP,mBAAP,CAA2B,SAA3B,EAAsCymB,IAAIV,MAA1C;AACAj1B,WAAOkP,mBAAP,CAA2B,UAA3B,EAAuCymB,IAAIlT,OAA3C;;AAEAziB,WAAOkP,mBAAP,CAA2B,mBAA3B,EAAgDymB,IAAIM,oBAApD;AACAj2B,WAAOkP,mBAAP,CAA2B,aAA3B,EAA0CymB,IAAIO,cAA9C;AACAl2B,WAAOkP,mBAAP,CAA2B,oBAA3B,EAAiDymB,IAAIQ,mBAArD;AACAn2B,WAAOkP,mBAAP,CAA2B,cAA3B,EAA2CymB,IAAIS,aAA/C;AACD;AACF,CAlBD;;AAoBA;;;;AAIAT,IAAIpsB,GAAJ,GAAU,UAAU+sB,GAAV,EAAe;AACvB,MAAIt2B,OAAO8J,OAAX,EAAoB;AAClB;AACD;AACF,CAJD;;AAMA;;;;AAIA6rB,IAAIC,OAAJ,GAAc,UAAUl2B,GAAV,EAAe;AAC3Bi2B,MAAIpsB,GAAJ,CAAQ,6BAA6B7J,IAAIimB,MAAJ,CAAW9iB,GAAhD;AACD,CAFD;;AAIA;;;;AAIA8yB,IAAIE,SAAJ,GAAgB,UAAUn2B,GAAV,EAAe;AAC7Bi2B,MAAIpsB,GAAJ,CAAQ,+BAA+B7J,IAAIimB,MAAJ,CAAW9iB,GAAlD;AACD,CAFD;;AAIA;;;;AAIA8yB,IAAIG,SAAJ,GAAgB,UAAUp2B,GAAV,EAAe;AAC7B,MAAI,CAACi2B,IAAIY,GAAT,EAAc;AACZZ,QAAIY,GAAJ,GAAU,0BAAV;AACAZ,QAAIY,GAAJ,CAAQryB,KAAR;AACD;AACDyxB,MAAIpsB,GAAJ,CAAQ,+BAA+B7J,IAAIimB,MAAJ,CAAW9iB,GAAlD;AACA;AACA;AACA,MAAImxB,EAAE1Z,GAAF,CAAMnR,KAAV,EAAiB;AACf6qB,MAAE1Z,GAAF,CAAMnR,KAAN,CAAYmB,KAAZ;AACD;AACF,CAXD;;AAaA;;;;AAIAqrB,IAAII,aAAJ,GAAoB,UAAUr2B,GAAV,EAAe;AACjCi2B,MAAIpsB,GAAJ,CAAQ,oCAAoC7J,IAAIimB,MAAJ,CAAW9iB,GAAvD;AACD,CAFD;;AAIA;;;;AAIA8yB,IAAIK,UAAJ,GAAiB,UAAUt2B,GAAV,EAAe;AAC9Bi2B,MAAIpsB,GAAJ,CAAQ,iCAAiC7J,IAAIimB,MAAJ,CAAW9iB,GAApD;AACD,CAFD;;AAIA;;;;AAIA8yB,IAAIZ,SAAJ,GAAgB,UAAUr1B,GAAV,EAAe;AAC7B,MAAIs0B,EAAEwC,MAAF,CAASxC,EAAEC,EAAF,CAAKC,WAAd,CAAJ,EAAgCF,EAAEwC,MAAF,CAASxC,EAAEC,EAAF,CAAKC,WAAd,EAA2Bh1B,KAA3B,CAAiC,IAAjC;AAChC,MAAI80B,EAAExd,OAAF,CAAUwd,EAAEC,EAAF,CAAKC,WAAf,CAAJ,EAAiCF,EAAExd,OAAF,CAAUwd,EAAEC,EAAF,CAAKC,WAAf,EAA4Bh1B,KAA5B,CAAkC,IAAlC;AACjCy2B,MAAInf,OAAJ,CAAYwd,EAAEC,EAAF,CAAKC,WAAjB;AACAF,IAAEC,EAAF,CAAKC,WAAL,GAAmBx0B,IAAIimB,MAAJ,CAAWjC,QAAX,CAAoBpkB,IAAvC;AACAq2B,MAAIpsB,GAAJ,CAAQ,+BAA+B7J,IAAIimB,MAAJ,CAAW9iB,GAAlD;AACD,CAND;;AAQA;;;;AAIA8yB,IAAIV,MAAJ,GAAa,UAAUv1B,GAAV,EAAe;AAC1B,MAAIi2B,IAAIY,GAAR,EAAa;AACXZ,QAAIY,GAAJ,CAAQtP,MAAR;AACApT,eAAW,YAAM;AAAE8hB,UAAIY,GAAJ,CAAQ/f,OAAR,GAAmBmf,IAAIY,GAAJ,GAAU,IAAV;AAAgB,KAAtD,EAAwD,GAAxD;AACD;AACD,MAAIvC,EAAE5sB,IAAF,CAAO4sB,EAAEC,EAAF,CAAKC,WAAZ,CAAJ,EAA8BF,EAAE5sB,IAAF,CAAO4sB,EAAEC,EAAF,CAAKC,WAAZ,EAAyBh1B,KAAzB,CAA+B,IAA/B;AAC/B,CAND;;AAQA;;;;AAIAy2B,IAAIlT,OAAJ,GAAc,UAAU/iB,GAAV,EAAe;AAC3B,MAAIi2B,IAAIY,GAAR,EAAa;AACXZ,QAAIY,GAAJ,CAAQ3sB,KAAR;AACAiK,eAAW,YAAM;AAAE8hB,UAAIY,GAAJ,CAAQ/f,OAAR,GAAmBmf,IAAIY,GAAJ,GAAU,IAAV;AAAgB,KAAtD,EAAwD,IAAxD;AACD;AACDZ,MAAIpsB,GAAJ,CAAQ,6BAA6B7J,IAAIimB,MAAJ,CAAW9iB,GAAhD;AACD,CAND;;AAQA;;;;AAIA8yB,IAAIM,oBAAJ,GAA2B,UAAUv2B,GAAV,EAAe;AACxC,MAAIJ,OAAOI,IAAIimB,MAAJ,CAAWrmB,IAAtB;AACAq2B,MAAIpsB,GAAJ,CAAQ,mCAAmCjK,IAA3C;AACD,CAHD;;AAKA;;;;AAIAq2B,IAAIO,cAAJ,GAAqB,UAAUx2B,GAAV,EAAe;AAClC,MAAIJ,OAAOI,IAAIimB,MAAJ,CAAWrmB,IAAtB;AACA,MAAI4a,OAAOxa,IAAIimB,MAAJ,CAAWzL,IAAtB;AACAyb,MAAIpsB,GAAJ,CAAQ,4BAA4BjK,IAA5B,GAAmC,GAAnC,GAAyC4a,IAAjD;AACD,CAJD;;AAMA;;;;AAIAyb,IAAIQ,mBAAJ,GAA0B,UAAUz2B,GAAV,EAAe;AACvC,MAAIJ,OAAOI,IAAIimB,MAAJ,CAAWrmB,IAAtB;AACAq2B,MAAIpsB,GAAJ,CAAQ,kCAAkCjK,IAA1C;AACD,CAHD;;AAKA;;;;AAIAq2B,IAAIS,aAAJ,GAAoB,UAAU12B,GAAV,EAAe;AACjC,MAAIJ,OAAOI,IAAIimB,MAAJ,CAAWrmB,IAAtB;AACA,MAAI4a,OAAOxa,IAAIimB,MAAJ,CAAWzL,IAAtB;AACAyb,MAAIpsB,GAAJ,CAAQ,2BAA2BjK,IAA3B,GAAkC,GAAlC,GAAwC4a,IAAhD;AACD,CAJD;;AAMA;;;;;AAKAyb,IAAInf,OAAJ,GAAc,UAAUlX,IAAV,EAAgB;AAC5B00B,IAAE1Z,GAAF,CAAM/O,KAAN,CAAYgL,MAAZ,CAAmBjX,IAAnB;AACA;AACD,CAHD;;AAKA;;;;AAIAq2B,IAAIU,OAAJ,GAAc,KAAd;;AAEA;;;;;AAKAV,IAAIzrB,MAAJ,GAAa,CAAb;;AAEA;;;;;AAKAyrB,IAAIc,MAAJ,GAAa,CAAb;;AAEAzC,EAAE2B,GAAF,GAAQA,GAAR,C;;;;;;;;;;;;;;;;;;;;;;;;;ACxNA;;AACA;;;;AACA;;;;;;AAEA;;AAEA,IAAIe,WAAW,EAAf;;AAEA;;;;;AAtBA;;;;;;;;;;;;;;AA2BAA,SAASC,KAAT,GAAiB,UAAUp4B,EAAV,EAAc;AAC7B,MAAI+B,MAAM,cAAQA,GAAR,EAAV;AACAo2B,WAASE,OAAT,CAAiBt2B,GAAjB,IAAwB/B,EAAxB;AACA,MAAIm4B,SAASG,sBAAb,EAAqC;AACnC72B,WAAO82B,WAAP,CAAmBJ,SAASK,OAAT,GAAmBz2B,GAAtC,EAA2C,GAA3C;AACD,GAFD,MAEO;AACLN,WAAO6T,UAAP,CAAkB,cAAQvV,IAAR,CAAao4B,SAASM,IAAtB,EAA4B,IAA5B,EAAkC12B,GAAlC,CAAlB,EAA0D,CAA1D;AACD;AACF,CARD;;AAUA;;;;;;AAMAo2B,SAASO,cAAT,GAA0B,UAAUv3B,GAAV,EAAe;AACvC,MAAIA,IAAIsQ,IAAJ,IAAY,iBAAU5H,QAAV,CAAmB1I,IAAIsQ,IAAvB,CAAZ,IACA,iBAAUnI,UAAV,CAAqBnI,IAAIsQ,IAAzB,EAA+B0mB,SAASK,OAAxC,CADJ,EACsD;AACpD,QAAIz2B,MAAMZ,IAAIsQ,IAAJ,CAASsC,SAAT,CAAmBokB,SAASK,OAAT,CAAiBtzB,MAApC,CAAV;AACAizB,aAASM,IAAT,CAAc12B,GAAd;AACD;AACF,CAND;;AAQA;;;;;;AAMAo2B,SAASM,IAAT,GAAgB,UAAU12B,GAAV,EAAe;AAC7B,MAAI/B,KAAKm4B,SAASE,OAAT,CAAiBt2B,GAAjB,CAAT;AACA,MAAI/B,EAAJ,EAAQ;AACN,WAAOm4B,SAASE,OAAT,CAAiBt2B,GAAjB,CAAP;AACA/B;AACD;AACF,CAND;;AAQA;;;;;;AAMAm4B,SAASQ,YAAT,GAAwB,UAAU34B,EAAV,EAAc;AACpC,MAAIyB,OAAO4O,gBAAX,EAA6B;AAC3B5O,WAAO4O,gBAAP,CAAwB,SAAxB,EAAmCrQ,EAAnC,EAAuC,KAAvC;AACD,GAFD,MAEO,IAAIyB,OAAOm3B,WAAX,EAAwB;AAC7Bn3B,WAAOm3B,WAAP,CAAmB,WAAnB,EAAgC54B,EAAhC;AACD;AACF,CAND;;AAQA;;;;;;AAMAm4B,SAASU,eAAT,GAA2B,UAAU74B,EAAV,EAAc;AACvC,MAAIyB,OAAOkP,mBAAX,EAAgC;AAC9BlP,WAAOkP,mBAAP,CAA2B,SAA3B,EAAsC3Q,EAAtC,EAA0C,KAA1C;AACD,GAFD,MAEO,IAAIyB,OAAOq3B,WAAX,EAAwB;AAC7Br3B,WAAOq3B,WAAP,CAAmB,WAAnB,EAAgC94B,EAAhC;AACD;AACF,CAND;;AAQA;;;;;AAKAm4B,SAASG,sBAAT,GAAmC,YAAY;AAC7C,MAAI,CAAC72B,OAAO82B,WAAZ,EAAyB;AACvB,WAAO,KAAP;AACD;AACD;AACA;AACA;AACA,MAAIQ,YAAY,IAAhB;AACA,MAAIC,WAAW,SAAXA,QAAW,GAAY;AAAED,gBAAY,KAAZ;AAAmB,GAAhD;AACA;AACAZ,WAASQ,YAAT,CAAsBK,QAAtB;AACAv3B,SAAO82B,WAAP,CAAmB,EAAnB,EAAuB,GAAvB;AACAJ,WAASU,eAAT,CAAyBG,QAAzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAOD,SAAP;AACD,CAnBiC,EAAlC;;AAqBA;;;;;AAKAZ,SAASK,OAAT,GAAmB,MAAnB;;AAEA;;;;AAIAL,SAASE,OAAT,GAAmB,EAAnB;;AAEA;AACA;AACA,0BAAoB;AAClB,kBAAS/xB,GAAT,CAAa,gBAASE,GAAT,CAAaC,YAA1B,EAAwC0xB,SAASE,OAAjD;AACD,CAFD,MAEO;AACL,MAAI,CAAC,gBAASnyB,GAAT,CAAa,gBAASM,GAAT,CAAaC,YAA1B,CAAL,EAA8C;AAC5C,oBAASH,GAAT,CAAa,gBAASE,GAAT,CAAaC,YAA1B,EAAwC0xB,SAASE,OAAjD;AACD;AACDF,WAASE,OAAT,GAAmB,kCACf,gBAAShyB,GAAT,CAAa,gBAASG,GAAT,CAAaC,YAA1B,CADJ;AAED;;AAED;AACA;AACA,0BAAoB;AAClB,MAAI0xB,SAASG,sBAAb,EAAqC;AACnCH,aAASQ,YAAT,CAAsBR,SAASO,cAA/B;AACA,oBAASpyB,GAAT,CAAa,gBAASE,GAAT,CAAaE,cAA1B,EAA0CyxB,SAASO,cAAnD;AACD;AACF,CALD,MAKO;AACL,MAAIP,SAASG,sBAAb,EAAqC;AACnC,QAAI,gBAASpyB,GAAT,CAAa,gBAASM,GAAT,CAAaE,cAA1B,CAAJ,EAA+C;AAC7CyxB,eAASU,eAAT,EAAyB,8BACrB,gBAASxyB,GAAT,CAAa,gBAASG,GAAT,CAAaE,cAA1B,CADJ;AAED;AACDyxB,aAASQ,YAAT,CAAsBR,SAASO,cAA/B;AACA,oBAASpyB,GAAT,CAAa,gBAASE,GAAT,CAAaE,cAA1B,EAA0CyxB,SAASO,cAAnD;AACD;AACF;;kBAEcP,Q;;;;;;;;;;;;;;;;;;ACvJf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIc,UAAU,EAAd;;AAEA;;;;;;;AArBA;AACA;AACA;AACA;;AAEA;;;;;;AAuBAA,QAAQpwB,IAAR,GAAe,UAAUC,UAAV,EAAsB;AACnC,MAAIowB,SAASD,QAAQE,QAAR,EAAb;AACA,kBAASluB,IAAT,CAAc,YAAd,EAA4B,SAA5B,EAAuCiuB,MAAvC;AACA,mBAAUrwB,IAAV,CAAeC,UAAf;AACA,MAAIowB,MAAJ,EAAY;AACV,kBAAOrwB,IAAP;AACD;AACD;AACA,gBAAQ/H,QAAR,CAAiB,cAAQqB,SAAR,CAAkBY,KAAnC;;AAEA,SAAOm2B,MAAP;AACD,CAXD;;AAaA;;;;;;AAMAD,QAAQE,QAAR,GAAmB,YAAY;AAC7B,SAAO,CAAC,EAAE,OAAO13B,OAAO2P,OAAP,CAAeS,SAAtB,KAAoC,UAApC,IACN,kBAAWD,SAAX,GAAuBE,aAAvB,CAAqCV,OAArC,CAA6CS,SADzC,CAAR;AAED,CAHD;;AAKA;;;AAGAonB,QAAQvoB,OAAR,GAAkB,YAAY;AAC5B,MAAIwoB,SAAS,CAAC,EAAE,OAAOE,OAAP,KAAmB,WAAnB,IAAkCA,QAAQ/4B,SAAR,CAAkBwR,SAAtD,CAAd;AACA,MAAIqnB,MAAJ,EAAY;AACV,kBAAOxoB,OAAP;AACD;AACD,mBAAUzH,KAAV;AACD,CAND;;AAQA;;;;;;AAMAgwB,QAAQI,SAAR,GAAoB,YAAY;AAC9B,mBAAa5f,QAAb;AACA,kBAAYA,QAAZ;AACA,MAAIxY,SAASiY,UAAT,IAAuB,UAA3B,EAAuC;AACrC;AACA;AACA;AACA,QAAIjY,SAAS0P,mBAAb,EAAkC;AAChC1P,eAAS0P,mBAAT,CACI,kBADJ,EACwBsoB,QAAQI,SADhC,EAC2C,KAD3C;AAED,KAHD,MAGO,IAAIp4B,SAAS63B,WAAb,EAA0B;AAC/B73B,eAAS63B,WAAT,CACI,oBADJ,EAC0BG,QAAQI,SADlC;AAED;AACF;AACF,CAfD;AAgBA,IAAIp4B,SAASoP,gBAAb,EAA+B;AAC7BpP,WAASoP,gBAAT,CACI,kBADJ,EACwB4oB,QAAQI,SADhC,EAC2C,KAD3C;AAED,CAHD,MAGO,IAAIp4B,SAAS23B,WAAb,EAA0B;AAC/B33B,WAAS23B,WAAT,CACM,oBADN,EAC4BK,QAAQI,SADpC;AAED;AACDJ,QAAQI,SAAR;;kBAEeJ,O;;;;;;;;;;;;;;;;;;ACnFf;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AApBA;AACA;AACA;AACA;;AAEA;;;;;;AAiBA,IAAIK,gBAAgB,EAApB;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CAA,cAAcC,OAAd;;AAEA;;;;;;;;;;;;AAYAD,cAAcvV,IAAd,GAAqB,UAASzf,GAAT,EAAcoe,WAAd,EAA2B;AAC9C,kBAAS9X,KAAT,CAAe,mBAAf,EAAoCtG,GAApC,EAAyCoe,WAAzC;AACA,MAAInB,UAAUmB,eAAe,oCAAsC,EAAnE;AACAnB,UAAQjW,MAAR,GAAiB,CAAC,CAACiW,QAAQjW,MAAR,IAAkB,KAAnB,IAA4B,EAA7B,EAAiCkuB,WAAjC,EAAjB;AACAjY,UAAQhO,IAAR,GAAegO,QAAQhO,IAAR,IAAgB,SAA/B;AACA;AACA,MAAIkmB,aAAa,cAAO1mB,QAAP,CAAgB,cAAOK,QAAP,CAAgB9O,GAAhB,EAAqBid,QAAQhO,IAA7B,CAAhB,CAAjB;AACA,kBAAS3I,KAAT,CAAe,kBAAf,EAAmC6uB,UAAnC;AACA;AACA;AACA,MAAI93B,SAAS,EAAb;AACA;AACAA,SAAO,QAAP,IAAmB83B,UAAnB;AACA93B,SAAO,WAAP,IAAsB,cAAQH,GAAR,EAAtB;AACA;AACA;AACA;AACAG,SAAO,YAAP,IAAuBA,OAAO,WAAP,CAAvB;AACA,MAAI+3B,WAAWJ,cAAcK,YAAd,CACbr1B,GADa,EAEbid,QAAQ/V,OAFK,EAGb,IAHa,EAIb+V,QAAQhO,IAJK,EAKb,KALa,CAAf;AAOA;AACA;AACA,MAAIqmB,SAASN,cAAcO,eAAd,CAA8BH,QAA9B,EAAwCnY,QAAQ/V,OAAhD,CAAb;AACA7J,SAAO,eAAP,IAA0B,CAAC,CAACi4B,MAAF,IAAYA,OAAOrmB,IAAP,IAAe,UAArD;AACA5R,SAAO,WAAP,IAAsB,CAAC,CAACi4B,MAAxB;AACA,MAAIA,MAAJ,EAAY;AACV,QAAIzU;AACF,mEAAiEyU,OAAOzU,QAD1E;AAEA;AACA;AACA,QAAI2U,cAAc,cAAQ/5B,IAAR,CAChBu5B,cAAcS,wBADE,EAEhB,IAFgB,EAGhBz1B,GAHgB,EAIhBid,OAJgB,EAKhB5f,MALgB,EAMhBi4B,OAAOzzB,GANS,EAOhBgf,QAPgB,CAAlB;AASA;AACA;AACA;AACA,oBAASiT,KAAT,CAAe0B,WAAf;AACA;AACA,WAAO,IAAP;AACD,GApBD,MAoBO;AACL,oBAASlvB,KAAT,CAAe,iBAAf;AACA,QAAIoZ,UAAU,EAAd;AACA;AACA,QAAIgW,gBAAgB,8BAAgC,iBAAU3zB,GAAV,CAClD,iBADkD,CAApD;AAGA,QAAI2zB,aAAJ,EAAmB;AACjB,WAAK,IAAI7zB,GAAT,IAAgB6zB,aAAhB,EAA+B;AAC7B,YAAIzzB,QAAQyzB,cAAc7zB,GAAd,CAAZ;AACA;AACA;AACA6d,gBAAQ7d,GAAR,IAAeI,SAAS,IAAT,GAAgB,EAAhB,GAAqBA,KAApC;AACD;AACF;AACD;AACA,QAAIgb,QAAQyC,OAAZ,EAAqB;AACnB,WAAK,IAAI7d,GAAT,IAAgBob,QAAQyC,OAAxB,EAAiC;AAC/B,YAAIzd,QAAQgb,QAAQyC,OAAR,CAAgB7d,GAAhB,CAAZ;AACA;AACA;AACA6d,gBAAQ7d,GAAR,IAAeI,SAAS,IAAT,GAAgB,EAAhB,GAAqBA,KAApC;AACD;AACF;AACD;AACA;AACA,QAAIgb,QAAQS,OAAR,IAAmB,IAAvB,EAA6B;AAC3BgC,cAAQ,eAAR,IAA2BzC,QAAQS,OAAnC;AACD;AACD,QAAIT,QAAQ/V,OAAR,IAAmB,IAAvB,EAA6B;AAC3BwY,cAAQ,gBAAR,IAA4BzC,QAAQ/V,OAApC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIyuB,WAAW,sBAAwB,iBAAU5zB,GAAV,CACrC,4BADqC,CAAvC;AAGA,QAAI4zB,QAAJ,EAAc;AACZjW,cAAQ,eAAR,IAA2BiW,SAASjwB,OAAT,CAAiB,UAAjB,EAA6BuX,QAAQhO,IAArC,CAA3B;AACAyQ,cAAQ,QAAR,IAAoB,kBAApB;AACD;AACD,QAAIkW,WAAW,IAAIZ,cAAca,SAAlB,EAAf;AACA,QAAIC,gBAAgB,cAAQr6B,IAAR,CAClBu5B,cAAce,qBADI,EAElB,IAFkB,EAGlB/1B,GAHkB,EAIlB41B,QAJkB,CAApB;AAMA,QAAII,cAAc,cAAQv6B,IAAR,CAChBu5B,cAAciB,mBADE,EAEhB,IAFgB,EAGhBj2B,GAHgB,EAIhBid,OAJgB,EAKhB5f,MALgB,EAMhBu4B,QANgB,CAAlB;AAQA,QAAIM,iBAAiB,cAAQz6B,IAAR,CACnBu5B,cAAcmB,sBADK,EAEnB,IAFmB,EAGnBn2B,GAHmB,EAInBid,OAJmB,EAKnB5f,MALmB,EAMnBu4B,QANmB,CAArB;AAQA,QAAIQ,UAAU;AACZ1W,eAASA,OADG;AAEZ2W,iBAAW,qBAAuB,iBAAUt0B,GAAV,CAAc,iBAAd,CAFtB;AAGZu0B,iBAAWR,aAHC;AAIZS,eAASP,WAJG;AAKZ5D,cAAQ8D,cALI;AAMZM,iBAAWN;AANC,KAAd;;AASA,QAAIjZ,QAAQiF,eAAZ,EAA6B;AAC3BkU,cAAQlU,eAAR,GAA0BjF,QAAQiF,eAAlC;AACD;;AAED;AACA;AACA;AACA;AACA;AACA,QAAI,iBAAUngB,GAAV,CAAc,6BAAd,CAAJ,EAAkD;AAChDq0B,cAAQK,YAAR,GAAuB,MAAvB;AACD;AACD,QAAIjX,GAAJ;AACA,QAAIvC,QAAQjW,MAAR,IAAkB,MAAtB,EAA8B;AAC5BwY,YAAM,cAAUkX,IAAV,CAAevB,UAAf,EAA2BlY,QAAQ6C,QAAnC,EAA6CsW,OAA7C,CAAN;AACD,KAFD,MAEO;AACL5W,YAAM,cAAUzd,GAAV,CAAcozB,UAAd,EAA0BiB,OAA1B,CAAN;AACD;AACD;AACA,WAAO5W,GAAP;AACD;AACF,CAnKD;;AAqKA;;;;;;;;;;;;AAYAwV,cAAcS,wBAAd,GAAyC,UACvCz1B,GADuC,EAEvCid,OAFuC,EAGvC5f,MAHuC,EAIvC+3B,QAJuC,EAKvCvU,QALuC,EAMvC;AACA,kBAASva,KAAT,CAAe,uCAAf,EAAwDtG,GAAxD,EAA6D6gB,QAA7D;AACA,MAAI8V,cAAc,KAAlB;AACA;AACA;AACAt5B,SAAO,eAAP,IAA0BA,OAAO,aAAP,IAAwB,cAAQH,GAAR,EAAlD;AACA;AACA;AACA,MAAI+f,QAAQhO,IAAR,IAAgB,iBAAUjK,UAAV,CAAqBiY,QAAQhO,IAA7B,EAAmC,UAAnC,CAApB,EAAoE;AAClE5R,WAAO,iBAAP,IAA4BA,OAAO,WAAP,CAA5B;AACA;AACA;AACA;AACA,QAAI,CAAC,iBAAU0E,GAAV,CAAc,eAAd,CAAL,EAAqC;AACnC,sBAAS4O,MAAT,CAAgBykB,QAAhB;AACA;AACAuB,oBAAc,IAAd;AACD;AACF;AACD,MAAI1Z,QAAQ0C,MAAR,IAAkBkB,SAAS,MAAT,KAAoB,WAA1C,EAAuD;AACrD,QAAIM,QAAQN,SAAS,OAAT,CAAZ;AACA,oBAASvgB,IAAT,CAAc6gB,KAAd,EAAqB,UAASC,IAAT,EAAe;AAClC,UAAI,CAACA,KAAK,QAAL,CAAL,EAAqB;AACnBA,aAAK,QAAL,IAAiB,EAAjB;AACD;AACDA,WAAK,QAAL,EAAe,WAAf,IAA8B,CAAC,CAAC/jB,OAAO,WAAP,CAAhC;AACA+jB,WAAK,QAAL,EAAe,eAAf,IAAkC,CAAC,CAAC/jB,OAAO,eAAP,CAApC;AACA4f,cAAQ0C,MAAR,CAAe3f,GAAf,EAAoBohB,IAApB;AACD,KAPD;AAQD;AACD4T,gBAAc4B,KAAd,CAAoB52B,GAApB,EAAyBid,OAAzB,EAAkC5f,MAAlC,EAA0CwjB,QAA1C,EAAoD8V,WAApD;AACD,CArCD;;AAuCA;;;;;;;;;AASA3B,cAAce,qBAAd,GAAsC,UAAS/1B,GAAT,EAAc41B,QAAd,EAAwBpW,GAAxB,EAA6B;AACjE,kBAASlZ,KAAT,CAAe,oCAAf,EAAqDtG,GAArD,EAA0Dwf,GAA1D;AACA,MAAIiX,eAAejX,IAAIqX,iBAAJ,CAAsB,qBAAtB,KAAgD,EAAnE;AACA,MAAI9V,YAAY,iBAAUlc,QAAV,CAAmB4xB,aAAarwB,WAAb,EAAnB,EAA+C,WAA/C,CAAhB;AACA,kBAASE,KAAT,CAAe,iBAAf,EAAkC,CAACya,YAAY,EAAZ,GAAiB,MAAlB,IAA4B,WAA9D;AACA6U,WAAS7U,SAAT,GAAqBA,SAArB;AACD,CAND;;AAQA;;;;;;;;;;;;;;AAcAiU,cAAciB,mBAAd,GAAoC,UAClCj2B,GADkC,EAElCid,OAFkC,EAGlC5f,MAHkC,EAIlCu4B,QAJkC,EAKlCpW,GALkC,EAMlC2E,KANkC,EAOlCT,aAPkC,EAQlC;AACA,kBAASpd,KAAT,CAAe,kCAAf,EAAmDtG,GAAnD,EAAwD;AACtDuR,WAAOqkB,SAASrkB,KADsC;AAEtD4S,WAAOA;AAF+C,GAAxD;AAIA;AACA,MAAI,CAACyR,SAAS7U,SAAd,EAAyB;AACvB,oBAASza,KAAT,CAAe,qCAAf;AACA;AACD;AACD,MAAI+P,OAAOuf,SAASrkB,KAAT,GAAiB4S,KAA5B;AACA,MAAI2S,MAAJ;AACA,MAAI;AACFA,aAAS,mBAAetT,KAAf,CAAqBnN,IAArB,EAA2B,IAA3B,EAAiCqN,aAAjC,CAAT;AACD,GAFD,CAEE,OAAOnnB,GAAP,EAAY;AACZ,oBAAS+J,KAAT,CAAe,uBAAf,EAAwC+P,IAAxC;AACAmJ,QAAI+B,KAAJ;AACA,QAAItE,QAAQ2C,OAAZ,EAAqB;AACnB3C,cAAQ2C,OAAR,CAAgB5f,GAAhB,EAAqBzD,GAArB,EAA0BijB,GAA1B;AACD;AACD;AACD;AACD,MAAIvC,QAAQ0C,MAAZ,EAAoB;AAClB,oBAASrf,IAAT,CAAcw2B,OAAO3V,KAArB,EAA4B,UAASC,IAAT,EAAe;AACzC,sBAAS9a,KAAT,CAAe,iBAAf,EAAkC8a,IAAlC;AACA,UAAI,CAACA,KAAK,QAAL,CAAL,EAAqB;AACnBA,aAAK,QAAL,IAAiB,EAAjB;AACD;AACDA,WAAK,QAAL,EAAe,WAAf,IAA8B,CAAC,CAAC/jB,OAAO,WAAP,CAAhC;AACA+jB,WAAK,QAAL,EAAe,eAAf,IAAkC,CAAC,CAAC/jB,OAAO,eAAP,CAApC;AACA4f,cAAQ0C,MAAR,CAAe3f,GAAf,EAAoBohB,IAApB;AACD,KARD;AASD;AACDwU,WAASrf,QAAT,GAAoBqf,SAASrf,QAAT,CAAkByS,MAAlB,CAAyB8N,OAAO3V,KAAhC,CAApB;AACAyU,WAASrkB,KAAT,GAAiBulB,OAAOvlB,KAAxB;AACD,CA3CD;;AA6CA;;;;;;;;;;;AAWAyjB,cAAcmB,sBAAd,GAAuC,UACrCn2B,GADqC,EAErCid,OAFqC,EAGrC5f,MAHqC,EAIrCu4B,QAJqC,EAKrCpW,GALqC,EAMrC;AACA,MAAIA,IAAIiX,YAAJ,IAAoB,MAAxB,EAAgC;AAC9B,oBAASnwB,KAAT,CAAe,qCAAf,EAAsDtG,GAAtD,EAA2Dwf,IAAIqB,QAA/D;AACD,GAFD,MAEO;AACL,oBAASva,KAAT,CAAe,qCAAf,EAAsDtG,GAAtD,EAA2D;AACzDuR,aAAOqkB,SAASrkB,KADyC;AAEzDgF,gBAAUiJ,IAAIuX;AAF2C,KAA3D;AAID;;AAED;AACA,MAAIvX,IAAI,QAAJ,CAAJ,EAAmB;AACjB,SAAK,IAAIwX,CAAT,IAAcxX,IAAI,QAAJ,CAAd,EAA6B;AAC3BniB,aAAO25B,CAAP,IAAYxX,IAAI,QAAJ,EAAcwX,CAAd,CAAZ;AACD;AACF;;AAED;AACA,MAAIxX,IAAI,gBAAJ,CAAJ,EAA2B;AACzB,QAAIvC,QAAQhO,IAAR,IAAgB,MAApB,EAA4B;AAC1B;AACA,WAAK,IAAIpN,GAAT,IAAgB2d,IAAI,gBAAJ,CAAhB,EAAuC;AACrCniB,eAAOwE,GAAP,IAAc2d,IAAI,gBAAJ,EAAsB3d,GAAtB,CAAd;AACD;AACF,KALD,MAKO,IAAI1E,OAAOC,WAAP,IAAsBD,OAAOC,WAAP,CAAmBC,MAA7C,EAAqD;AAC1D;AACA;AACA,UAAIC,kBAAkBH,OAAOC,WAAP,CAAmBC,MAAnB,CAA0BC,eAAhD;;AAEA;AACA;AACA;AACA,UAAI25B,YAAY35B,kBAAkBkiB,IAAI,gBAAJ,EAAsB,WAAtB,CAAlC;AACA,UAAIyX,aAAa55B,OAAO,WAAP,CAAjB,EAAsC;AACpC,aAAK,IAAI65B,MAAT,IAAmB1X,IAAI,gBAAJ,CAAnB,EAA0C;AACxC,cAAIvd,QAAQud,IAAI,gBAAJ,EAAsB0X,MAAtB,CAAZ;AACA,cACEj1B,UAAU6G,SAAV,KACC,iBAAUzD,QAAV,CAAmB6xB,MAAnB,EAA2B,OAA3B,KACC,iBAAU7xB,QAAV,CAAmB6xB,MAAnB,EAA2B,KAA3B,CADD,IAECA,UAAU,WAHZ,CADF,EAKE;AACA75B,mBAAO65B,MAAP,IAAiB55B,kBAAkBouB,KAAKC,KAAL,CAAW1pB,KAAX,CAAnC;AACD;AACF;AACF;AACF;AACF;;AAED;AACA;AACA,MAAIgb,QAAQhO,IAAR,IAAgB,MAApB,EAA4B;AAC1B5R,WAAO,iBAAP,IAA4BA,OAAO,WAAP,CAA5B;AACD;;AAED,MAAIu4B,SAASrf,QAAT,CAAkB3V,MAAtB,EAA8B;AAC5B;AACA;AACA;AACAg1B,aAASrkB,KAAT,GAAiB,iBAAU/L,IAAV,CAAeowB,SAASrkB,KAAxB,CAAjB;AACA,QAAIqkB,SAASrkB,KAAb,EAAoB;AAClB;AACAyjB,oBAAciB,mBAAd,CACEj2B,GADF,EAEEid,OAFF,EAGE5f,MAHF,EAIEu4B,QAJF,EAKEpW,GALF,EAME,EANF,EAOE,IAPF;AASD;AACF;;AAED,MAAI2B,KAAJ;AACA,MAAI3B,IAAIiX,YAAJ,IAAoB,MAAxB,EAAgC;AAC9B;AACA;AACA,QAAI,CAACjX,IAAIqB,QAAT,EAAmB;AACjB,sBAASva,KAAT,CAAe,uBAAf;AACA,UAAI2W,QAAQ2C,OAAZ,EAAqB;AACnB3C,gBAAQ2C,OAAR,CAAgB5f,GAAhB,EAAqB,IAAIyN,KAAJ,CAAU,8BAAV,CAArB,EAAgE+R,GAAhE;AACD;AACD;AACD;AACD2B,YAAQ,mBAAemD,OAAf,CAAuB,gBAAS/iB,OAAT,CAAiBie,IAAIqB,QAArB,CAAvB,CAAR;AACD,GAXD,MAWO;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAI;AACF,UAAIiW,SAAS,mBAAetT,KAAf,CAAqBhE,IAAIuX,YAAzB,CAAb;AACA5V,cAAQ2V,OAAO3V,KAAf;AACD,KAHD,CAGE,OAAO5kB,GAAP,EAAY;AACZ,sBAAS+J,KAAT,CAAe,uBAAf;AACA,UAAI2W,QAAQ2C,OAAZ,EAAqB;AACnB3C,gBAAQ2C,OAAR,CAAgB5f,GAAhB,EAAqBzD,GAArB,EAA0BijB,GAA1B;AACD;AACD;AACD;AACF;;AAED,MAAIvC,QAAQ0C,MAAR,IAAkBwB,MAAMvgB,MAAN,GAAe,CAArC,EAAwC;AACtC;AACA;AACA;AACA;AACA;AACA,SAAK,IAAIF,IAAIk1B,SAASrf,QAAT,CAAkB3V,MAA/B,EAAuCF,IAAIygB,MAAMvgB,MAAjD,EAAyDF,GAAzD,EAA8D;AAC5D,sBAAS4F,KAAT,CAAe,iBAAf,EAAkC6a,MAAMzgB,CAAN,CAAlC;AACA,UAAI0gB,OAAOD,MAAMzgB,CAAN,CAAX;AACA,UAAI,CAAC0gB,KAAK,QAAL,CAAL,EAAqB;AACnBA,aAAK,QAAL,IAAiB,EAAjB;AACD;AACDA,WAAK,QAAL,EAAe,WAAf,IAA8B,CAAC,CAAC/jB,OAAO,WAAP,CAAhC;AACA+jB,WAAK,QAAL,EAAe,eAAf,IAAkC,CAAC,CAAC/jB,OAAO,eAAP,CAApC;AACA4f,cAAQ0C,MAAR,CAAe3f,GAAf,EAAoBohB,IAApB;AACD;AACF;AACD,MAAIP,QAAJ;AACA,MAAIM,MAAMvgB,MAAN,GAAe,CAAnB,EAAsB;AACpB,QAAIu2B,SAAJ;AACA,oBAAS72B,IAAT,CAAc6gB,KAAd,EAAqB,UAASC,IAAT,EAAe;AAClC,UAAIA,KAAK,WAAL,CAAJ,EAAuB;AACrB+V,oBAAY/V,KAAK,WAAL,CAAZ;AACD;AACF,KAJD;AAKAP,eAAW,wCAA0C;AACnDM,aAAOA,KAD4C;AAEnDlS,YAAM;AAF6C,KAArD;AAIA,QAAIkoB,SAAJ,EAAe;AACbtW,eAAS,WAAT,IAAwBsW,SAAxB;AACD;AACF,GAdD,MAcO,IAAIhW,MAAMvgB,MAAN,IAAgB,CAApB,EAAuB;AAC5BigB,eAAW,qCAAuCM,MAAM,CAAN,CAAlD;AACD,GAFM,MAEA;AACLN,eAAW,qCAAuC,EAAlD;AACD;AACDmU,gBAAc4B,KAAd,CAAoB52B,GAApB,EAAyBid,OAAzB,EAAkC5f,MAAlC,EAA0CwjB,QAA1C,EAAoD,IAApD;AACD,CArJD;;AAuJA;;;;;;;;;;;;AAYAmU,cAAc4B,KAAd,GAAsB,UAAS52B,GAAT,EAAcid,OAAd,EAAuB5f,MAAvB,EAA+BwjB,QAA/B,EAAyCuW,KAAzC,EAAgD;AACpE,kBAAS9wB,KAAT,CAAe,mBAAf,EAAoCtG,GAApC,EAAyCid,OAAzC,EAAkD5f,MAAlD,EAA0DwjB,QAA1D,EAAoEuW,KAApE;AACA,MAAIA,SAASna,QAAQjW,MAAR,IAAkB,MAA/B,EAAuC;AACrC;AACA,QAAIouB,WAAWJ,cAAcK,YAAd,CACbr1B,GADa,EAEbid,QAAQ/V,OAFK,EAGb2Z,SAAS,WAAT,CAHa,EAIb5D,QAAQhO,IAJK,EAKb,IALa,CAAf;AAOA,QAAImmB,QAAJ,EAAc;AACZvU,eAAS,UAAT,IAAuBuU,QAAvB;AACAJ,oBAAcqC,eAAd,CAA8BjC,QAA9B,EAAwCvU,QAAxC,EAAkD5D,QAAQhO,IAAR,IAAgB,EAAlE;AACD;AACF;AACD;AACA4R,WAAS,QAAT,IAAqBxjB,MAArB;AACA,MAAI4f,QAAQ4C,SAAZ,EAAuB;AACrB5C,YAAQ4C,SAAR,CAAkB7f,GAAlB,EAAuB6gB,QAAvB;AACD;AACF,CArBD;;AAuBA;;;;;;;;;;;;AAYAmU,cAAcK,YAAd,GAA6B,UAC3Br1B,GAD2B,EAE3B4c,WAF2B,EAG3B0a,aAH2B,EAI3BC,eAJ2B,EAK3BC,OAL2B,EAM3B;AACA;AACA,MAAI3a,cAAc,cAAOpO,QAAP,CAAgBzO,GAAhB,CAAlB;AACA,MAAIo1B,QAAJ;AACA,MAAI,iBAAUrzB,GAAV,CAAc,eAAd,CAAJ,EAAoC;AAClC;AACA;AACA;AACAqzB,eAAWvY,WAAX;AACD,GALD,MAKO;AACL;AACA;AACA;AACA,QACE0a,mBAAmB,eAAnB,IACAA,mBAAmB,kBAFrB,EAGE;AACA;AACAnC,iBAAW,aAAavY,WAAxB;AACD,KAND,MAMO,IAAI0a,mBAAmB,UAAvB,EAAmC;AACxC;AACAnC,iBAAW,CAACoC,UAAU,UAAV,GAAuB,WAAxB,IAAuC3a,WAAlD;AACD,KAHM,MAGA,IAAI0a,mBAAmB,UAAvB,EAAmC;AACxC;AACAnC,iBAAWoC,UAAU,cAAc3a,WAAxB,GAAsC,EAAjD;AACD;AACF;;AAED,MAAID,eAAe0a,iBAAiB,KAApC,EAA2C;AACzClC,gBAAY,eAAexY,WAA3B;AACD,GAFD,MAEO,IAAIA,eAAe0a,iBAAiB,MAApC,EAA4C;AACjDlC,gBAAY,eAAe,cAAOvmB,IAAP,CAAY+N,WAAZ,CAA3B;AACD;;AAED,SAAOwY,YAAY,EAAnB;AACD,CAzCD;;AA2CA;;;;;;;;;AASAJ,cAAcO,eAAd,GAAgC,UAASH,QAAT,EAAmBxY,WAAnB,EAAgC;AAC9D,MAAIpL,OAAO,EAAX;AACA,MAAIoL,WAAJ,EAAiB;AACfpL,SAAKpV,IAAL,CAAUg5B,WAAW,YAAX,GAA0BxY,WAApC;AACApL,SAAKpV,IAAL,CAAUg5B,WAAW,YAAX,GAA0B,cAAOvmB,IAAP,CAAY+N,WAAZ,CAApC;AACD;AACDpL,OAAKpV,IAAL,CAAUg5B,QAAV;;AAEA,MAAIqC,aAAa,IAAjB;;AAEA;AACA,kBAAS32B,IAAT,CAAc0Q,IAAd,EAAoB,UAAS3P,GAAT,EAAc;AAChC,QAAIsG,MAAM,gBAASpG,GAAT,CAAaF,GAAb,CAAV;AACA,QAAIsG,GAAJ,EAAS;AACPsvB,mBAAa;AACX51B,aAAKA,GADM;AAEXgf,kBAAU1Y,IAAI,UAAJ,CAFC;AAGX8G,cAAM9G,IAAI,MAAJ;AAHK,OAAb;AAKD;AACD,WAAO,CAAC,CAACA,GAAT;AACD,GAVD;;AAYA,SAAOsvB,UAAP;AACD,CAxBD;;AA0BA;;;;;;;;;AASAzC,cAAcqC,eAAd,GAAgC,UAASjC,QAAT,EAAmBvU,QAAnB,EAA6B5R,IAA7B,EAAmC;AACjE,MAAIwoB,aAAa;AACf5W,cAAUA,QADK;AAEf5R,UAAMA;AAFS,GAAjB;AAIA,kBAASjN,GAAT,CACEozB,QADF,EAEEqC,UAFF;AAGE,uBAAuB,iBAAU11B,GAAV,CAAc,gBAAd,CAHzB;AAKD,CAVD;;AAYA;;;;;;;AAOAizB,cAAca,SAAd,GAA0B,YAAW;AACnC;;;;AAIA,OAAK9U,SAAL,GAAiB,KAAjB;AACA;;;;;;AAMA,OAAKxP,KAAL,GAAa,EAAb;AACA;;;;AAIA,OAAKgF,QAAL,GAAgB,EAAhB;AACD,CAlBD;;kBAoBeye,a;;;;;;;;;;;;;;;;;;AC5rBf;;;;AACA;;;;;;AAbA;AACA;AACA;AACA;;AAEA;;;;;;;AAUA,IAAI0C,gBAAgB,EAApB;AACA;;AAEA;;;;;;AAMAA,cAAcrP,UAAd,GAA2B,UAAUhR,IAAV,EAAgB;AACzC;AACA,MAAIpI,OAAO,mBAAewD,IAAf,CAAoB+C,GAA/B;AACA;AACA6B,SAAO,gBAAS9V,OAAT,CAAiB8V,IAAjB,CAAP;AACA,kBAAS/W,IAAT,CAAc+W,IAAd,EAAoB,UAAUrX,GAAV,EAAe;AACjC;AACA;AACA;AACA;AACA,uBAAesV,QAAf,CAAwBrG,IAAxB,EAA8BjP,GAA9B,EAAmC,IAAnC,EALiC,CAKS;AAC3C,GAND;AAOD,CAZD;;kBAce03B,a;;;;;;;;;;;;;;;;;;ACzBf;;AACA,IAAIC,YAAY,EAAhB;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;AAoCAA,UAAU1C,OAAV;;AAEA;;;;AAIA0C,UAAUC,QAAV;;AAEA;;;;;;;AAOAD,UAAU51B,GAAV,GAAgB,UAAS/B,GAAT,EAAcoe,WAAd,EAA2B;AACzC,SAAOuZ,UAAUlY,IAAV,CAAe,KAAf,EAAsBzf,GAAtB,EAA2B,IAA3B,EAAiCoe,WAAjC,CAAP;AACD,CAFD;;AAIA;;;;;;;;AAQAuZ,UAAUjB,IAAV,GAAiB,UAAS12B,GAAT,EAAcmN,IAAd,EAAoBiR,WAApB,EAAiC;AAChD,SAAOuZ,UAAUlY,IAAV,CAAe,MAAf,EAAuBzf,GAAvB,EAA4BmN,IAA5B,EAAkCiR,WAAlC,CAAP;AACD,CAFD;;AAIA;;;;;;;;;AASAuZ,UAAUlY,IAAV,GAAiB,UAASzY,MAAT,EAAiBhH,GAAjB,EAAsBmN,IAAtB,EAA4BiR,WAA5B,EAAyC;AACxD,MAAInB,UAAUmB,eAAe,EAA7B;AACA,MAAIyZ,UAAU,KAAd;AACA,MAAIC,SAAS,CAAb;AACA,MAAI1H,KAAJ;;AAEA,MAAI5Q,MAAM,IAAIuY,cAAJ,EAAV;AACAvY,MAAIkN,IAAJ,CAAS1lB,MAAT,EAAiBhH,GAAjB,EAAsB,IAAtB;AACAwf,MAAI,QAAJ,IAAgB,EAAhB;;AAEA;AACA,MAAIwY,YAAYxY,IAAI+B,KAApB;AACA/B,MAAI+B,KAAJ,GAAY,YAAW;AACrB5G,iBAAayV,KAAb;AACA5Q,QAAI9K,kBAAJ,GAAyB,IAAzB;AACAsjB,cAAU/7B,IAAV,CAAeujB,GAAf;AACD,GAJD;;AAMAA,MAAI9K,kBAAJ,GAAyB,YAAW;AAClC,QAAIrX,SAASmiB,IAAI,QAAJ,CAAb;AACA,QAAIA,IAAI5K,UAAJ,IAAkB+iB,UAAUxjB,KAAV,CAAgB8jB,gBAAtC,EAAwD;AACtD;AACA56B,aAAO,eAAP,IAA0BA,OAAO,eAAP,KAA2B,cAAQH,GAAR,EAArD;AACA;AACA26B,gBAAUF,UAAUO,UAAV,CAAqB1Y,GAArB,CAAV;AACA,UAAIvC,QAAQqZ,SAAZ,EAAuB;AACrBrZ,gBAAQqZ,SAAR,CAAkB9W,GAAlB;AACD;AACF,KARD,MAQO,IAAIA,IAAI5K,UAAJ,IAAkB+iB,UAAUxjB,KAAV,CAAgBC,OAAtC,EAA+C;AACpD,UAAIyjB,WAAW5a,QAAQsZ,OAAvB,EAAgC;AAC9B,YAAIpS,QAAQ3E,IAAIuX,YAAJ,CAAiBtnB,SAAjB,CAA2BqoB,MAA3B,CAAZ;AACAA,iBAAStY,IAAIuX,YAAJ,CAAiBn2B,MAA1B;AACAqc,gBAAQsZ,OAAR,CAAgB/W,GAAhB,EAAqB2E,KAArB;AACD;AACF,KANM,MAMA,IAAI3E,IAAI5K,UAAJ,IAAkB+iB,UAAUxjB,KAAV,CAAgBlW,IAAtC,EAA4C;AACjD;AACAZ,aAAO,aAAP,IAAwBA,OAAO,aAAP,KAAyB,cAAQH,GAAR,EAAjD;AACA;AACA;AACA,UAAIC,OAAOC,WAAP,IAAsBD,OAAOC,WAAP,CAAmB+6B,gBAA7C,EAA+D;AAC7D;AACA;AACA3Y,YAAI,gBAAJ,IAAwBriB,OAAOC,WAAP,CAAmB+6B,gBAAnB,CAAoCn4B,GAApC,EAAyCo4B,GAAzC,EAAxB;AACD;AACD;AACA;AACA,UAAIP,WAAW5a,QAAQsZ,OAAnB,IAA8B/W,IAAIuX,YAAJ,CAAiBn2B,MAAjB,GAA0Bk3B,MAA5D,EAAoE;AAClE,YAAI3T,QAAQ3E,IAAIuX,YAAJ,CAAiBtnB,SAAjB,CAA2BqoB,MAA3B,CAAZ;AACAA,iBAAStY,IAAIuX,YAAJ,CAAiBn2B,MAA1B;AACAqc,gBAAQsZ,OAAR,CAAgB/W,GAAhB,EAAqB2E,KAArB;AACD;AACDxJ,mBAAayV,KAAb;AACA,UAAInT,QAAQmV,MAAZ,EAAoB;AAClBnV,gBAAQmV,MAAR,CAAe5S,GAAf;AACD;AACF;AACF,GAtCD;;AAwCA;AACA;AACA;AACA;AACA,MAAI,kBAAkBA,GAAlB,IAAyBvC,QAAQwZ,YAAR,IAAwB,MAArD,EAA6D;AAC3DjX,QAAIiX,YAAJ,GAAmB,MAAnB;AACD;;AAED,MAAIxZ,QAAQiF,eAAZ,EAA6B;AAC3B1C,QAAI0C,eAAJ,GAAsBjF,QAAQiF,eAA9B;AACD;;AAED;AACA;AACA,MAAImW,aAAa,cAAcl7B,MAAd,IAAwBgQ,gBAAgB6kB,QAAzD;AACA,MAAIsG,+BAA+BtxB,UAAU,MAAV,IAAoB,CAACqxB,UAAxD;AACA,MAAIpb,QAAQyC,OAAZ,EAAqB;AACnB,SAAK,IAAI7d,GAAT,IAAgBob,QAAQyC,OAAxB,EAAiC;AAC/BF,UAAI+Y,gBAAJ,CAAqB12B,GAArB,EAA0Bob,QAAQyC,OAAR,CAAgB7d,GAAhB,CAA1B;AACA,UAAIA,IAAIuE,WAAJ,MAAqB,cAAzB,EAAyC;AACvCkyB,uCAA+B,KAA/B;AACD;AACF;AACF;AACD,MAAIA,4BAAJ,EAAkC;AAChC9Y,QAAI+Y,gBAAJ,CAAqB,cAArB,EAAqC,mCAArC;AACD;;AAED;AACA,MAAItb,QAAQoZ,SAAR,GAAoB,CAAxB,EAA2B;AACzBjG,YAAQpf,WAAW,YAAW;AAC5BwO,UAAI+B,KAAJ;AACA,UAAItE,QAAQuZ,SAAZ,EAAuB;AACrBvZ,gBAAQuZ,SAAR,CAAkBhX,GAAlB;AACD;AACF,KALO,EAKLvC,QAAQoZ,SALH,CAAR;AAMD;;AAED;AACA7W,MAAI,QAAJ,EAAc,YAAd,IAA8B,cAAQtiB,GAAR,EAA9B;AACAsiB,MAAIC,IAAJ,CAAStS,IAAT;;AAEA,SAAOqS,GAAP;AACD,CArGD;;AAuGA;;;;;;;;AAQAmY,UAAUO,UAAV,GAAuB,UAAS1Y,GAAT,EAAc;AACnC,MAAIA,IAAIiX,YAAJ,IAAoB,MAAxB,EAAgC;AAC9B,WAAO,KAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAI+B,WAAWhZ,IAAIqX,iBAAJ,CAAsB,mBAAtB,KAA8C,EAA7D;AACA,MAAI2B,SAASpyB,WAAT,GAAuBlF,OAAvB,CAA+B,SAA/B,IAA4C,CAAC,CAAjD,EAAoD;AAClD,WAAO,IAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA,MAAIu3B,cAAcjZ,IAAIqX,iBAAJ,CAAsB,gBAAtB,CAAlB;AACA,MAAI6B,YAAYv7B,OAAOw7B,MAAP,IAAiBA,OAAOD,SAAxB,IAAqCC,OAAOD,SAAP,EAArD;AACA,MAAIE,aAAaF,aAAaA,UAAUG,iBAAxC;AACA,SAAO,CAAC,EAAEJ,eAAeG,UAAjB,CAAR;AACD,CAvBD;;AAyBA;;;AAGAjB,UAAUxjB,KAAV,GAAkB;AAChB2kB,UAAQ,CADQ;AAEhBC,UAAQ,CAFQ;AAGhBd,oBAAkB,CAHF;AAIhB7jB,WAAS,CAJO;AAKhBnW,QAAM;AALU,CAAlB;kBAOe05B,S;;;;;;;;;;;ACzOf,kBAAkB,8F;;;;;;;;;;;;;;;;;ACAlB;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,E;;;;;;;;;;;;;;;ACpBA;AACA;AACA;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iGAA4E,kBAAkB,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gCAAgC;AACvF;AACA;AACA,KAAK;AACL;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACpCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA","file":"globalA.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/dawn/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 161);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 55122e76540a70933034","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 0\n// module chunks = 0 1 2 3 4 5 6","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks.js\n// module id = 1\n// module chunks = 0 1 2 3 4 5","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 3\n// module chunks = 0 1 2 3 4 5","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 4\n// module chunks = 0 1 2 3 4 5 6","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 5\n// module chunks = 0 1 2 3 4 5 6","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-iobject.js\n// module id = 6\n// module chunks = 0 1 2 3 4 5","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 7\n// module chunks = 0 1 2 3 4 5 6","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 8\n// module chunks = 0 1 2 3 4 5 6","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 9\n// module chunks = 0 1 2 3 4 5 6","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 10\n// module chunks = 0 1 2 3 4 5 6","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 11\n// module chunks = 0 1 2 3 4 5 6","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iterators.js\n// module id = 12\n// module chunks = 0 1 2 3 4 5","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_uid.js\n// module id = 13\n// module chunks = 0 1 2 3 4 5","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 14\n// module chunks = 0 1 2 3 4 5 6","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_defined.js\n// module id = 15\n// module chunks = 0 1 2 3 4 5","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-to-string-tag.js\n// module id = 16\n// module chunks = 0 1 2 3 4 5","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared-key.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-integer.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 19\n// module chunks = 0 1 2 3 4 5 6","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-bug-keys.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_library.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared.js\n// module id = 22\n// module chunks = 0 1 2 3 4 5","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys.js\n// module id = 24\n// module chunks = 0 1 2 3 4 5","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_cof.js\n// module id = 25\n// module chunks = 0 1 2 3 4 5","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 26\n// module chunks = 0 1 2 3 4 5 6","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-pie.js\n// module id = 27\n// module chunks = 0 1 3 4 5","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks-define.js\n// module id = 28\n// module chunks = 0 1 3 4 5","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks-ext.js\n// module id = 29\n// module chunks = 0 1 3 4 5","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 30\n// module chunks = 0 1 2 3 4 5 6","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview The base SPF functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// A general note on the SPF framework.\n//\n// SPF is an independent framework intended to be compiled using the Closure\n// Compiler, but it has no dependencies on the Closure Library.  Each file has\n// goog.provide and goog.require statements for automatic dependency management\n// by the compiler, but these primitives are processed and removed during\n// compilation.  For testing and development, these functions are stubbed in\n// stub.js.\n//\n// A general note on browser compatibility.\n//\n// SPF aims to be broadly compatible with the most common browsers, as long as\n// that support does not require an inordinate amount of code.  In addition,\n// the primary functionality of SPF -- pushstate-based navigation -- requires\n// advanced browser functionality not found in older browsers.  In practice,\n// this means that the common library functions are supported in IE 8+, with\n// all functions supported in IE 10+.\n\n// goog.provide('spf');\n\nlet spfBase = {}\n\n/** @define {boolean} Compiler flag to build the bootstrap script loader. */\nvar SPF_BOOTLOADER = false\n\n/** @define {boolean} Compiler flag to include debugging code. */\nvar SPF_DEBUG = false\n\n/** @define {boolean} Compiler flag to include tracing code. */\nvar SPF_TRACING = false\n\n/**\n * Creates a new function that, when called, has its `this` set to the\n * provided value, with a given sequence of arguments preceding any provided\n * when the new function is called.\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} self Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked on.\n * @template T\n */\nspfBase.bind = function (fn, self, var_args) {\n  var args = Array.prototype.slice.call(arguments, 2)\n  return function () {\n    // Clone the args and append additional ones.\n    var newArgs = args.slice()\n    newArgs.push.apply(newArgs, arguments)\n    return fn.apply(self, newArgs)\n  }\n}\n\n/**\n * Executes a function inside a try/catch to gracefully handle failures.\n *\n * @param {Function} fn Function to be executed.\n * @param {...*} var_args Arguments to apply to the function.\n * @return {*} The function result or Error if execution failed.\n */\nspfBase.execute = function (fn, var_args) {\n  if (fn) {\n    var args = Array.prototype.slice.call(arguments, 1)\n    try {\n      return fn.apply(null, args)\n    } catch (err) {\n      return err\n    }\n  }\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {spfBase.EventName} name The custom event name.\n * @param {!Object=} opt_detail The custom event detail (data).\n * @return {boolean} False if the event was canceled.\n */\nspfBase.dispatch = function (name, opt_detail) {\n  if (document.createEvent) {\n    var evt = document.createEvent('CustomEvent')\n    var bubbles = true\n    var cancelable = true\n    evt.initCustomEvent(name, bubbles, cancelable, opt_detail)\n    return document.dispatchEvent(evt)\n  }\n  return true\n}\n\n/**\n * Gets the current timestamp.\n *\n * @return {number} A value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.  On browsers\n *     that support DOMHighResTimestamp, this value is a floating point number;\n *     otherwise, it is an integer.\n */\nspfBase.now = (function () {\n  if (window.performance && window.performance.timing &&\n      window.performance.now) {\n    return function () {\n      return (window.performance.timing.navigationStart +\n              window.performance.now())\n    }\n  }\n  return function () {\n    return (new Date()).getTime()\n  }\n})()\n\n/**\n * Gets a UID.\n *\n * @return {number} A unique number.\n */\nspfBase.uid = function () {\n  // Special case to not use spfBase.state directly to avoid circular dependencies.\n  var state = (window['_spf_state'] = window['_spf_state'] || {})\n  var uid = parseInt(state['uid'], 10) || 0\n  uid++\n  return (state['uid'] = uid)\n}\n\n/**\n * An empty no-op function.\n */\nspfBase.nullFunction = function () {}\n\n/**\n * @enum {string}\n */\nspfBase.EventName = {\n  CLICK: 'spfclick',\n  CSS_BEFORE_UNLOAD: 'spfcssbeforeunload',\n  CSS_UNLOAD: 'spfcssunload',\n  DONE: 'spfdone',\n  ERROR: 'spferror',\n  HISTORY: 'spfhistory',\n  JS_BEFORE_UNLOAD: 'spfjsbeforeunload',\n  JS_UNLOAD: 'spfjsunload',\n  PART_DONE: 'spfpartdone',\n  PART_PROCESS: 'spfpartprocess',\n  PROCESS: 'spfprocess',\n  READY: 'spfready',\n  RELOAD: 'spfreload',\n  REQUEST: 'spfrequest'\n}\n\n/** Type definition for a parsed script resource in a SPF response fragment.\n *\n * @typedef {{\n *   url: (string|undefined),\n *   text: (string|undefined),\n *   name: (string|undefined),\n *   async: (boolean|undefined)\n * }}\n */\nspfBase.ScriptResource\n\n/** Type definition for a parsed style resource in a SPF response fragment.\n *\n * @typedef {{\n *   url: (string|undefined),\n *   text: (string|undefined),\n *   name: (string|undefined)\n * }}\n */\nspfBase.StyleResource\n\n/** Type definition for a parsed link resource in a SPF response fragment.\n *\n * @typedef {{\n *   url: (string|undefined),\n *   rel: (string|undefined)\n * }}\n */\nspfBase.LinkResource\n\n/**\n * Type definition for a fragment of a SPF response.  Either a string of HTML or\n * an object with the resources parsed out of the HTML.\n *\n * @typedef {string|{\n *   html: (string|undefined),\n *   scripts: (Array.<spf.ScriptResource>|undefined),\n *   styles: (Array.<spf.StyleResource>|undefined),\n *   links: (Array.<spf.LinkResource>|undefined)\n * }}\n */\nspfBase.ResponseFragment\n\n/**\n * Type definition for a single SPF response object.\n * - attr: Map of Element IDs to maps of attibute names to attribute values\n *       to set on the Elements.\n * - body: Map of Element IDs to HTML strings containing content with which\n *       to update the Elements.\n * - cacheKey: Key used to cache this response.\n * - cacheType: String of the type of caching to use for this response.\n * - foot: HTML string containing <script> tags of JS to execute.\n * - head: HTML string containing <link> and <style> tags of CSS to install.\n * - name: String of the general name of this type of response. This will be\n *       used to generate \"from\" and \"to\" CSS classes for animation.\n * - redirect: String of a URL to request instead.\n * - reload: Boolean to indicate the page should be reloaded.\n * - timing: Map of timing attributes to timestamp numbers.\n * - title: String of the new Document title.\n * - url: String of the correct URL for the current request. This will replace\n *       the current URL in history.\n *\n * @typedef {{\n *   attr: (Object.<string, Object.<string, string>>|undefined),\n *   body: (Object.<string, spf.ResponseFragment>|undefined),\n *   cacheKey: (string|undefined),\n *   cacheType: (string|undefined),\n *   foot: (spf.ResponseFragment|undefined),\n *   head: (spf.ResponseFragment|undefined),\n *   name: (string|undefined),\n *   redirect: (string|undefined),\n *   reload: (boolean|undefined),\n *   timing: (Object.<string, number>|undefined),\n *   title: (string|undefined),\n *   url: (string|undefined)\n * }}\n */\nspfBase.SingleResponse\n\n/**\n * Type definition for a multipart SPF response object.\n * - cacheKey: Key used to cache this response.\n * - cacheType: String of the type of caching to use for this response.\n * - parts: List of response objects.\n * - timing: Map of timing attributes to timestamp numbers.\n * - type: The string \"multipart\".\n *\n * @typedef {{\n *   cacheKey: (string|undefined),\n *   cacheType: (string|undefined),\n *   parts: (Array.<spf.SingleResponse>|undefined),\n *   timing: (Object.<string, number>|undefined),\n *   type: string\n * }}\n */\nspfBase.MultipartResponse\n\n/**\n * Type definition for the configuration options for requesting a URL.\n * - headers: optional map of headers to send with the request.\n * - method: optional method with which to send the request; defaults to \"GET\".\n * - onDone: optional callback when either repsonse is done being processed.\n * - onError: optional callback if an error occurs.\n * - onPartDone: optional callback when part of a multipart response is done\n *       being processed.\n * - onPartProcess: optional callback when part of a multipart response will be\n *       pocessed.\n * - onProcess: optional callback when a single response will be processed.\n * - onRequest: optional callback when a request will be made.\n * - postData: optional data to send with a request.  Only used if the method\n *       is set to \"POST\".\n * - withCredentials: optional flag to send credentials if true.\n *\n * @typedef {{\n *   headers: (Object.<string>|undefined),\n *   method: (string|undefined),\n *   onDone: (function(spf.EventDetail)|undefined),\n *   onError: (function(spf.EventDetail)|undefined),\n *   onPartDone: (function(spf.EventDetail)|undefined),\n *   onPartProcess: (function(spf.EventDetail)|undefined),\n *   onProcess: (function(spf.EventDetail)|undefined),\n *   onRequest: (function(spf.EventDetail)|undefined),\n *   postData: (ArrayBuffer|Blob|Document|FormData|null|string|undefined),\n *   withCredentials: (boolean|undefined)\n * }}\n */\nspfBase.RequestOptions\n\n/**\n * Type definition for custom event detail (data), also used for callbacks.\n * - err: optional error that occurred; defined for \"error\" events\n * - name: optional name of the script or stylesheet that will be unloaded;\n *       defined for \"jsbeforeunload\", \"jsunload\", \"cssbeforeunload\",\n *       and \"cssunload\" events.\n * - part: optional part of a multipart response; defined for \"partprocess\"\n *       and \"partdone\" events.\n * - previous: optional URL of the previous page; defined for \"history\" and\n *       \"request\" events.\n * - reason: optional reason code and text; defined for the \"reload\" event.\n * - referer: optional URL of the referer page; defined for \"history\" and\n *       \"request\" events.\n * - response: optional complete response; defined for \"process\" and\n *       \"done\" events.\n * - target: optional target element; defined for \"click\" events.\n * - url: optional URL of the request; defined for \"error\", \"reload\", \"click\",\n *       \"history\", \"request\", \"partprocess\", \"partdone\", \"process\", and \"done\"\n *       events - or - optional URL of the script/stylesheet that will be\n *       unloaded; defined for \"jsbeforeunload\", \"jsunload\", \"cssbeforeunload\",\n *       and \"cssunload\" events.\n *\n * @typedef {{\n *   err: (Error|undefined),\n *   name: (string|undefined),\n *   part: (spf.SingleResponse|undefined),\n *   previous: (string|undefined),\n *   reason: (string|undefined),\n *   referer: (string|undefined),\n *   target: (Element|undefined),\n *   response: (spf.SingleResponse|spf.MultipartResponse|undefined),\n *   url: (string|undefined)\n * }}\n */\nspfBase.EventDetail\n\n/**\n * Type definition for a task scheduler optionally used by spf.tasks.\n * - addTask: Function to add a new task to the scheduler. It returns a key\n *       which can be used to cancel its execution.\n * - cancelTask: Function which cancels a previously scheduled task.\n *\n * @typedef {{\n *   addTask: (function(!Function): number),\n *   cancelTask: (function(number))\n * }}\n */\nspfBase.TaskScheduler\n\nexport {SPF_DEBUG, SPF_BOOTLOADER, SPF_TRACING, spfBase}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/base.js","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 32\n// module chunks = 0 1 2 3 4 5 6","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-define.js\n// module id = 33\n// module chunks = 0 1 2 3 4 5","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 34\n// module chunks = 0 1 2 3 4 5 6","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-create.js\n// module id = 35\n// module chunks = 0 1 2 3 4 5","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys-internal.js\n// module id = 36\n// module chunks = 0 1 2 3 4 5","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_redefine.js\n// module id = 37\n// module chunks = 0 1 2 3 4 5","export let rorParams = {\n  // Up-to-date Cross-Site Request Forgery token\n  csrfToken: () => document.querySelector('meta[name=csrf-token]').getAttribute('content'),\n  // URL param that must contain the CSRF token\n  csrfParam: () => document.querySelector('meta[name=csrf-param]').getAttribute('content'),\n  // Determines if the request is a cross domain request.\n  isCrossDomain: url => {\n    let originAnchor = document.createElement('a')\n    originAnchor.href = location.href\n    let urlAnchor = document.createElement('a')\n\n    try {\n      urlAnchor.href = url\n      // This is a workaround to a IE bug.\n      urlAnchor.href = urlAnchor.href\n\n      // If URL protocol is false or is a string containing a single colon\n      // *and* host are false, assume it is not a cross-domain request\n      // (should only be the case for IE7 and IE compatibility mode).\n      // Otherwise, evaluate protocol and host of the URL against the origin\n      // protocol and host.\n      return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) ||\n        (originAnchor.protocol + '//' + originAnchor.host ===\n          urlAnchor.protocol + '//' + urlAnchor.host))\n    } catch (e) {\n      // If there is an error parsing the URL, assume it is crossDomain.\n      return true\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/common/csrf.js","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gopn.js\n// module id = 40\n// module chunks = 0 1 3 4 5","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gops.js\n// module id = 41\n// module chunks = 0 1 3 4 5","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-length.js\n// module id = 43\n// module chunks = 0 1 2 3 4 5","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_html.js\n// module id = 44\n// module chunks = 0 1 2 3 4 5","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dps.js\n// module id = 45\n// module chunks = 0 1 2 3 4 5","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-object.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.string.iterator.js\n// module id = 47\n// module chunks = 0 1 2 3 4 5","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_add-to-unscopables.js\n// module id = 48\n// module chunks = 0 1 2 3 4 5","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-includes.js\n// module id = 49\n// module chunks = 0 1 2 3 4 5","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iobject.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-create.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-step.js\n// module id = 52\n// module chunks = 0 1 2 3 4 5","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gpo.js\n// module id = 53\n// module chunks = 0 1 2 3 4 5","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_string-at.js\n// module id = 54\n// module chunks = 0 1 2 3 4 5","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-absolute-index.js\n// module id = 55\n// module chunks = 0 1 2 3 4 5","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.iterator.js\n// module id = 56\n// module chunks = 0 1 2 3 4 5","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/web.dom.iterable.js\n// module id = 58\n// module chunks = 0 1 2 3 4 5","/**\n * @fileoverview Array manipulation functions.\n *\n */\n\n// goog.provide('spfArray');\n\nimport {spfBase, SPF_BOOTLOADER} from '../base'\nlet spfArray = {}\n\n/**\n * @typedef {Array|NodeList|Arguments|{length: number}}\n */\nspfArray.ArrayLike\n\n/**\n * Compatible Array#forEach implementation.\n *\n * @param {Array.<ITEM>|spfArray.ArrayLike} arr The array.\n * @param {?function(this:THIS, ITEM, number, ?) : ?} fn The function to\n *   execute for each item.  The function is executed with three arguments:\n *   the item value, the item index, and the array.\n * @param {THIS=} opt_obj The value to use as \"this\" in the function.\n * @template THIS, ITEM\n */\nspfArray.each = function (arr, fn, opt_obj) {\n  // When built for the bootloader, optimize for size over speed.\n  if (!SPF_BOOTLOADER && arr.forEach) {\n    arr.forEach(fn, opt_obj)\n    return\n  }\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (i in arr) {\n      fn.call(opt_obj, arr[i], i, arr)\n    }\n  }\n}\n\n/**\n * Compatible Array#every implementation.\n *\n * @param {Array.<ITEM>|spfArray.ArrayLike} arr The array.\n * @param {?function(this:THIS, ITEM, number, ?) : boolean} fn The function to\n *   execute for each item.  The function is executed with three arguments:\n *   the item value, the item index, and the array; it should return true\n *   or false.\n * @param {THIS=} opt_obj The value to use as \"this\" in the function.\n * @return {boolean} Whether the result of every execution was truthy.\n * @template THIS, ITEM\n */\nspfArray.every = function (arr, fn, opt_obj) {\n  // When built for the bootloader, optimize for size over speed.\n  if (!SPF_BOOTLOADER && arr.every) {\n    return arr.every(fn, opt_obj)\n  }\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (i in arr && !fn.call(opt_obj, arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Compatible Array#some implementation.\n *\n * @param {Array.<ITEM>|spfArray.ArrayLike} arr The array.\n * @param {?function(this:THIS, ITEM, number, ?) : boolean} fn The function to\n *   execute for each item.  The function is executed with three arguments:\n *   the item value, the item index, and the array; it should return true\n *   or false.\n * @param {THIS=} opt_obj The value to use as \"this\" in the function.\n * @return {boolean} Whether the result of any execution was truthy.\n * @template THIS, ITEM\n */\nspfArray.some = function (arr, fn, opt_obj) {\n  // When built for the bootloader, optimize for size over speed.\n  if (!SPF_BOOTLOADER && arr.some) {\n    return arr.some(fn, opt_obj)\n  }\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (i in arr && fn.call(opt_obj, arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Compatible Array#filter implementation.\n *\n * @param {Array.<ITEM>|spfArray.ArrayLike} arr The array.\n * @param {?function(this:THIS, ITEM, number, ?) : RESULT} fn The function to\n *   execute for each item.  The function is executed with three arguments:\n *   the item value, the item index, and the array; it should return the\n *   new result.\n * @param {THIS=} opt_obj The value to use as \"this\" in the function.\n * @return {!Array.<RESULT>} A new array of filtered results.\n * @template THIS, ITEM, RESULT\n */\nspfArray.filter = function (arr, fn, opt_obj) {\n  // When built for the bootloader, optimize for size over speed.\n  if (!SPF_BOOTLOADER && arr.filter) {\n    return arr.filter(fn, opt_obj)\n  }\n  var res = []\n  spfArray.each(arr, function (a, i, arr) {\n    if (fn.call(opt_obj, a, i, arr)) {\n      res.push(a)\n    }\n  })\n  return res\n}\n\n/**\n * Compatible Array#indexOf implementation.\n *\n * @param {Array.<ITEM>|spfArray.ArrayLike} arr The array.\n * @param {ITEM} val The value to find.\n * @param {number=} opt_fromIndex The starting index to search from.\n * @return {number} The index of the first matching element.\n * @template ITEM\n */\nspfArray.indexOf = function (arr, val, opt_fromIndex) {\n  if (!SPF_BOOTLOADER && arr.indexOf) {\n    return arr.indexOf(val, opt_fromIndex)\n  }\n  var start = opt_fromIndex || 0\n  for (var i = start; i < arr.length; i++) {\n    if (i in arr && arr[i] === val) {\n      return i\n    }\n  }\n  return -1\n}\n\n/**\n * Compatible Array#map implementation.\n *\n * @param {Array.<ITEM>|spfArray.ArrayLike} arr The array.\n * @param {?function(this:THIS, ITEM, number, ?) : RESULT} fn The function to\n *   execute for each item.  The function is executed with three arguments:\n *   the item value, the item index, and the array; it should return the\n *   new result.\n * @param {THIS=} opt_obj The value to use as \"this\" in the function.\n * @return {Array.<RESULT>} A new array of mapped results.\n * @template THIS, ITEM, RESULT\n */\nspfArray.map = function (arr, fn, opt_obj) {\n  // When built for the bootloader, optimize for size over speed.\n  if (!SPF_BOOTLOADER && arr.map) {\n    return arr.map(fn, opt_obj)\n  }\n  var res = []\n  res.length = arr.length\n  spfArray.each(arr, function (a, i, arr) {\n    res[i] = fn.call(opt_obj, a, i, arr)\n  })\n  return res\n}\n\n/**\n * Converts to an array if needed.\n *\n * @param {?} val The value.\n * @return {Array} An array.\n */\nspfArray.toArray = function (val) {\n  return spfArray.isArray(val) ? val : [val]\n}\n\n/**\n * Simple Array.isArray implementation.\n *\n * @param {?} val Value to test.\n * @return {boolean} Whether the value is an array.\n */\nspfArray.isArray = function (val) {\n  // When built for the bootloader, optimize for size over complete accuracy.\n  if (SPF_BOOTLOADER) {\n    // This test will fail if a fake object like \"{push: 1}\" is passed in, but\n    // for the bootloader, this is an acceptable trade off.\n    return !!(val && val.push)\n  }\n  return Object.prototype.toString.call(val) == '[object Array]'\n}\n\nexport default spfArray\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/array/array.js","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for handling the SPF state.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfState');\n\nlet spfState = {}\n\n/**\n * Checks whether a current state value exists.\n *\n * @param {spfState.Key} key The state key.\n * @return {boolean} Whether the state value exists.\n */\nspfState.has = function (key) {\n  return key in spfState.values_\n}\n\n/**\n * Gets a current state value.\n *\n * @param {spfState.Key} key The state key.\n * @return {*} The state value.\n */\nspfState.get = function (key) {\n  return spfState.values_[key]\n}\n\n/**\n * Sets a current state value.\n *\n * @param {spfState.Key} key The state key.\n * @param {T} value The state value.\n * @return {T} The state value.\n * @template T\n */\nspfState.set = function (key, value) {\n  spfState.values_[key] = value\n  return value\n}\n\n/**\n * @enum {string}\n */\nspfState.Key = {\n  ASYNC_DEFERS: 'async-defers',\n  ASYNC_LISTENER: 'async-listener',\n  CACHE_COUNTER: 'cache-counter',\n  CACHE_MAX: 'cache-max',\n  CACHE_STORAGE: 'cache-storage',\n  CONFIG_VALUES: 'config',\n  HISTORY_CALLBACK: 'history-callback',\n  HISTORY_ERROR_CALLBACK: 'history-error-callback',\n  HISTORY_IGNORE_POP: 'history-ignore-pop',\n  HISTORY_INIT: 'history-init',\n  HISTORY_LISTENER: 'history-listener',\n  HISTORY_TIMESTAMP: 'history-timestamp',\n  HISTORY_URL: 'history-url',\n  NAV_COUNTER: 'nav-counter',\n  NAV_INIT: 'nav-init',\n  NAV_INIT_TIME: 'nav-init-time',\n  NAV_CLICK_LISTENER: 'nav-listener',\n  NAV_MOUSEDOWN_LISTENER: 'nav-mousedown-listener',\n  NAV_SCROLL_LISTENER: 'nav-scroll-listener',\n  NAV_SCROLL_TEMP_POSITION: 'nav-scroll-position',\n  NAV_SCROLL_TEMP_URL: 'nav-scroll-url',\n  NAV_PREFETCHES: 'nav-prefetches',\n  NAV_PROMOTE: 'nav-promote',\n  NAV_PROMOTE_TIME: 'nav-promote-time',\n  NAV_REQUEST: 'nav-request',\n  PUBSUB_SUBS: 'ps-s',\n  RESOURCE_NAME: 'rsrc-n',\n  RESOURCE_PATHS_PREFIX: 'rsrc-p-',\n  RESOURCE_STATUS: 'rsrc-s',\n  RESOURCE_URL: 'rsrc-u',\n  SCRIPT_DEPS: 'js-d',\n  SCRIPT_URL: 'js-u',\n  TASKS_UID: 'uid'\n}\n\n/**\n * Current state values.  Globally exported to maintain continuity\n * across revisions.\n * @private {Object}\n */\nspfState.values_ = {}\nspfState['_spf_state'] = spfState.values_\n\nexport default spfState\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/state.js","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/typeof.js\n// module id = 61\n// module chunks = 0 1 3 4 5","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_meta.js\n// module id = 62\n// module chunks = 0 1 3 4 5","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for handling the SPF config.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport spfState from './state'\nlet spfConfig = {}\n\n/**\n * Type definition for a SPF config value.\n *\n * Function type temporarily needed for experimental-html-handler.\n * TODO(philharnish): Remove \"Function\".\n *\n * @typedef {string|number|boolean|Function|null}\n */\nspfConfig.Value\n\n/**\n * Default configuration values.\n * @type {!Object.<spfConfig.Value>}\n */\nspfConfig.defaults = {\n  'animation-class': 'fnpu-animate',\n  'animation-duration': 425,\n  'cache-lifetime': 10 * 60 * 1000,  // 10 minute cache lifetime (ms).\n  'cache-max': 50,  // 50 items.\n  'cache-unified': false,\n  'link-class': 'fnpu-link',\n  'nolink-class': 'fnpu-nolink',\n  'navigate-limit': 20,  // 20 navigations per session.\n  'navigate-lifetime': 24 * 60 * 60 * 1000,  // 1 day session lifetime (ms).\n  'reload-identifier': null,  // Always a param, no '?' needed.\n  'request-timeout': 0,  // No request timeout.\n  'url-identifier': '?fnpu=__type__'\n}\n\n/**\n * Initialize the configuration with an optional object.  If values are not\n * provided, the defaults are used if they exist.\n *\n * @param {Object.<spfConfig.Value>=} opt_config Optional configuration object.\n */\nspfConfig.init = function (opt_config) {\n  var config = opt_config || {}\n  // Set primary configs; each has a default.\n  for (var key in spfConfig.defaults) {\n    var value = (key in config) ? config[key] : spfConfig.defaults[key]\n    spfConfig.set(key, value)\n  }\n  // Set advanced and experimental configs; none have defaults.\n  for (var key in config) {\n    if (!(key in spfConfig.defaults)) {\n      spfConfig.set(key, config[key])\n    }\n  }\n}\n\n/**\n * Checks whether a current configuration value exists.\n *\n * @param {string} name The configuration name.\n * @return {boolean} Whether the configuration value exists.\n */\nspfConfig.has = function (name) {\n  return name in spfConfig.values\n}\n\n/**\n * Gets a current configuration value.\n *\n * @param {string} name The configuration name.\n * @return {spfConfig.Value|undefined} The configuration value.\n */\nspfConfig.get = function (name) {\n  return spfConfig.values[name]\n}\n\n/**\n * Sets a current configuration value.\n *\n * @param {string} name The configuration name.\n * @param {spfConfig.Value} value The configuration value.\n * @return {spfConfig.Value} The configuration value.\n */\nspfConfig.set = function (name, value) {\n  spfConfig.values[name] = value\n  return value\n}\n\n/**\n * Removes all data from the config.\n */\nspfConfig.clear = function () {\n  for (var key in spfConfig.values) {\n    delete spfConfig.values[key]\n  }\n}\n\n/**\n * The config storage object.\n * @type {!Object.<spfConfig.Value>}\n */\nspfConfig.values = {}\n\n// Automatic initialization for spfConfig.values.\nif (!spfState.has(spfState.Key.CONFIG_VALUES)) {\n  spfState.set(spfState.Key.CONFIG_VALUES, spfConfig.values)\n}\nspfConfig.values = /** @type {!Object.<spfConfig.Value>} */ (\n    spfState.get(spfState.Key.CONFIG_VALUES))\n\nexport default spfConfig\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/config.js","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview String manipulation functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport {spfBase, SPF_BOOTLOADER} from '../base'\nlet spfString = {}\n\n// goog.provide('spfString');\n\n// goog.require('spf');\n\n/**\n * Checks whether a string contains a given substring.\n *\n * @param {string} str The string to test.\n * @param {string} substr The substring to test for.\n * @return {boolean} True if `str` contains `substr`.\n */\nspfString.contains = function (str, substr) {\n  return str.indexOf(substr) != -1\n}\n\n/**\n * Fast prefix-checker.\n *\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @param {number=} opt_offset Offset from index 0 at which to check.\n * @return {boolean} True if `str` begins with `prefix`.\n */\nspfString.startsWith = function (str, prefix, opt_offset) {\n  var idx = opt_offset || 0\n  return str.lastIndexOf(prefix, idx) == idx\n}\n\n/**\n * Fast suffix-checker.\n *\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\nspfString.endsWith = function (str, suffix) {\n  var l = str.length - suffix.length\n  return l >= 0 && str.indexOf(suffix, l) == l\n}\n\n/**\n * Simple check for if a value is a string.\n *\n * @param {?} val Value to test.\n * @return {boolean} Whether the value is a string.\n */\nspfString.isString = function (val) {\n  // When built for the bootloader, optimize for size over complete accuracy.\n  if (SPF_BOOTLOADER) {\n    // The return value for typeof will be one of the following:\n    // * number\n    // * string\n    // * boolean\n    // * function\n    // * object\n    // * undefined\n    // Match \"string\" to provide an identity test.\n    // This test will fail if a string object like \"new String()\" is passed in,\n    // but for the bootloader, this is an acceptable trade off.\n    return typeof val === 'string'\n  }\n  return Object.prototype.toString.call(val) == '[object String]'\n}\n\n/**\n * Removes leading and trailing whitespace.\n *\n * @param {string} str The string to trim.\n * @return {string} The trimmed string.\n */\nspfString.trim = (function () {\n  if (String.prototype.trim) {\n    return function (str) { return str.trim() }\n  } else {\n    return function (str) { return str.replace(/^\\s+|\\s+$/g, '') }\n  }\n})()\n\n/**\n * Partitions a string by dividing it at the first occurance of a separator and\n * returning an array of 3 parts: the part before the separator, the separator\n * itself, and the part after the separator.  If the separator is not found,\n * the last two items will be empty strings.\n *\n * @param {string} str The string to partition.\n * @param {string} sep The separator.\n * @return {!Array.<string>} The partitioned string result.\n */\nspfString.partition = function (str, sep) {\n  var arr = str.split(sep)\n  var nosep = arr.length == 1\n  return [arr[0], (nosep ? '' : sep), (nosep ? '' : arr.slice(1).join(sep))]\n}\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n *\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\nspfString.hashcode = function (str) {\n  str = str || ''\n  var result = 0\n  for (var i = 0, l = str.length; i < l; ++i) {\n    result = 31 * result + str.charCodeAt(i)\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result %= 0x100000000\n  }\n  return result\n}\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n *\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\nspfString.toSelectorCase = function (str) {\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase()\n}\n\nexport default spfString\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/string/string.js","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/symbol.js\n// module id = 65\n// module chunks = 0 1 3 4 5","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/symbol/iterator.js\n// module id = 66\n// module chunks = 0 1 3 4 5","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/symbol/index.js\n// module id = 67\n// module chunks = 0 1 3 4 5","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/symbol/iterator.js\n// module id = 68\n// module chunks = 0 1 3 4 5","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-keys.js\n// module id = 69\n// module chunks = 0 1 3 4 5","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-array.js\n// module id = 70\n// module chunks = 0 1 3 4 5","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gopd.js\n// module id = 71\n// module chunks = 0 1 3 4 5","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gopn-ext.js\n// module id = 72\n// module chunks = 0 1 3 4 5","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    replacer = args[1];\n    if (typeof replacer == 'function') $replacer = replacer;\n    if ($replacer || !isArray(replacer)) replacer = function (key, value) {\n      if ($replacer) value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.symbol.js\n// module id = 73\n// module chunks = 0 1 3 4 5","require('./_wks-define')('asyncIterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es7.symbol.async-iterator.js\n// module id = 74\n// module chunks = 0 1 3 4 5","require('./_wks-define')('observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es7.symbol.observable.js\n// module id = 75\n// module chunks = 0 1 3 4 5","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Debugging and console logging functions.\n * This module is designed to be removed completely by the compiler\n * for production builds.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfDebug');\n\nimport {spfBase, SPF_DEBUG} from '../base'\n\nlet spfDebug = {}\n\n/**\n * Log to the browser console using \"debug\", the low priority method.\n *\n * @param {...*} var_args Items to log.\n */\nspfDebug.debug = function (var_args) {\n  if (spfDebug.isLevelEnabled(spfDebug.Level.DEBUG)) {\n    spfDebug.log(spfDebug.Level.DEBUG, 'spf', arguments)\n  }\n}\n\n/**\n * Log to the browser console using \"info\", the medium priority method.\n *\n * @param {...*} var_args Items to log.\n */\nspfDebug.info = function (var_args) {\n  if (spfDebug.isLevelEnabled(spfDebug.Level.INFO)) {\n    spfDebug.log(spfDebug.Level.INFO, 'spf', arguments)\n  }\n}\n\n/**\n * Log to the browser console using \"warn\", the high priority method.\n *\n * @param {...*} var_args Items to log.\n */\nspfDebug.warn = function (var_args) {\n  if (spfDebug.isLevelEnabled(spfDebug.Level.WARN)) {\n    spfDebug.log(spfDebug.Level.WARN, 'spf', arguments)\n  }\n}\n\n/**\n * Log to the browser console using \"error\", the critical priority method.\n *\n * @param {...*} var_args Items to log.\n */\nspfDebug.error = function (var_args) {\n  if (spfDebug.isLevelEnabled(spfDebug.Level.ERROR)) {\n    spfDebug.log(spfDebug.Level.ERROR, 'spf', arguments)\n  }\n}\n\n/**\n * Log to the browser console the specified method.  If the method does not\n * exist, fallback to using \"log\" and prefix the message with the intended\n * method.  Note that in the fallback, all logged items will be converted to\n * strings before output for compatibility.\n *\n * @param {string} method The console method to use when logging.\n * @param {string} prefix The string prefix to prepend to the logged items.\n * @param {{length: number}} args List of items to log.\n */\nspfDebug.log = function (method, prefix, args) {\n  if (!SPF_DEBUG || !window.console) {\n    return\n  }\n  args = Array.prototype.slice.call(args)\n  var current = spfBase.now()\n  var overall = spfDebug.formatDuration(spfDebug.start_, current)\n  if (spfDebug.split_) {\n    var split = spfDebug.formatDuration(spfDebug.split_, current)\n    args.unshift(overall + '/' + split + ':')\n  } else {\n    args.unshift(overall + ':')\n  }\n  if (spfDebug.direct_) {\n    args.unshift('[' + prefix + ']')\n    // Note that passing null for execution context throws an Error in Chrome.\n    window.console[method].apply(window.console, args)\n  } else {\n    args.unshift('[' + prefix + ' - ' + method + ']')\n    window.console.log(args.join(' '))\n  }\n}\n\n/**\n * Reset the timer used for logging duration.  Call to log split times\n * since last reset in addition to overall duration.\n */\nspfDebug.reset = function () {\n  spfDebug.split_ = spfBase.now()\n}\n\n/**\n * Formats two millisecond timestamps into a duration string.\n * See {@link spfBase.now} for timestamp generation.\n *\n * @param {number} start The starting millisecond timestamp.\n * @param {number} end The ending millisecond timestamp.\n * @return {string} The formatted duration string.\n */\nspfDebug.formatDuration = function (start, end) {\n  var dur = (end - start) / 1000\n  if (dur.toFixed) {\n    dur = dur.toFixed(3)\n  }\n  return dur + 's'\n}\n\n/**\n * Checks whether a logging level is enabled for output.\n *\n * @param {spfDebug.Level} level The logging level.\n * @return {boolean} True if the logging level is enabled.\n */\nspfDebug.isLevelEnabled = function (level) {\n  return (spfDebug.levels_[level] >= spfDebug.levels_[spfDebug.OUTPUT])\n}\n\n/**\n * The timestamp of when debugging was initialized, for overall duration.\n * @private {number}\n */\nspfDebug.start_ = spfBase.now()\n\n/**\n * The timestamp of when debugging was reset, for split durations.\n * @private {number}\n */\nspfDebug.split_ = 0\n\n/**\n * Whether to support direct console logging.  This mode allows logging of\n * objects directly to the console without casting to a string.\n * Note: IE does not support direct logging, but also does not support the\n * debug method, so this property will be false in IE.\n * @private {boolean}\n */\nspfDebug.direct_ = !!(window.console && window.console.debug)\n\n/**\n * A map of logging output levels to corresponding numeric values.\n * @private {Object.<string, number>}\n * @const\n */\nspfDebug.levels_ = {\n  'debug': 1,\n  'info': 2,\n  'warn': 3,\n  'error': 4\n}\n\n/**\n * The level of logging output, corresponding to browser console logging\n * functions: \"debug\", \"info\", \"warn\", \"error\".\n * @enum {string}\n */\nspfDebug.Level = {\n  DEBUG: 'debug',\n  INFO: 'info',\n  WARN: 'warn',\n  ERROR: 'error'\n}\n\n/**\n * @define {string} OUTPUT is provided to control the level of output\n * from debugging code.  Valid values correspond to browser console logging\n * functions: \"debug\", \"info\", \"warn\", and \"error\", and can be set by the\n * compiler when \"--define spfDebug.OUTPUT='warn'\" or similar is specified.\n */\nspfDebug.OUTPUT = 'debug'\n\nexport default spfDebug\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/debug/debug.js","import {rorParams as RPs} from '../common/csrf'\n/**\n * [handleMethod description]\n * @param  {HTMLElement} link [description]\n * @return {[type]}      [description]\n * Handles \"data-method\" on links such as:\n * <a href=\"/users/5\" data-method=\"delete\" rel=\"nofollow\" data-confirm=\"Are you sure?\">Delete</a>\n */\nexport function handleMethod (link, linkMethod, obj = {}) {\n  var href = link.getAttribute('href'),\n    method = linkMethod,\n    target = link.getAttribute('target'),\n    csrfToken = RPs.csrfToken(),\n    csrfParam = RPs.csrfParam()\n  var paramsObj = {\n    href: href,\n    method: method,\n    target: target,\n    csrfToken: csrfToken,\n    csrfParam: csrfParam\n  }\n  var formEle = createForm(paramsObj, obj)\n  // appendFormToDom(formEle);\n  return formEle\n  // submitForm(formEle);\n}\nfunction createForm (params, obj) {\n  var f = document.createElement('form')\n  f.style.display = 'none'\n  f.setAttribute('method', 'post')\n  f.setAttribute('action', params.href)\n  if (params.target) {\n    f.setAttribute('target', params.target)\n  };\n\n  var i = document.createElement('input')\n  i.setAttribute('type', 'hidden')\n  i.setAttribute('name', '_method')\n  i.setAttribute('value', params.method)\n\n  var s\n  if (params.csrfParam !== undefined &&\n      params.csrfToken !== undefined &&\n      !RPs.isCrossDomain(params.href)) {\n    s = document.createElement('input')\n    s.setAttribute('type', 'hidden')\n    s.setAttribute('name', params.csrfParam)\n    s.setAttribute('value', params.csrfToken)\n  }\n  f.appendChild(i)\n\n  // for (let key in obj.data) {\n  //   if (obj.data.hasOwnProperty(key)) {\n  //     let t = document.createElement('input');\n  //     t.setAttribute('type','hidden');\n  //     t.setAttribute('name','' + obj.ns + '[' + key + ']');\n  //     t.setAttribute('value',obj.data[key]);\n  //     f.appendChild(t);\n  //   }\n  // }\n\n  if (s) {\n    f.appendChild(s)\n  };\n  return f\n}\n\nfunction appendFormToDom (form) {\n  document.body.appendChild(form)\n}\nfunction submitForm (form) {\n  form.submit()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/common/handleMethod2.js","/**\n * @fileoverview Basic DOM manipulation functions.\n *\n */\n\n// goog.provide('spfDom');\n\nimport {spfBase} from '../base'\nlet spfDom = {}\n\n/**\n * Gets nodes matching a selector.\n *\n * Note: IE8 does not support CSS3 selectors, and unsupported browsers will\n * return an empty Array.\n *\n * @param {string} selector Selector to match.\n * @param {(Document|Element)=} opt_root Optional document or element to query.\n * @return {Array.<Node>|NodeList} nodes Matching nodes.\n */\nspfDom.query = function (selector, opt_root) {\n  var root = opt_root || document\n  if (root.querySelectorAll) {\n    return root.querySelectorAll(selector)\n  }\n  return []\n}\n\n/**\n * Inserts a new node before an existing reference node (i.e. as the previous\n * sibling). If the reference node has no parent, then does nothing.\n *\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\nspfDom.insertSiblingBefore = function (newNode, refNode) {\n  refNode.parentNode.insertBefore(newNode, refNode)\n}\n\n/**\n * Inserts a new node after an existing reference node (i.e. as the next\n * sibling). If the reference node has no parent, then does nothing.\n *\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\nspfDom.insertSiblingAfter = function (newNode, refNode) {\n  refNode.parentNode.insertBefore(newNode, refNode.nextSibling)\n}\n\n/**\n * Unpacks an element. That is, removes it and replace it with its children.\n * Does nothing if the element is not in the document.\n *\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children; or undefined, if the element was not in the document\n *     to begin with.\n */\nspfDom.unpackElement = function (element) {\n  var child, parent = element.parentNode\n  if (parent && parent.nodeType != 11) {  // 11 = document fragment\n    // Use IE DOM function (supported by Opera too) if available\n    if (element.removeNode) {\n      return /** @type {Element} */ (element.removeNode(false))\n    } else {\n      // Move all children of the original node up one level.\n      while ((child = element.firstChild)) {\n        parent.insertBefore(child, element)\n      }\n      // Detach the original element.\n      return /** @type {Element} */ (parent.removeChild(element))\n    }\n  }\n}\n\n/**\n * Packs an element. That is, adds a new child and places its previous\n * children inside of the new one.\n *\n * @param {Element} element The element to pack.\n * @param {Element} container The new container of the existing children.\n */\nspfDom.packElement = function (element, container) {\n  if (container) {\n    var child\n    // Move all children of the original node down one level.\n    while ((child = element.firstChild)) {\n      container.appendChild(child)\n    }\n    // Attach the new parent.\n    element.appendChild(container)\n  }\n}\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n *\n * @param {Node|EventTarget} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if\n *     the passed node matches the desired criteria.\n * @param {Node=} opt_parent The DOM node to end with.  If provided, it will\n *     be the highest point in the hierarchy walked.  If not provided, the\n *     full hierarchy will be walked.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\nspfDom.getAncestor = function (element, matcher, opt_parent) {\n  while (element) {\n    if (matcher(element)) {\n      // Found a match, return it.\n      return element\n    }\n    if (opt_parent && element == opt_parent) {\n      // Reached the parent, return null.\n      return null\n    }\n    // Walk up the hierarchy.\n    element = element.parentNode\n  }\n  // Reached the root, return null.\n  return null\n}\n\n/**\n * Set attributes on an element from a map of attribute name/value pairs.\n *\n * NOTE: IE7 and earlier will need HTML attribute names specified as JS\n * properties instead (e.g. set \"bgColor\" as well as \"bgcolor\") and\n * does not support adding inline event handlers (e.g. setting \"onclick\"\n * is unsupported).  Event handlers should be added directly instead.\n *\n * @param {Element} element The element to update.\n * @param {Object.<string, string>} attributes The map of name/value pairs.\n */\nspfDom.setAttributes = function (element, attributes) {\n  for (var name in attributes) {\n    var value = attributes[name]\n    if (name == 'class') {\n      element.className = value\n    } else if (name == 'style') {\n      element.style.cssText = value\n    } else {\n      element.setAttribute(name, value)\n      // Updating the \"value\" attribute of an input via `el.setAttribute` does\n      // not change what is displayed, and assigning directly via `el.value` is\n      // needed.  But, _only_ updating via `el.value` means that calls to\n      // `el.getAttribute` will return the original value.  So, do both.\n      if (name == 'value') {\n        element[name] = value\n      }\n    }\n  }\n}\n\n/**\n * Installs an empty iframe in the page.\n *\n * @param {string=} opt_id Id of the iframe element.\n * @param {Document=} opt_document Content document element.\n * @param {Function=} opt_callback Callback function to execute onload.\n * @return {!HTMLIFrameElement}\n */\nspfDom.createIframe = function (opt_id, opt_document, opt_callback) {\n  var id = opt_id || ''\n  var doc = opt_document || document\n  var iframeEl = doc.createElement('iframe')\n  iframeEl.id = id\n  iframeEl.src = 'javascript:\"\"'\n  iframeEl.style.display = 'none'\n  if (opt_callback) {\n    iframeEl.onload = spfBase.bind(opt_callback, null, iframeEl)\n  }\n  doc.body.appendChild(iframeEl)\n  return /** @type {!HTMLIFrameElement} */ (iframeEl)\n}\n\nexport default spfDom\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/dom/dom.js","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for detecting and creating history entries\n * using the HTML5 history modification API.  It enables browser history\n * (e.g. back/forward) and URL updates without leaving the current page,\n * as long as the url is within the same domain.\n * See {@link http://www.w3.org/TR/html5/history.html}.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfHistory');\n\nimport {spfBase} from '../base'\nimport spfConfig from '../config'\nimport spfDebug from '../debug/debug'\nimport spfDom from '../dom/dom'\nimport spfState from '../state'\n\nlet spfHistory = {}\n\n/**\n * Initialize pushstate-based HTML5 History management.\n *\n * @param {function(string, Object=)} callback The function to handle\n *     a history event. The first parameter will be the URL\n *     the user is browsing to.  The second parameter will be an optional\n *     state object associated with that URL.\n * @param {function(string, Error)} errorCallback The function to handle\n *     errors. The first parameter will be the URL with the error.  The\n *     second parameter will be the error object.\n */\nspfHistory.init = function (callback, errorCallback) {\n  if (!spfState.get(spfState.Key.HISTORY_INIT) && window.addEventListener) {\n    var url = spfHistory.getCurrentUrl_()\n    window.addEventListener('popstate', spfHistory.pop_, false)\n    // Whether history is initialized.\n    spfState.set(spfState.Key.HISTORY_INIT, true)\n    // A callback to handle history events.\n    spfState.set(spfState.Key.HISTORY_CALLBACK, callback)\n    // A callback to handle errors.\n    spfState.set(spfState.Key.HISTORY_ERROR_CALLBACK, errorCallback)\n    // The event listener.\n    spfState.set(spfState.Key.HISTORY_LISTENER, spfHistory.pop_)\n    // The URL of the current history entry, used to detect returning to the\n    // the first state.\n    spfState.set(spfState.Key.HISTORY_URL, url)\n    // The timestamp of the current history entry, used to distinguish\n    // between backward and forward state changes.\n    spfState.set(spfState.Key.HISTORY_TIMESTAMP, spfBase.now())\n    // Set the initial referer to properly send referer on back button.\n    var historyState = { 'spf-referer': document.referrer }\n    try {\n      spfHistory.replace(url, historyState)\n    } catch (err) {\n      // If history.replaceState was null an error will be thrown.\n      if (errorCallback) {\n        errorCallback(url, err)\n      }\n    }\n  }\n}\n\n/**\n * Dispose pushstate-based HTML5 History management.\n */\nspfHistory.dispose = function () {\n  if (spfState.get(spfState.Key.HISTORY_INIT)) {\n    if (window.removeEventListener) {\n      window.removeEventListener('popstate', /** @type {function(Event)} */ (\n          spfState.get(spfState.Key.HISTORY_LISTENER)), false)\n    }\n    spfState.set(spfState.Key.HISTORY_INIT, false)\n    spfState.set(spfState.Key.HISTORY_CALLBACK, null)\n    spfState.set(spfState.Key.HISTORY_ERROR_CALLBACK, null)\n    spfState.set(spfState.Key.HISTORY_LISTENER, null)\n    spfState.set(spfState.Key.HISTORY_URL, null)\n    spfState.set(spfState.Key.HISTORY_TIMESTAMP, 0)\n  }\n}\n\n/**\n * Add a history entry.\n *\n * @param {?string=} opt_url The URL associated with this entry to display in\n *     the browser.  This can be either a relative or an absolute URL, and if\n *     omitted, the current browser URL will be used.\n * @param {Object=} opt_state The state object associated with this history\n *     entry.  When the user returns to this entry, the \"state\" property of the\n *     event will contain a copy of this object.\n * @param {boolean=} opt_doCallback Whether to do the history event callback.\n * @throws {Error} If the state object is too large. For example, Firefox will\n *     pass the object to JSON.stringify and impose a 640k character limit.\n * @throws {Error} If the URL is not in the same domain, a SECURITY_ERR\n *     (code == 18) is thrown.\n * @throws {Error} If window.history.pushState is not a function.\n */\nspfHistory.add = function (opt_url, opt_state, opt_doCallback) {\n  spfDebug.info('history.add ', opt_url)\n  spfHistory.push_(false, opt_url, opt_state, opt_doCallback)\n}\n\n/**\n * Replace the current history entry, merging any newly provided state values\n * with existing ones.\n *\n * @param {?string=} opt_url The URL associated with this entry to display in\n *     the browser.  This can be either a relative or an absolute URL, and if\n *     omitted, the current browser URL will be used.\n * @param {Object=} opt_state The state object associated with this history\n *     entry.  When the user returns to this entry, the \"state\" property of the\n *     event will contain a copy of this object.\n * @param {boolean=} opt_doCallback Whether to do the history event callback.\n * @throws {Error} If the state object is too large. For example, Firefox will\n *     pass the object to JSON.stringify and impose a 640k character limit.\n * @throws {Error} If the URL is not in the same domain, a SECURITY_ERR\n *     (code == 18) is thrown.\n * @throws {Error} If window.history.replaceState is not a function.\n */\nspfHistory.replace = function (opt_url, opt_state, opt_doCallback) {\n  var state = null\n  // Set the existing state values.\n  var currentState = spfHistory.getCurrentState_()\n  if (currentState) {\n    state = {}\n    for (var key in currentState) {\n      state[key] = currentState[key]\n    }\n  }\n  // Update the state values with new ones.\n  if (opt_state) {\n    state = state || {}\n    for (var key in opt_state) {\n      state[key] = opt_state[key]\n    }\n  }\n  spfDebug.info('history.replace ', opt_url)\n  spfHistory.push_(true, opt_url, state, opt_doCallback)\n}\n\n/**\n * Remove the latest history state from the stack.\n * NOTE: If this is called without a state having been pushed, it will result in\n * a back action to the last page. Use with care.\n */\nspfHistory.removeCurrentEntry = function () {\n  spfState.set(spfState.Key.HISTORY_IGNORE_POP, true)\n  window.history.back()\n}\n\n/**\n * See {@link #add} or {@link #replace}.\n *\n * @param {boolean} replace Whether to replace the previous entry.\n * @param {?string=} opt_url The URL associated with this entry.\n * @param {Object=} opt_state The state object associated with this entry.\n * @param {boolean=} opt_doCallback Whether to do the history event callback.\n * @private\n */\nspfHistory.push_ = function (replace, opt_url, opt_state, opt_doCallback) {\n  if (!opt_url && !opt_state) {\n    return\n  }\n  var url = opt_url || spfHistory.getCurrentUrl_()\n  var state = opt_state || {}\n  var timestamp = spfBase.now()\n  spfState.set(spfState.Key.HISTORY_TIMESTAMP, timestamp)\n  state['spf-timestamp'] = timestamp\n  if (replace) {\n    spfHistory.doReplaceState_(state, '', url)\n    spfDebug.debug('    replaceState:  ', 'url=', url, 'state=', state)\n  } else {\n    spfHistory.doPushState_(state, '', url)\n    spfDebug.debug('    pushState:  ', 'url=', url, 'state=', state)\n  }\n  spfState.set(spfState.Key.HISTORY_URL, url)\n  if (opt_doCallback) {\n    var callback = /** @type {function(string, Object=)} */ (\n        spfState.get(spfState.Key.HISTORY_CALLBACK))\n    if (callback) {\n      callback(url, state)\n    }\n  }\n}\n\n/**\n * Handles popstate events when the active history entry changes.\n *\n * @param {Event} evt The popstate event.\n * @private\n */\nspfHistory.pop_ = function (evt) {\n  var url = spfHistory.getCurrentUrl_()\n  spfDebug.info('history.pop ', 'url=', url, 'evt=', evt)\n  // Skip a pop event and reset flag if the ignore state is set.\n  if (spfState.get(spfState.Key.HISTORY_IGNORE_POP)) {\n    spfState.set(spfState.Key.HISTORY_IGNORE_POP, false)\n    return\n  }\n  // Avoid the initial event on first load, and ignore events for history\n  // entries that are not handled by SPF (e.g. when navigating within a page\n  // using links with hash-only URLs, there are no associated states).\n  if (!evt.state) {\n    return\n  }\n  var state = evt.state\n  var timestamp = state['spf-timestamp']\n  // If the URL is the same and a state is present, the browser has left\n  // and returned to first load via back/forward.  In this case, reset\n  // the state to the original.\n  if (url == spfState.get(spfState.Key.HISTORY_URL)) {\n    spfState.set(spfState.Key.HISTORY_TIMESTAMP, timestamp)\n    spfHistory.doReplaceState_(state, '', url)\n    spfDebug.debug('    replaceState:  ', 'url=', url, 'state=', state)\n  } else {\n    var current = parseInt(spfState.get(spfState.Key.HISTORY_TIMESTAMP), 10)\n    state['spf-back'] = (timestamp < current)\n    state['spf-current'] = spfState.get(spfState.Key.HISTORY_URL)\n    spfState.set(spfState.Key.HISTORY_TIMESTAMP, timestamp)\n    spfState.set(spfState.Key.HISTORY_URL, url)\n    var callback = /** @type {function(string, Object=)} */ (\n        spfState.get(spfState.Key.HISTORY_CALLBACK))\n    if (callback) {\n      callback(url, state)\n    }\n  }\n}\n\n/**\n * @return {string} The location href.\n * @private\n */\nspfHistory.getCurrentUrl_ = function () {\n  return window.location.href\n}\n\n/**\n * @return {Object} The current history state object.\n * @private\n */\nspfHistory.getCurrentState_ = function () {\n  return /** @type {Object} */ (window.history.state)\n}\n\n/**\n * @param {*} data New state.\n * @param {string} title The title for a new session history entry.\n * @param {string=} opt_url The URL for a new session history entry.\n * @private\n */\nspfHistory.doPushState_ = function (data, title, opt_url) {\n  // It is common for third party code to interfere with pushState.\n  // This check makes sure that pushState is a function when called to\n  // avoid js errors and a state where the back arrow stops working.\n  var iframe = spfHistory.getIframe()\n  var pushState = iframe.contentWindow.history.pushState\n  if (typeof pushState === 'function') {\n    pushState.call(window.history, data, title, opt_url)\n  } else {\n    throw new Error('history.pushState is not a function.')\n  }\n}\n\n/**\n * @param {*} data New state.\n * @param {string} title The title for a session history entry.\n * @param {string=} opt_url The URL for a new session history entry.\n * @private\n */\nspfHistory.doReplaceState_ = function (data, title, opt_url) {\n  var iframe = spfHistory.getIframe()\n  var replaceState = iframe.contentWindow.history.replaceState\n  if (typeof replaceState === 'function') {\n    replaceState.call(window.history, data, title, opt_url)\n  } else {\n    throw new Error('history.replaceState is not a function')\n  }\n}\n\n/**\n * @return {!HTMLIFrameElement} The history iframe.\n */\nspfHistory.getIframe = function () {\n  var frame = document.getElementById('history-iframe')\n  if (!frame) {\n    frame = spfDom.createIframe('history-iframe')\n  }\n  return /** @type {!HTMLIFrameElement} */ (frame)\n}\n\nexport default spfHistory\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/history/history.js","// Copyright 2013 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview URL manipulation functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n * @suppress {missingProperties}\n */\n\nimport spfArray from '../array/array'\nimport spfConfig from '../config'\nimport spfString from '../string/string'\n\nlet spfUrl = {}\n// goog.provide('spfUrl');\n\n// goog.require('spfArray');\n// goog.require('spfConfig');\n// goog.require('spfString');\n\n/**\n * See {@link https://developer.mozilla.org/en-US/docs/Web/API/URLUtils}.\n *\n * @typedef {{\n *   href: string,\n *   protocol: string,\n *   host: string,\n *   hostname: string,\n *   port: string,\n *   pathname: string,\n *   search: string,\n *   hash: string,\n *   username: string,\n *   password: string,\n *   origin: string\n * }}\n */\nspfUrl.URLUtils\n\n/**\n * Returns a URLUtils compatible object for a given url. For the interface, see\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/URLUtils}.\n *\n * @param {string} url A relative or absolute URL.\n * @return {spfUrl.URLUtils} The URLUtils object.\n */\nspfUrl.utils = function (url) {\n  var aEl = document.createElement('a')\n  // If the URL is relative, IE will not populate host/port parameters.\n  aEl.href = url\n  // Assigning the absolute URL back to the href value solves this IE bug.\n  aEl.href = aEl.href\n  var utils = {\n    href: aEl.href,\n    protocol: aEl.protocol,\n    host: aEl.host,\n    hostname: aEl.hostname,\n    port: aEl.port,\n    pathname: aEl.pathname,\n    search: aEl.search,\n    hash: aEl.hash,\n    username: aEl.username,\n    password: aEl.password\n  }\n  // The origin is the combination of scheme, domain, and port.\n  utils.origin = utils.protocol + '//' + utils.host\n  // IE does not include the leading slash on a path. So if the path is\n  // available, but no leading slash is present, prepend one.\n  if (!utils.pathname || utils.pathname[0] != '/') {\n    utils.pathname = '/' + utils.pathname\n  }\n  return utils\n}\n\n/**\n * Converts a relative URL to absolute based on the current document domain.\n *\n * @param {string} relative A relative URL.\n * @param {boolean=} opt_keepHash  Whether to keep any hash in the URL,\n *     if one exists.  Defaults to false.\n * @return {string} An absolute URL (with hash removed, if possible).\n */\nspfUrl.absolute = function (relative, opt_keepHash) {\n  var utils = spfUrl.utils(relative)\n  return opt_keepHash ? utils.href : spfUrl.unhash(utils.href)\n}\n\n/**\n * Returns the path portion of a given URL.\n *\n * @param {string} url A relative or absolute URL.\n * @return {string} The path portion of the URL.\n */\nspfUrl.path = function (url) {\n  var utils = spfUrl.utils(url)\n  return utils.pathname\n}\n\n/**\n * Returns the origin of a given URL (scheme + domain + port).\n *\n * @param {string} url A relative or absolute URL.\n * @return {string} The origin of the URL.\n */\nspfUrl.origin = function (url) {\n  var utils = spfUrl.utils(url)\n  return utils.origin\n}\n\n/**\n * Adds the SPF identifier to a URL, to be used in requests.  If the\n * identifier contains `__type__` then that value will be replaced\n * with the value of `opt_type`.\n *\n * @param {string} url A URL.\n * @param {string=} opt_type An optional type for identification.\n * @return {string} An identified URL.\n */\nspfUrl.identify = function (url, opt_type) {\n  var ident = /** @type {string} */ (spfConfig.get('url-identifier')) || ''\n  if (ident) {\n    var type = opt_type || ''\n    ident = ident.replace('__type__', type)\n\n    // Split the URL.\n    var hashParts = spfString.partition(url, '#')\n    var queryParts = spfString.partition(hashParts[0], '?')\n    var path = queryParts[0]\n    var querySep = queryParts[1]\n    var queryVal = queryParts[2]\n    var hashSep = hashParts[1]\n    var hashVal = hashParts[2]\n\n    // Inject the identifier.\n    if (spfString.startsWith(ident, '?')) {\n      // If using a query-based identifier, append the identifier to the\n      // existing query string.\n      // For \"?ident\":\n      //     /path -> path?ident\n      //     /path?query -> path?query&ident\n      if (querySep) {\n        ident = ident.replace('?', '&')\n      }\n      queryVal += ident\n    } else if (spfString.startsWith(ident, '.')) {\n      // If using an extension-based identifier, replace the existing\n      // extension with the identifier.  If no extension exists, the\n      // identifier is appended.  However, if the URL specifies a directory\n      // (i.e. it ends with \"/\"), then append \"index\" to the URL first.\n      // For \".ident\":\n      //     /path -> /path.ident\n      //     /path.ext -> /path.ident\n      //     /path/ -> /path/index.ident\n      if (spfString.endsWith(path, '/')) {\n        ident = 'index' + ident\n      } else {\n        var ext = path.lastIndexOf('.')\n        if (ext > -1) {\n          path = path.substring(0, ext)\n        }\n      }\n      path += ident\n    } else {\n      // Finally, if using any other identifier, just append the identifier,\n      // preventing duplicate \"/\" in the URL.\n      // For \"/ident\":\n      //     /path -> /path/ident\n      //     /path/ -> /path/ident\n      // For \"_ident\":\n      //     /path -> /path_ident\n      //     /path/ -> /path/_ident\n      if (spfString.endsWith(path, '/') && spfString.startsWith(ident, '/')) {\n        ident = ident.substring(1)\n      }\n      path += ident\n    }\n\n    // Re-assemble the URL.\n    url = path + querySep + queryVal + hashSep + hashVal\n  }\n  return url\n}\n\n/**\n * Appends the parameters to the url. Any existing parameters or hashes are\n * maintained.\n *\n * @param {string} url A URL.\n * @param {!Object.<string, string>} parameters An object with new parameters\n *    as key/value pairs.\n * @return {string} A new URL with the parameters included.\n */\nspfUrl.appendParameters = function (url, parameters) {\n  var result = spfString.partition(url, '#')\n  url = result[0]\n  var delim = spfString.contains(url, '?') ? '&' : '?'\n  for (var key in parameters) {\n    url += delim + key\n    if (parameters[key]) {\n      url += '=' + parameters[key]\n    }\n    delim = '&'\n  }\n  // Reattach the hash.\n  return url + result[1] + result[2]\n}\n\n/**\n * Removes a list of parameters from a given url.\n *\n * @param {string} url A URL.\n * @param {!Array.<string>} parameters A list of parameter keys to remove.\n * @return {string} A new URL with the parameters removed.\n */\nspfUrl.removeParameters = function (url, parameters) {\n  var result = spfString.partition(url, '#')\n  url = result[0]\n  spfArray.each(parameters, function (param) {\n    // Strip all parameters matching the param key.\n    var regex = new RegExp('([?&])' + param + '(?:=[^&]*)?(?:(?=[&])|$)', 'g')\n    url = url.replace(regex, function (_, delim) {\n      return delim == '?' ? delim : ''\n    })\n  })\n  // Remove an unecessary trailing question marks.\n  if (spfString.endsWith(url, '?')) {\n    url = url.slice(0, -1)\n  }\n  // Reattach the hash.\n  return url + result[1] + result[2]\n}\n\n/**\n * Appends a configurable set of parameters that should persist across URLs.\n *\n * @param {string} url A URL.\n * @return {string} A new URL with the persistent parameters included.\n */\nspfUrl.appendPersistentParameters = function (url) {\n  // Get the param config of the form \"abc=def&foo=bar\"\n  var parameterConfig = spfConfig.get('advanced-persistent-parameters') || ''\n  var result = spfString.partition(url, '#')\n  url = result[0]\n  var delim = spfString.contains(url, '?') ? '&' : '?'\n  // Append the persistent parameters to the URL.\n  url += parameterConfig ? delim + parameterConfig : ''\n  // Reattach the hash.\n  return url + result[1] + result[2]\n}\n\n/**\n * Converts an absolute URL to protocol-relative (e.g. no http: or https:).\n * Has no effect on relative URLs.\n *\n * @param {string} url An absolute URL.\n * @return {string} An protocol-relative URL, if possible.\n */\nspfUrl.unprotocol = function (url) {\n  return url.replace(/^[a-zA-Z]+:\\/\\//, '//')\n}\n\n/**\n * Removes a hash from a URL.\n *\n * @param {string} url A URL.\n * @return {string}  A URL without a hash, if possible.\n */\nspfUrl.unhash = function (url) {\n  var res = spfString.partition(url, '#')\n  return res[0]\n}\n\nexport default spfUrl\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/url/url.js","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_classof.js\n// module id = 86\n// module chunks = 0 2","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Data caching functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfCache');\n\nimport {spfBase} from '../base'\nimport spfConfig from '../config'\nimport spfState from '../state'\n\nlet spfCache = {}\n\n/**\n * Gets data from the cache.  If the data age exceeds the data lifetime, no\n * data is returned.\n *\n * If data is successfully returned from cache, the data's moved to the top of\n * the cache, making it less likely to be garbage collected.\n *\n * @param {string} key Key for the data object.\n * @return {*} The data, if it exists.\n */\nspfCache.get = function (key) {\n  var storage = spfCache.storage_()\n  if (!(key in storage)) {\n    return\n  }\n  var unit = storage[key]\n  // If the data is valid, return it.\n  if (spfCache.valid_(unit)) {\n    spfCache.updateCount_(unit)\n    return unit['data']\n  }\n  // Otherwise, the data should be removed from the cache.\n  spfCache.remove(key)\n}\n\n/**\n * Sets data in the cache if the both the specified lifetime and the\n * globally configured maximum allow it.\n *\n * @param {string} key Key for the data object.\n * @param {*} data The data.\n * @param {?number=} opt_lifetime Lifetime for the data object.\n *     Defaults to forever if not specified or if null is specified. If a\n *     lifetime of less than 1 is specified, the data is not set in the cache.\n */\nspfCache.set = function (key, data, opt_lifetime) {\n  var lifetime = parseInt(opt_lifetime, 10)\n  var max = parseInt(spfConfig.get('cache-max'), 10)\n  if (lifetime <= 0 || max <= 0) {\n    return\n  }\n  var storage = spfCache.storage_()\n  storage[key] = spfCache.create_(key, data, lifetime)\n  // When setting data in the cache, trigger an asynchronous garbage collection\n  // run to prevent unnecessary memory growth.\n  setTimeout(spfCache.collect, 1000)\n}\n\n/**\n * Removes data from the cache.\n *\n * @param {string} key Key for the data object.\n */\nspfCache.remove = function (key) {\n  var storage = spfCache.storage_()\n  if (key in storage) {\n    delete storage[key]\n  }\n}\n\n/**\n * Removes all data from the cache.\n */\nspfCache.clear = function () {\n  spfCache.storage_({})\n}\n\n/**\n * Removes expired data from the cache (aka garbage collection). Invalid data\n * and data with an age exceeding the data lifetime will be removed.\n */\nspfCache.collect = function () {\n  var storage = spfCache.storage_()\n  for (var key in storage) {\n    var unit = storage[key]\n    // If invalid data exists, remove.\n    if (!spfCache.valid_(unit)) {\n      delete storage[key]\n    }\n  }\n  // Trim the oldest entries if the cache is still above the max size.\n  spfCache.trim_()\n}\n\n// TODO(nicksay): Make count non-optional with next release.\n/**\n * Type definition for a SPF cache unit object.\n * - data: The data to cache.\n * - life: Lifetime of the data (milliseconds).\n * - time: Timestamp when the data was stored (milliseconds).\n * - count: The counter for the cached data.\n *\n * @typedef {{\n *   data: *,\n *   life: number,\n *   time: number,\n *   count: number\n * }}\n */\nspfCache.Unit\n\n/**\n * @param {spfCache.Unit} unit The cache unit.\n * @return {boolean}\n * @private\n */\nspfCache.valid_ = function (unit) {\n  // Ensure valid data is availabe.\n  if (!(unit && 'data' in unit)) {\n    return false\n  }\n  // A lifetime of NaN is considered forever.  If the age is less than the\n  // lifetime, then the unit is valid.  Note that if the timestamp is\n  // missing, the unit will not be valid.\n  var lifetime = unit['life']\n  lifetime = isNaN(lifetime) ? Infinity : lifetime\n  var timestamp = unit['time']\n  var age = spfBase.now() - timestamp\n  return age < lifetime\n}\n\n/**\n * Trim down the cache units to fit under the cache maximum, based on the\n * lowest count value (oldest entry).\n *\n * @private\n */\nspfCache.trim_ = function () {\n  var storage = spfCache.storage_()\n  var max = parseInt(spfConfig.get('cache-max'), 10)\n  max = isNaN(max) ? Infinity : max\n  var extra = Object.keys(storage).length - max\n  // If the current cache is smaller than the max, no trimming is needed.\n  if (extra <= 0) {\n    return\n  }\n\n  // Remove the smallest element 'extra' times to trim the cache down to size.\n  for (var i = 0; i < extra; i++) {\n    var min = {count: Infinity}\n    for (var key in storage) {\n      if (storage[key].count < min.count) {\n        min.key = key\n        min.count = storage[key].count\n      }\n    }\n    delete storage[min.key]\n  }\n}\n\n/**\n * @param {string} key Key for the data object.\n * @param {*} data The data.\n * @param {number} lifetime Lifetime for the data object.\n * @return {!spfCache.Unit}\n * @private\n */\nspfCache.create_ = function (key, data, lifetime) {\n  var unit = {'data': data, 'life': lifetime, 'time': spfBase.now(), 'count': 0}\n  spfCache.updateCount_(unit)\n  return unit\n}\n\n/**\n * Update the count of the given unit and the global cache counter to the\n * latest.\n * @param {spfCache.Unit} unit The cache unit.\n * @private\n */\nspfCache.updateCount_ = function (unit) {\n  var count = parseInt(spfState.get(spfState.Key.CACHE_COUNTER), 10) || 0\n  count++\n  spfState.set(spfState.Key.CACHE_COUNTER, count)\n\n  unit.count = count\n}\n\n/**\n * @param {!Object.<string, spfCache.Unit>=} opt_storage Optional storage\n *     object to overwrite the current value.\n * @return {!Object.<string, spfCache.Unit>} Current storage object.\n * @private\n */\nspfCache.storage_ = function (opt_storage) {\n  if (opt_storage || !spfState.has(spfState.Key.CACHE_STORAGE)) {\n    return /** @type {!Object.<string, spfCache.Unit>} */ (\n        spfState.set(spfState.Key.CACHE_STORAGE, (opt_storage || {})))\n  }\n  return /** @type {!Object.<string, spfCache.Unit>} */ (\n      spfState.get(spfState.Key.CACHE_STORAGE))\n}\n\nexport default spfCache\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/cache/cache.js","/**\n * @fileoverview Element class manipulation functions.\n * See {@link http://www.w3.org/TR/html5/dom.html#classes}.\n *\n */\n\n// goog.provide('spfDomClasslist');\n\nimport spfArray from '../array/array'\nlet spfDomClasslist = {}\n\n/**\n * Returns an array of class names on a node.\n *\n * @param {Node|EventTarget} node DOM node to evaluate.\n * @return {{length: number}} Array-like object of class names on the node.\n */\nspfDomClasslist.get = function (node) {\n  if (node.classList) {\n    return node.classList\n  } else {\n    return node.className && node.className.match(/\\S+/g) || []\n  }\n}\n\n/**\n * Returns true if a node has a class.\n *\n * @param {Node|EventTarget} node DOM node to test.\n * @param {string} cls Class name to test for.\n * @return {boolean} Whether node has the class.\n */\nspfDomClasslist.contains = function (node, cls) {\n  if (!cls) {\n    return false\n  } else if (node.classList) {\n    return node.classList.contains(cls)\n  } else {\n    var classes = spfDomClasslist.get(node)\n    return spfArray.some(classes, function (item) {\n      return item == cls\n    })\n  }\n}\n\n/**\n * Adds a class to a node. Does not add multiples.\n *\n * @param {Node|EventTarget} node DOM node to add class to.\n * @param {string} cls Class name to add.\n */\nspfDomClasslist.add = function (node, cls) {\n  if (cls) {\n    if (node.classList) {\n      node.classList.add(cls)\n    } else if (!spfDomClasslist.contains(node, cls)) {\n      node.className += ' ' + cls\n    }\n  }\n}\n\n/**\n * Removes a class from a node.\n *\n * @param {Node|EventTarget} node DOM node to remove class from.\n * @param {string} cls Class name to remove.\n */\nspfDomClasslist.remove = function (node, cls) {\n  if (cls) {\n    if (node.classList) {\n      node.classList.remove(cls)\n    } else {\n      var classes = spfDomClasslist.get(node)\n      var newClasses = spfArray.filter(classes, function (item) {\n        return item != cls\n      })\n      node.className = newClasses.join(' ')\n    }\n  }\n}\n\nexport default spfDomClasslist\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/dom/classlist.js","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for loading and unloading external resources such\n * as scripts and stylesheets.\n * See {@link spfBase.net.script} and {@link spfBase.net.style}.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfNetResource');\n// goog.provide('spfNetResource.name');\n// goog.provide('spfNetResource.status');\n// goog.provide('spfNetResource.url');\n\nimport {spfBase, SPF_BOOTLOADER, SPF_DEBUG} from '../base'\nimport spfArray from '../array/array'\nimport spfDebug from '../debug/debug'\nimport spfDom from '../dom/dom'\nimport spfDomClasslist from '../dom/classlist'\nimport spfPubsub from '../pubsub/pubsub'\nimport spfState from '../state'\nimport spfString from '../string/string'\nimport spfTasks from '../tasks/tasks'\nimport spfUrl from '../url/url'\n\nlet spfNetResource = {}\nspfNetResource.status = spfNetResource.status || {}\nspfNetResource.name = spfNetResource.name || {}\nspfNetResource.url = spfNetResource.url || {}\n\n/**\n * Loads a resource asynchronously and optionally defines a name to use for\n * dependency management and unloading.  See {@link #unload} to remove\n * previously loaded resources.\n *\n * NOTE: Automatic unloading of stylesheets depends on \"onload\" support and is\n * best effort.  Chrome 19, Safari 6, Firefox 9, Opera and IE 5.5 are supported.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url URL of the resource to load.\n * @param {string} name Name to identify the resource.\n * @param {Function=} opt_fn Optional callback function to execute when the\n *     resource is loaded.\n */\nspfNetResource.load = function (type, url, name, opt_fn) {\n  spfDebug.debug('resource.load', type, url, name)\n  var isJS = type == spfNetResource.Type.JS\n\n  url = spfNetResource.canonicalize(type, url)\n\n  // Calling load without a name or with an empty string for a name isn't\n  // officially supported, but if it happens, use a pseudonym to allow the\n  // the resource to load and fire the callback.\n  var pseudonym = name || '^' + url\n  var topic = spfNetResource.key(type, pseudonym)\n  var prevUrl\n\n  // If a name is provided with a different URL, then also unload the previous\n  // version after the resource is loaded.\n  //\n  // NOTE: When built for the bootloader, automatic unloading of scripts is not\n  // supported.  If someone is attempting to load a new version of a script\n  // before loading the main SPF code, then this should be an error.  Automatic\n  // unloading of scripts is primarily intended for navigation between versions.\n  if (name && !SPF_BOOTLOADER) {\n    // If loading a new resource for a name, handle unloading the previous one.\n    prevUrl = spfNetResource.url.get(type, name)\n    if (prevUrl && url != prevUrl) {\n      var evt = isJS ? spfBase.EventName.JS_BEFORE_UNLOAD\n                       : spfBase.EventName.CSS_BEFORE_UNLOAD\n      spfBase.dispatch(evt, {'name': name, 'url': prevUrl})\n      spfNetResource.unloadPrepare_(type, name, prevUrl)\n      // Wait until the new resource has finished loading before destroying\n      // the previous one to avoid flashes of unstyled content w/ CSS.\n      var unloadComplete = spfBase.bind(spfNetResource.unloadComplete_, null,\n                                    type, name, prevUrl)\n      spfPubsub.subscribe(topic, unloadComplete)\n    }\n  }\n\n  // Associate the name/pseudonym with the resource for tracking name changes.\n  // Associate the resource with the name/pseudonym for unloading + callbacks.\n  var prevName = spfNetResource.name.get(type, url)\n  if (prevName && pseudonym != prevName) {\n    // If changing names for this resource, remove the existing\n    // name-to-resource and resource-to-name mappings (which are re-set just\n    // below), and then transfer any callbacks.\n    spfNetResource.url.clear(type, prevName)\n    spfNetResource.name.clear(type, url)\n    var prevTopic = spfNetResource.key(type, prevName)\n    spfPubsub.rename(prevTopic, topic)\n  }\n  spfNetResource.name.set(type, url, pseudonym)\n  spfNetResource.url.set(type, pseudonym, url)\n\n  // Subscribe the callback to execute when the url is loaded.\n  spfDebug.debug('  subscribing callback', topic)\n  spfPubsub.subscribe(topic, opt_fn)\n  var check = spfBase.bind(spfNetResource.check, null, type)\n\n  // If a status exists, the resource is already loading or loaded.\n  // Otherwise, create the resource.\n  if (spfNetResource.status.get(type, url)) {\n    if (prevName && pseudonym != prevName) {\n      // If changing names for this resource and it's already loaded, find\n      // it and update the name attribute to keep the DOM in sync.\n      var el = spfNetResource.find(type, url)\n      if (el) {\n        el.setAttribute('name', name || '')\n      }\n    }\n    check()\n  } else {\n    // If prevUrl is defined and the type is CSS, the styleshet will be loaded\n    // in-place. This works because previous elements aren't destroyed until\n    // loading is complete.\n    var el = spfNetResource.create(type, url, check, undefined, undefined,\n        prevUrl)\n    if (el && name) {\n      el.setAttribute('name', name)\n    }\n  }\n}\n\n/**\n * Unloads resources identified by dependency name.  See {@link #load}.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n */\nspfNetResource.unload = function (type, name) {\n  spfDebug.warn('resource.unload', type, name)\n  var url = spfNetResource.url.get(type, name)\n  spfNetResource.unloadPrepare_(type, name, url)\n  spfNetResource.unloadComplete_(type, name, url)\n}\n\n/**\n * See {@link #unload}.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n * @param {string|undefined} url The URL.\n * @private\n */\nspfNetResource.unloadPrepare_ = function (type, name, url) {\n  spfDebug.debug('  > resource.unloadPrepare_', type, url)\n  // Clear the dependency name to URL mapping.\n  spfNetResource.url.clear(type, name)\n  // Clear the URL to dependency name mapping.\n  if (url) {\n    spfNetResource.name.clear(type, url)\n  }\n  var topic = spfNetResource.key(type, name)\n  spfDebug.debug('  clearing callbacks for', topic)\n  // Clear any pending callbacks for the dependency name.\n  spfPubsub.clear(topic)\n}\n\n/**\n * See {@link #unload}.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n * @param {string|undefined} url The URL.\n * @private\n */\nspfNetResource.unloadComplete_ = function (type, name, url) {\n  var isJS = type == spfNetResource.Type.JS\n  if (url) {\n    spfDebug.debug('  > resource.unloadComplete_', type, url)\n    var evt = isJS ? spfBase.EventName.JS_UNLOAD\n                     : spfBase.EventName.CSS_UNLOAD\n    spfBase.dispatch(evt, {'name': name, 'url': url})\n    spfNetResource.destroy(type, url)\n  }\n}\n\n/**\n * Executes any pending callbacks possible by checking if any URLs for names\n * of a given type have loaded.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n */\nspfNetResource.check = function (type) {\n  spfDebug.debug('resource.check', type)\n  var prefix = spfNetResource.key(type, '')\n  for (var topic in spfPubsub.subscriptions) {\n    if (topic.indexOf(prefix) == 0) {\n      var names = topic.substring(prefix.length).split('|')\n      var loaded = spfBase.bind(spfNetResource.url.loaded, null, type)\n      var ready = spfArray.every(names, loaded)\n      spfDebug.debug(' ', topic, '->', names, '=', ready)\n      if (ready) {\n        spfDebug.debug('  publishing', topic)\n        // Because check evaluates the pubsub.subscriptions array to determine\n        // if urls for names are loaded, there is a potential subscribe/publish\n        // infinite loop:\n        //     require_ -> load (subscribe) -> check (publish) ->\n        //     load (subscribe) -> <loop forever> ...\n        // To avoid this, use flush instead of publish + clear to ensure that\n        // previously subscribed functions are removed before execution:\n        //     require_ -> load (subscribe) -> check (flush) -> <no loop>\n        spfPubsub.flush(topic)\n      }\n    }\n  }\n}\n\n/**\n * Adds a resource to the page by creating an element and appending it to\n * the document.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url URL of the resource.\n * @param {Function=} opt_callback Callback for when the resource has loaded.\n * @param {Document=} opt_document Optional document to use.\n * @param {string=} opt_statusGroup Optional group to use in status tracking.\n * @param {string=} opt_prevUrl Optional URL of the previous version of this\n *     resource. Used for stylesheets to load new versions in-place to prevent\n*      changing the order of the cascade.\n * @return {Element} The dynamically created element.\n */\nspfNetResource.create = function (type, url, opt_callback, opt_document,\n    opt_statusGroup, opt_prevUrl) {\n  spfDebug.debug('resource.create', type, url, 'loading')\n  // When built for the bootloader, always assume JS is being loaded.\n  var isJS = SPF_BOOTLOADER || type == spfNetResource.Type.JS\n  url = spfNetResource.canonicalize(type, url)\n  spfNetResource.status.set(spfNetResource.State.LOADING,\n                              type, url, opt_statusGroup)\n  var tag = isJS ? 'script' : 'link'\n  var doc = opt_document || document\n  var el = doc.createElement(tag)\n  var next = function () {\n    spfDebug.debug('resource.create', type, url, 'done')\n    // Only update status if the resource has not been removed in the interim.\n    if (spfNetResource.status.get(type, url, opt_statusGroup)) {\n      spfDebug.debug('resource.create', type, url, 'loaded')\n      spfNetResource.status.set(spfNetResource.State.LOADED,\n                                  type, url, opt_statusGroup)\n    }\n    if (isJS && el && el.parentNode && doc == document && !SPF_DEBUG) {\n      // Remove scripts afterwards to avoid unnecessary increased DOM size.\n      el.parentNode.removeChild(el)\n    }\n    // IE 10 has a bug where it will synchronously call load handlers for\n    // cached resources, force this to be async for consistency.\n    if (opt_callback) {\n      setTimeout(opt_callback, 0)\n    }\n    return null\n  }\n  if (!url) {\n    return next()\n  }\n  var label = spfNetResource.label(url)\n  el.className = spfNetResource.key(type, label)\n  // Chrome, Safari, Firefox, Opera and IE 9 support script onload.\n  // Chrome 19, Safari 6, Firefox 9, Opera and IE 5.5 support stylesheet onload.\n  // To support scripts IE 8 and below, use script onreadystatechange.\n  if ('onload' in el) {\n    el.onerror = el.onload = next\n  } else {\n    el.onreadystatechange = function () {\n      // For IE 8 and below, script readyState will be one of the following:\n      // * uninitialized\n      // * loading\n      // * loaded\n      // * interactive\n      // * complete\n      // Match either \"loaded\" or \"complete\" to provide the equivalent of\n      // script onload.  (Note that \"interactive\" can be skipped).\n      if (/^c|loade/.test(el.readyState)) {\n        next()\n      }\n    }\n  }\n  // For scripts, set the onload and onreadystatechange handlers before\n  // setting the src to avoid potential IE bug where handlers are not called.\n  // Prefer placing resources in the head instead of the body to avoid errors\n  // when called from the head in the first place.\n  var targetEl = doc.getElementsByTagName('head')[0] || doc.body\n  if (isJS) {\n    el.async = true\n    el.src = url\n    // Use insertBefore for JS to avoid IE execution errors.\n    targetEl.insertBefore(el, targetEl.firstChild)\n  } else {\n    el.rel = 'stylesheet'\n    el.href = url\n    // If this stylesheet already exists under a different URL,\n    // reload it in-place to prevent changing the order of the cascade.\n    // It is only reloaded it in-place if it already exists in the head,\n    // otherwise the new element is appended.\n    var prevEl = opt_prevUrl\n        ? spfNetResource.find(type, opt_prevUrl, targetEl) : null\n    if (prevEl) {\n      targetEl.insertBefore(el, prevEl)\n    } else {\n      targetEl.appendChild(el)\n    }\n  }\n  return el\n}\n\n/**\n * Removes a resource by removing a previously created element that was\n * appended to the document.  See {@link #create}.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url URL of the resource.\n * @param {Document=} opt_document Optional document to use.\n */\nspfNetResource.destroy = function (type, url, opt_document) {\n  url = spfNetResource.canonicalize(type, url)\n  var el = spfNetResource.find(type, url, opt_document)\n  if (el && el.parentNode) {\n    el.parentNode.removeChild(el)\n  }\n  spfNetResource.status.clear(type, url)\n}\n\n/**\n * Finds a previously created element.\n * See {@link #create}.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url URL of the resource.\n * @param {(Document|Element)=} opt_root Optional document or element to\n *     search in.\n * @return {!Node|undefined} The found element, or undefined if not found.\n */\nspfNetResource.find = function (type, url, opt_root) {\n  var label = spfNetResource.label(url)\n  var cls = spfNetResource.key(type, label)\n  var selector = '.' + cls\n  var els = spfDom.query(selector, opt_root)\n  return els[0]\n}\n\n/**\n * Discovers existing resources in the document and registers them as loaded.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @return {Array.<Node>|NodeList} The newly found elements.\n */\nspfNetResource.discover = function (type) {\n  spfDebug.debug('resource.discover', type)\n  var isJS = type == spfNetResource.Type.JS\n  var selector = isJS ? 'script[src]' : 'link[rel~=\"stylesheet\"]'\n  var els = []\n  spfArray.each(spfDom.query(selector), function (el) {\n    var url = isJS ? el.src : el.href\n    url = spfNetResource.canonicalize(type, url)\n    // Ignore if already loading or loaded.\n    if (!spfNetResource.status.get(type, url)) {\n      spfNetResource.status.set(spfNetResource.State.LOADED, type, url)\n      var label = spfNetResource.label(url)\n      var cls = spfNetResource.key(type, label)\n      spfDomClasslist.add(el, cls)\n      var name = el.getAttribute('name')\n      if (name) {\n        spfNetResource.name.set(type, url, name)\n        spfNetResource.url.set(type, name, url)\n      }\n      els.push(el)\n      spfDebug.debug('  found', url, cls, name)\n    }\n  })\n\n  var contentSelector = isJS ? 'script[name]' : 'style[name]'\n  var str = ''\n  var id = ''\n  var name = ''\n  var label = ''\n  var cls = ''\n  spfArray.each(spfDom.query(contentSelector), function (el) {\n    name = el.getAttribute('name')\n    if (name) {\n      str = el.innerText.replace(/(\\r\\n|\\n|\\r)/gm, '')\n\n      // Use a hashcode to identify the resource instead of a URL.\n      id = 'hash-' + spfString.hashcode(str.replace(/\\s/g, ''))\n\n      // Ignore if already loading or loaded.\n      if (!spfNetResource.status.get(type, id)) {\n        spfNetResource.status.set(spfNetResource.State.LOADED, type, id)\n\n        spfNetResource.url.set(type, name, id)\n\n        label = spfNetResource.label(id)\n        cls = spfNetResource.key(type, label)\n        el.className = cls\n        el.setAttribute('name', name)\n\n        els.push(el)\n      }\n    }\n  })\n\n  return els\n}\n\n/**\n * Prefetches a resource by creating a dummy element and appending it to an\n * iframe document.  The resource will be requested but not loaded. Use to\n * prime the browser cache and avoid needing to request the resource when\n * subsequently loaded.  See {@link #get}.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url URL of the resource.\n * @param {boolean=} opt_force Whether to force fetching the resource even if\n *     it has already been fetched before; useful for preconnect when the\n *     connection keep-alive is shorter than repeat attempt intervals.\n */\nspfNetResource.prefetch = function (type, url, opt_force) {\n  if (!url) {\n    return\n  }\n  url = spfNetResource.canonicalize(type, url)\n  // Skip fetching if the element is already loaded on the page, unless\n  // opt_force is specified.\n  if (!opt_force && spfNetResource.status.get(type, url)) {\n    return\n  }\n  // If opt_force is specified, tracking whether the element exists is unneeded,\n  // and if prefetching an image (e.g. for URL preconnection), the standard DOM\n  // logic is also unneeded.  In this case, use the simpler/faster Image object.\n  if (opt_force && type == spfNetResource.Type.IMG) {\n    spfNetResource.preconnect_(url)\n    return\n  }\n  var label = spfNetResource.label(url)\n  var id = spfNetResource.key(type, label)\n  var key = spfNetResource.key(type, 'prefetch')\n  var el = /** @type {HTMLIFrameElement} */ (document.getElementById(key))\n  if (!el) {\n    el = spfDom.createIframe(key, null, function (el) {\n      // Use the title attribute as the iframe's loaded flag.\n      el.title = key\n      spfTasks.run(key, true)\n    })\n  } else {\n    // Return if the resource is already prefetched, unless opt_force is\n    // specified.\n    if (!opt_force && el.contentWindow.document.getElementById(id)) {\n      return\n    }\n  }\n  // Firefox needs the iframe to be fully created in the DOM before continuing.\n  // So delay adding elements to the iframe until onload.\n  var next = spfBase.bind(spfNetResource.prefetch_, null, el, type, url, id, key)\n  if (!el.title) {\n    spfTasks.add(key, next)\n  } else {\n    next()\n  }\n}\n\n/**\n * See {@link #prefetch}.\n *\n * @param {HTMLIFrameElement} el The iframe to load resources in.\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url URL of the resource.\n * @param {string} id The computed unique id of the resource.\n * @param {string} group The group value to use when tracking these resources.\n * @private\n */\nspfNetResource.prefetch_ = function (el, type, url, id, group) {\n  var isJS = type == spfNetResource.Type.JS\n  var isCSS = type == spfNetResource.Type.CSS\n  var doc = el.contentWindow.document\n  // If an element with a given id already exists, remove it before prefetching\n  // the resource to avoid growing the overall DOM size.  Since `prefetch`\n  // already checks for the element's existence before calling this method,\n  // this is to prevent repeated calls with `opt_force` from always generating\n  // new nodes.\n  var fetchEl = doc.getElementById(id)\n  if (fetchEl) {\n    fetchEl.parentNode.removeChild(fetchEl)\n  }\n  if (isJS) {\n    fetchEl = doc.createElement('object')\n    if (spfNetResource.IS_IE) {\n      // IE needs a <script> in order to complete the request, but\n      // fortunately will not execute it unless in the DOM.  Attempting to\n      // use an <object> like other browsers will cause the download to hang.\n      // The <object> will just be a placeholder for the request made.\n      var extraElForIE = doc.createElement('script')\n      extraElForIE.src = url\n    } else {\n      // Otherwise scripts need to be prefetched as objects to avoid execution.\n      fetchEl.data = url\n    }\n    fetchEl.id = id\n    doc.body.appendChild(fetchEl)\n  } else if (isCSS) {\n    // Stylesheets can be prefetched in the same way as loaded.\n    fetchEl = spfNetResource.create(type, url, null, doc, group)\n    fetchEl.id = id\n  } else {\n    // For establishing a preconnection, use an image request.\n    fetchEl = doc.createElement('img')\n    if (spfNetResource.IS_IE) {\n      // IE needs page-level cache busting to properly re-request images, but\n      // not network-level.  Use URL hashes to trick it into re-sending.\n      url = url + '#' + spfBase.now()\n    }\n    fetchEl.src = url\n    fetchEl.id = id\n    doc.body.appendChild(fetchEl)\n  }\n}\n\n/**\n * See {@link #prefetch}.\n *\n * @param {string} url URL of the resource.\n * @private\n */\nspfNetResource.preconnect_ = function (url) {\n  // For establishing a preconnection, use an image request.  When the DOM logic\n  // is not needed to track status, use the simpler/faster object approach.\n  var img = new Image()\n  if (spfNetResource.IS_IE) {\n    // IE needs page-level cache busting to properly re-request images, but\n    // not network-level.  Use URL hashes to trick it into re-sending.\n    url = url + '#' + spfBase.now()\n  }\n  img.src = url\n}\n\n/**\n * Evaluates resource text and defines a name to use for management.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} text The text of the resource.\n * @param {string} name Name to identify the resource.\n */\nspfNetResource.eval = function (type, text, name) {\n  var isJS = type == spfNetResource.Type.JS\n  var previous = spfNetResource.url.get(type, name)\n  // Use a hashcode to identify the resource instead of a URL.\n  var id = 'hash-' + spfString.hashcode(text.replace(/\\s/g, ''))\n  spfNetResource.url.set(type, name, id)\n  var complete = spfNetResource.status.loaded(type, id)\n  if (complete) {\n    return\n  }\n  var el = spfNetResource.exec(type, text)\n  if (!el) {\n    return\n  }\n  spfNetResource.status.set(spfNetResource.State.LOADED, type, id)\n  if (el && (!isJS || SPF_DEBUG)) {\n    // Script elements are removed after execution, so only modify attributes\n    // if a style or in debug mode.\n    var label = spfNetResource.label(id)\n    var cls = spfNetResource.key(type, label)\n    el.className = cls\n    el.setAttribute('name', name)\n  }\n  previous = previous && previous[0]\n  if (previous) {\n    spfNetResource.destroy(type, previous)\n  }\n}\n\n/**\n * Executes resource text by creating an element and appending it to\n * the document.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} text The text of the resource.\n * @return {Element} The dynamically created element.\n */\nspfNetResource.exec = function (type, text) {\n  text = spfString.trim(text)\n  if (!text) {\n    return null\n  }\n  var isJS = type == spfNetResource.Type.JS\n  var targetEl = document.getElementsByTagName('head')[0] || document.body\n  var el\n  if (isJS) {\n    el = document.createElement('script')\n    el.text = text\n    // Place the scripts in the head instead of the body to avoid errors\n    // when called from the head in the first place.\n    targetEl.appendChild(el)\n    if (!SPF_DEBUG) {\n      // Remove scripts afterwards to avoid unnecessary increased DOM size.\n      targetEl.removeChild(el)\n    }\n  } else {\n    el = document.createElement('style')\n    // IE requires the style element to be in the document before accessing\n    // the StyleSheet object.\n    targetEl.appendChild(el)\n    if ('styleSheet' in el) {\n      el.styleSheet.cssText = text\n    } else {\n      el.appendChild(document.createTextNode(text))\n    }\n  }\n  return el\n}\n\n/**\n * Sets the path prefix or replacement map to use when resolving relative URLs.\n * See {@link #canonicalize}.\n *\n * Note: The order in which replacements are made is not guaranteed.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string|Object.<string>} paths The paths.\n */\nspfNetResource.path = function (type, paths) {\n  var key = /** @type {spfState.Key} */ (\n      spfState.Key.RESOURCE_PATHS_PREFIX + type)\n  spfState.set(key, paths)\n}\n\n/**\n * Convert a resource URL to the \"canonical\" version in three steps:\n *   1: replacing path segments (see {@link #path})\n *   2: appending a file type extension\n *   3: converting to absolute (see {@link spfUrl.absolute})\n * Absolute URLs (i.e. those that start with http://) are ignored for all\n * three steps.  Protocol-relative URLs (i.e. those that start with //)\n * are ignored for steps 1 and 2.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The initial url.\n * @return {string} The adjusted url.\n */\nspfNetResource.canonicalize = function (type, url) {\n  var key = /** @type {spfState.Key} */ (\n      spfState.Key.RESOURCE_PATHS_PREFIX + type)\n  if (url) {\n    var index = url.indexOf('//')\n    if (index < 0) {\n      // Relative URL: \"//\" not found.\n      if (spfString.startsWith(url, 'hash-')) {\n        // Ignore hashcode IDs.\n        return url\n      }\n      var paths = spfState.get(key) || ''\n      if (spfString.isString(paths)) {\n        url = paths + url\n      } else {\n        for (var p in paths) {\n          url = url.replace(p, paths[p])\n        }\n      }\n      // Images don't have a standard extension format.\n      if (type != spfNetResource.Type.IMG) {\n        url = url.indexOf('.' + type) < 0 ? url + '.' + type : url\n      }\n      url = spfUrl.absolute(url)\n    } else if (index == 0) {\n      // Protocol-Relative URL: \"//\" found at start.\n      url = spfUrl.absolute(url)\n    }\n  }\n  return url\n}\n\n/**\n * Build the full resource key.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} label The resource label.\n * @param {string=} opt_group An optional group name for the resource.\n * @return {string} The compound key.\n */\nspfNetResource.key = function (type, label, opt_group) {\n  return type + '-' + label + (opt_group ? '-' + opt_group : '')\n}\n\n/**\n * Convert a URL to an internal \"label\" for use in identifying it.\n *\n * @param {?} url The resource URL.\n * @return {string} The label.\n */\nspfNetResource.label = function (url) {\n  return url ? String(url).replace(/[^\\w]/g, '') : ''\n}\n\n/**\n * Sets the loading status for a resource URL.\n *\n * @param {spfNetResource.State} status The loading status.\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n * @param {string=} opt_group Optional group.\n */\nspfNetResource.status.set = function (status, type, url, opt_group) {\n  var key = spfNetResource.key(type, url, opt_group)\n  spfNetResource.status_[key] = status\n}\n\n/**\n * Returns the loading status for a resource URL.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n * @param {string=} opt_group Optional group.\n * @return {spfNetResource.State|undefined} The loading status.\n */\nspfNetResource.status.get = function (type, url, opt_group) {\n  var key = spfNetResource.key(type, url, opt_group)\n  return spfNetResource.status_[key]\n}\n\n/**\n * Clears the previously set loading status for a resource URL.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n */\nspfNetResource.status.clear = function (type, url) {\n  var key = spfNetResource.key(type, url)\n  delete spfNetResource.status_[key]\n}\n\n/**\n * Checks to see if the status for a resource URL is \"loaded\".\n * URLs that are empty strings are always \"loaded\".\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n * @return {boolean} Whether the URL is loaded.\n */\nspfNetResource.status.loaded = function (type, url) {\n  var status = spfNetResource.status.get(type, url)\n  return url == '' || status == spfNetResource.State.LOADED\n}\n\n/**\n * Sets the dependency name for a resource URL.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n * @param {string} name The dependency name.\n */\nspfNetResource.name.set = function (type, url, name) {\n  var key = spfNetResource.key(type, url)\n  spfNetResource.name_[key] = name\n}\n\n/**\n * Returns the dependency name currently set for a resource URL.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n * @return {string|undefined} The dependency name.\n */\nspfNetResource.name.get = function (type, url) {\n  var key = spfNetResource.key(type, url)\n  return spfNetResource.name_[key]\n}\n\n/**\n * Clears the previously set dependency name for a resource URL.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} url The URL.\n */\nspfNetResource.name.clear = function (type, url) {\n  var key = spfNetResource.key(type, url)\n  delete spfNetResource.name_[key]\n}\n\n/**\n * Sets the resource URL for a dependency name.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n * @param {string} url The URL.\n */\nspfNetResource.url.set = function (type, name, url) {\n  var key = spfNetResource.key(type, name)\n  spfNetResource.url_[key] = url\n}\n\n/**\n * Returns the resource URL currently set for a dependency name.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n * @return {string|undefined} The URL.\n */\nspfNetResource.url.get = function (type, name) {\n  var key = spfNetResource.key(type, name)\n  var url = spfNetResource.url_[key]\n  return url\n}\n\n/**\n * Clears the previously set resource URL for a dependency name.\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n */\nspfNetResource.url.clear = function (type, name) {\n  var key = spfNetResource.key(type, name)\n  delete spfNetResource.url_[key]\n}\n\n/**\n * Checks to see if the resource URL for a dependency name has been loaded.\n * Dependency names that are empty strings are always \"loaded\".\n *\n * @param {spfNetResource.Type} type Type of the resource.\n * @param {string} name The dependency name.\n * @return {boolean}\n */\nspfNetResource.url.loaded = function (type, name) {\n  var url = spfNetResource.url.get(type, name)\n  return url != undefined && spfNetResource.status.loaded(type, url)\n}\n\n/**\n * Map a URL to a resource status.\n * @type {!Object.<spfNetResource.State>}\n * @private\n */\nspfNetResource.status_ = {}\n\n/**\n * Map a URL to a dependency name.\n * @type {!Object.<string>}\n * @private\n */\nspfNetResource.name_ = {}\n\n/**\n * Map a dependency name to a URL.\n * @type {!Object.<string>}\n * @private\n */\nspfNetResource.url_ = {}\n\n/**\n * Whether the browser is Internet Explorer; valid for MSIE 8+ aka Trident 4+.\n * @type {boolean}\n * @const\n */\nspfNetResource.IS_IE = spfString.contains(navigator.userAgent, ' Trident/')\n\n/**\n * The loading state of a resource.\n * @enum {number}\n */\nspfNetResource.State = {\n  LOADING: 1,\n  LOADED: 2\n}\n\n/**\n * Supported resource types.\n * @enum {string}\n */\nspfNetResource.Type = {\n  CSS: 'css',\n  IMG: 'img',\n  JS: 'js'\n}\n\n// Automatic initiazation for spfNetResource.status_.\n// When built for the bootloader, unconditionally set in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.RESOURCE_STATUS, spfNetResource.status_)\n} else {\n  if (!spfState.has(spfState.Key.RESOURCE_STATUS)) {\n    spfState.set(spfState.Key.RESOURCE_STATUS, spfNetResource.status_)\n  }\n  spfNetResource.status_ =\n      /** @type {!Object.<spfNetResource.State>} */ (\n      spfState.get(spfState.Key.RESOURCE_STATUS))\n}\n\n// Automatic initiazation for spfNetResource.name_.\n// When built for the bootloader, unconditionally set the map in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.RESOURCE_NAME, spfNetResource.name_)\n} else {\n  if (!spfState.has(spfState.Key.RESOURCE_NAME)) {\n    spfState.set(spfState.Key.RESOURCE_NAME, spfNetResource.name_)\n  }\n  spfNetResource.name_ = /** @type {!Object.<string>} */ (\n      spfState.get(spfState.Key.RESOURCE_NAME))\n}\n\n// Automatic initiazation for spfNetResource.url_.\n// When built for the bootloader, unconditionally set the map in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.RESOURCE_URL, spfNetResource.url_)\n} else {\n  if (!spfState.has(spfState.Key.RESOURCE_URL)) {\n    spfState.set(spfState.Key.RESOURCE_URL, spfNetResource.url_)\n  }\n  spfNetResource.url_ = /** @type {!Object.<string>} */ (\n      spfState.get(spfState.Key.RESOURCE_URL))\n}\n\nexport default spfNetResource\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/net/resource.js","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for dynamically loading scripts without blocking.\n *\n * Provides asynchronous loading and dependency management, loosely similar to\n * $script.js {@link https://github.com/ded/script.js/} but with enhancements.\n * Designed to be built as both a standlone bootstrap script loader in the\n * document head and also built as part of the main SPF code. When both the\n * bootstrap and main code is loaded on the same page, the main code extends\n * the bootstrap code for seamless script loading.\n *\n * Unconditionally load a script:\n *     spfNetScript.get(url, function() {\n *       // url is loaded\n *     });\n *\n * Conditionally load a script only if not already loaded:\n *     spfNetScript.load(url, 'name', function() {\n *       // url is loaded\n *     });\n * Or:\n *     spfNetScript.load(url, 'name');\n *     spfNetScript.ready('name', function() {\n *       // url is loaded\n *     });\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\nimport {SPF_BOOTLOADER} from '../base'\nimport spfArray from '../array/array'\nimport spfDebug from '../debug/debug'\nimport spfNetResource from '../net/resource'\nimport spfPubsub from '../pubsub/pubsub'\nimport spfState from '../state'\nimport spfString from '../string/string'\n\n// goog.provide('spfNetScript');\nlet spfNetScript = {}\n\n/**\n * Loads a script asynchronously and defines a name to use for dependency\n * management and unloading.  See {@link #ready} to wait for named scripts to\n * be loaded and {@link #unload} to remove previously loaded scripts.\n *\n * - Subsequent calls to load the same URL will not reload the script.  To\n *   reload a script, unload it first with {@link #unload}.  To unconditionally\n *   load a script, see {@link #get}.\n *\n * - A name must be specified to identify the same script at different URLs.\n *   (For example, \"main-A.js\" and \"main-B.js\" are both \"main\".)  When a name\n *   is specified, all other scripts with the same name will be unloaded\n *   before the callback is executed.  This allows switching between\n *   versions of the same script at different URLs.\n *\n * - A callback can be specified to execute once the script has loaded.  The\n *   callback will be executed each time, even if the script is not reloaded.\n *\n * @param {string} url URL of the script to load.\n * @param {string} name Name to identify the script.\n * @param {Function=} opt_fn Optional callback function to execute when the\n *     script is loaded.\n */\nspfNetScript.load = function (url, name, opt_fn) {\n  var type = spfNetResource.Type.JS\n  spfNetResource.load(type, url, name, opt_fn)\n}\n\n/**\n * Unloads scripts identified by name.  See {@link #load}.\n *\n * NOTE: Unloading a script will prevent execution of ALL pending callbacks\n * but is NOT guaranteed to stop the browser loading a pending URL.\n *\n * @param {string} name The name.\n */\nspfNetScript.unload = function (name) {\n  var type = spfNetResource.Type.JS\n  spfNetResource.unload(type, name)\n}\n\n/**\n * Discovers existing scripts in the document and registers them as loaded.\n */\nspfNetScript.discover = function () {\n  var type = spfNetResource.Type.JS\n  spfNetResource.discover(type)\n}\n\n/**\n * Unconditionally loads a script by dynamically creating an element and\n * appending it to the document without regard for dependencies or whether it\n * has been loaded before.  A script directly loaded by this method cannot\n * be unloaded by name.  Compare to {@link #load}.\n *\n * @param {string} url URL of the script to load.\n * @param {Function=} opt_fn Function to execute when loaded.\n */\nspfNetScript.get = function (url, opt_fn) {\n  var type = spfNetResource.Type.JS\n  spfNetResource.create(type, url, opt_fn)\n}\n\n/**\n * Prefetchs one or more scripts; the scripts will be requested but not loaded.\n * Use to prime the browser cache and avoid needing to request the script when\n * subsequently loaded.  See {@link #load}.\n *\n * @param {string|Array.<string>} urls One or more URLs of scripts to prefetch.\n */\nspfNetScript.prefetch = function (urls) {\n  var type = spfNetResource.Type.JS\n  // Convert to an array if needed.\n  urls = spfArray.toArray(urls)\n  spfArray.each(urls, function (url) {\n    spfNetResource.prefetch(type, url)\n  })\n}\n\n/**\n * Waits for one or more scripts identified by name to be loaded and executes\n * the callback function.  See {@link #load} or {@link #done} to define names.\n * If an empty name is provided, it will be considered loaded immediately.\n *\n * @param {string|Array.<string>} names One or more names.\n * @param {Function=} opt_fn Callback function to execute when the\n *     scripts have loaded.\n * @param {Function=} opt_require Callback function to execute if names\n *     are specified that have not yet been defined/loaded.\n */\nspfNetScript.ready = function (names, opt_fn, opt_require) {\n  var type = spfNetResource.Type.JS\n\n  // Convert to an array if needed.\n  names = spfArray.toArray(names)\n  spfDebug.debug('script.ready', names)\n\n  // Filter out empty names.\n  names = spfArray.filter(names, function (name) {\n    return !!name\n  })\n\n  // Find unknown names.\n  var unknown = []\n  spfArray.each(names, function (name) {\n    if (spfNetResource.url.get(type, name) == undefined) {\n      unknown.push(name)\n    }\n  })\n\n  // Check if all urls for the names are loaded.\n  var known = !unknown.length\n  if (opt_fn) {\n    var loaded = spf.bind(spfNetResource.url.loaded, null, type)\n    var ready = spfArray.every(names, loaded)\n    if (known && ready) {\n      // If ready, execute the callback.\n      opt_fn()\n    } else {\n      // Otherwise, wait for them to be loaded.\n      var topic = spfNetResource.key(type, names.sort().join('|'))\n      spfDebug.debug('  subscribing', topic)\n      spfPubsub.subscribe(topic, opt_fn)\n    }\n  }\n  // If provided, call the require function to allow lazy-loading.\n  if (opt_require && !known) {\n    opt_require(unknown)\n  }\n}\n\n/**\n * Notifies any waiting callbacks that `name` has completed loading.\n * Use with {@link #ready} for arbitrary readiness not directly tied to scripts.\n *\n * @param {string} name The ready name.\n */\nspfNetScript.done = function (name) {\n  var type = spfNetResource.Type.JS\n  spfNetResource.url.set(type, name, '')  // No associated URL.\n  spfNetResource.check(type)\n}\n\n/**\n * \"Ignores\" a script load by canceling execution of a pending callback.\n *\n * Stops waiting for one or more scripts identified by name to be loaded and\n * cancels the pending callback execution.  The callback must have been\n * registered by {@link #load} or {@link #ready}.  If the callback was\n * registered by {@link #ready} and more than one name was provided, the same\n * names must be used here.\n *\n * @param {string|Array.<string>} names One or more names.\n * @param {Function} fn Callback function to cancel.\n */\nspfNetScript.ignore = function (names, fn) {\n  var type = spfNetResource.Type.JS\n  // Convert to an array if needed.\n  names = spfArray.toArray(names)\n  spfDebug.debug('script.ignore', names)\n  var topic = spfNetResource.key(type, names.sort().join('|'))\n  spfDebug.debug('  unsubscribing', topic)\n  spfPubsub.unsubscribe(topic, fn)\n}\n\n/**\n * Recursively loads scripts identified by name, first loading\n * any dependendent scripts.  Use {@link #declare} to define dependencies.\n *\n * @param {string|Array.<string>} names One or more names.\n * @param {Function=} opt_fn Callback function to execute when the\n *     scripts have loaded.\n */\nspfNetScript.require = function (names, opt_fn) {\n  var type = spfNetResource.Type.JS\n  spfDebug.debug('script.require', names)\n\n  // When built for the bootloader, automatic unloading of scripts is not\n  // supported.  If someone is attempting to load a new version of a script\n  // before loading the main SPF code, then this should be an error.  Automatic\n  // unloading of scripts is primarily intended for navigation between versions.\n  if (!SPF_BOOTLOADER) {\n    // Convert to an array if needed.\n    names = spfArray.toArray(names)\n    spfArray.each(names, function (name) {\n      if (name) {\n        var url = spfNetScript.url_[name] || name\n        url = spfNetResource.canonicalize(type, url)\n        var previous = spfNetResource.url.get(type, name)\n        if (previous && url != previous) {\n          spfNetScript.unrequire(name)\n        }\n      }\n    })\n  }\n\n  spfNetScript.ready(names, opt_fn, spfNetScript.require_)\n}\n\n/**\n * See {@link #require}.\n *\n * @param {Array.<string>} names The names.\n * @private\n */\nspfNetScript.require_ = function (names) {\n  // Iterate and check if there are declared dependencies.\n  // If so, check if the deps are ready and if not recurse.\n  // If not, load the scripts for that name.\n  spfArray.each(names, function (name) {\n    var deps = spfNetScript.deps_[name]\n    var url = spfNetScript.url_[name] || name\n    var next = function () {\n      spfNetScript.load(url, name)\n    }\n    if (deps) {\n      spfNetScript.require(deps, next)\n    } else {\n      next()\n    }\n  })\n}\n\n/**\n * Recursively unloads scripts identified by name, first unloading\n * any dependendent scripts.  Use {@link #declare} to define dependencies.\n *\n * @param {string|Array.<string>} names One or more names.\n */\nspfNetScript.unrequire = function (names) {\n  spfDebug.debug('script.unrequire', names)\n  // Convert to an array if needed.\n  names = spfArray.toArray(names)\n  spfArray.each(names, function (name) {\n    var descendants = []\n    for (var dep in spfNetScript.deps_) {\n      var list = spfNetScript.deps_[dep]\n      list = spfArray.toArray(list)\n      spfArray.each(list, function (l) {\n        if (l == name) {\n          descendants.push(dep)\n        }\n      })\n    }\n    spfArray.each(descendants, function (descend) {\n      spfNetScript.unrequire(descend)\n    })\n    spfNetScript.unload(name)\n  })\n}\n\n/**\n * Evaluates script text and defines a name to use for management.\n *\n * - Subsequent calls to evaluate the same text will not re-evaluate the script.\n *   To unconditionally evalute a script, see {@link #exec}.\n *\n * @param {string} text The text of the script.\n * @param {string} name Name to identify the script.\n * @return {undefined}\n */\nspfNetScript.eval = function (text, name) {\n  var type = spfNetResource.Type.JS\n  var el = spfNetResource.eval(type, text, name)\n}\n\n/**\n * Unconditionally evaluates script text.  See {@link #eval}.\n *\n * @param {string} text The text of the script.\n */\nspfNetScript.exec = function (text) {\n  var type = spfNetResource.Type.JS\n  var el = spfNetResource.exec(type, text)\n}\n\n/**\n * Sets the dependency map and optional URL map used when requiring scripts.\n * See {@link #require}.\n *\n * @param {Object.<(string|Array.<string>)>} deps The dependency map.\n * @param {Object.<string>=} opt_urls The optional URL map.\n */\nspfNetScript.declare = function (deps, opt_urls) {\n  if (deps) {\n    for (var name in deps) {\n      spfNetScript.deps_[name] = deps[name]\n    }\n    if (opt_urls) {\n      for (var name in opt_urls) {\n        spfNetScript.url_[name] = opt_urls[name]\n      }\n    }\n  }\n}\n\n/**\n * Sets the path prefix or replacement map to use when resolving relative URLs.\n *\n * Note: The order in which replacements are made is not guaranteed.\n *\n * @param {string|Object.<string>} paths The paths.\n */\nspfNetScript.path = function (paths) {\n  var type = spfNetResource.Type.JS\n  spfNetResource.path(type, paths)\n}\n\n/**\n * Map of dependencies used for {@link #require}.\n * @type {!Object.<(string|Array.<string>)>}\n * @private\n */\nspfNetScript.deps_ = {}\n// When built for the bootloader, unconditionally set the map in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.SCRIPT_DEPS, spfNetScript.deps_)\n} else {\n  if (!spfState.has(spfState.Key.SCRIPT_DEPS)) {\n    spfState.set(spfState.Key.SCRIPT_DEPS, spfNetScript.deps_)\n  }\n  spfNetScript.deps_ = /** @type {!Object.<(string|Array.<string>)>} */ (\n      spfState.get(spfState.Key.SCRIPT_DEPS))\n}\n\n/**\n * Map of dependency names to URLs for {@link #require}, used for custom\n * resolution before URL canonicalization.\n * @type {!Object.<string>}\n * @private\n */\nspfNetScript.url_ = {}\n// When built for the bootloader, unconditionally set the map in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.SCRIPT_URL, spfNetScript.url_)\n} else {\n  if (!spfState.has(spfState.Key.SCRIPT_URL)) {\n    spfState.set(spfState.Key.SCRIPT_URL, spfNetScript.url_)\n  }\n  spfNetScript.url_ = /** @type {!Object.<string>} */ (\n      spfState.get(spfState.Key.SCRIPT_URL))\n}\n\nexport default spfNetScript\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/net/script.js","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for dynamically loading stylesheets.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfNetStyle');\n\nimport spfArray from '../array/array'\nimport spfNetResource from '../net/resource'\nimport spfString from '../string/string'\n\nlet spfNetStyle = {}\n\n/**\n * Loads a stylesheet asynchronously and defines a name to use for dependency\n * management and unloading.  See {@link #unload} to remove previously loaded\n * stylesheets.\n *\n * - Subsequent calls to load the same URL will not reload the stylesheet.  To\n *   reload a stylesheet, unload it first with {@link #unload}.  To\n *   unconditionally load a stylesheet, see {@link #get}.\n *\n * - A name must be specified to identify the same stylesheet at different URLs.\n *   (For example, \"main-A.css\" and \"main-B.css\" are both \"main\".)  When a name\n *   is specified, all other stylesheets with the same name will be unloaded.\n *   This allows switching between versions of the same stylesheet at different\n *   URLs.\n *\n * - A callback can be specified to execute once the stylesheet has loaded.  The\n *   callback will be executed each time, even if the stylesheet is not\n *   reloaded.  NOTE: Unlike scripts, this callback is best effort and is\n *   supported in the following browser versions: IE 6, Chrome 19, Firefox 9,\n *   Safari 6.\n *\n * @param {string} url URL of the stylesheet to load.\n * @param {string} name Name to identify the stylesheet.\n * @param {Function=} opt_fn Optional callback function to execute when the\n *     stylesheet is loaded.\n */\nspfNetStyle.load = function (url, name, opt_fn) {\n  var type = spfNetResource.Type.CSS\n  spfNetResource.load(type, url, name, opt_fn)\n}\n\n/**\n * Unloads a stylesheet identified by dependency name.  See {@link #load}.\n *\n * @param {string} name The dependency name.\n */\nspfNetStyle.unload = function (name) {\n  var type = spfNetResource.Type.CSS\n  spfNetResource.unload(type, name)\n}\n\n/**\n * Discovers existing stylesheets in the document and registers them as loaded.\n */\nspfNetStyle.discover = function () {\n  var type = spfNetResource.Type.CSS\n  spfNetResource.discover(type)\n}\n\n/**\n * Unconditionally loads a stylesheet by dynamically creating an element and\n * appending it to the document without regard for whether it has been loaded\n * before. A stylesheet directly loaded by this method cannot be unloaded by\n * name.  Compare to {@link #load}.\n *\n * @param {string} url URL of the stylesheet to load.\n * @param {Function=} opt_fn Function to execute when loaded.\n */\nspfNetStyle.get = function (url, opt_fn) {\n  // NOTE: Callback execution depends on onload support and is best effort.\n  // Chrome 19, Safari 6, Firefox 9, Opera and IE 5.5 support stylesheet onload.\n  var type = spfNetResource.Type.CSS\n  spfNetResource.create(type, url, opt_fn)\n}\n\n/**\n * Prefetchs one or more stylesheets; the stylesheets will be requested but not\n * loaded.  Use to prime the browser cache and avoid needing to request the\n * stylesheet when subsequently loaded.  See {@link #load}.\n *\n * @param {string|Array.<string>} urls One or more stylesheet URLs to prefetch.\n */\nspfNetStyle.prefetch = function (urls) {\n  var type = spfNetResource.Type.CSS\n  // Convert to an array if needed.\n  urls = spfArray.toArray(urls)\n  spfArray.each(urls, function (url) {\n    spfNetResource.prefetch(type, url)\n  })\n}\n\n/**\n * Evaluates style text and defines a name to use for management.\n *\n * - Subsequent calls to evaluate the same text will not re-evaluate the style.\n *   To unconditionally evalute a style, see {@link #exec}.\n *\n * @param {string} text The text of the style.\n * @param {string} name Name to identify the style.\n * @return {undefined}\n */\nspfNetStyle.eval = function (text, name) {\n  var type = spfNetResource.Type.CSS\n  spfNetResource.eval(type, text, name)\n}\n\n/**\n * Unconditionally evaluates style text.  See {@link #eval}.\n *\n * @param {string} text The text of the style.\n */\nspfNetStyle.exec = function (text) {\n  var type = spfNetResource.Type.CSS\n  spfNetResource.exec(type, text)\n}\n\n/**\n * Sets the path prefix or replacement map to use when resolving relative URLs.\n *\n * Note: The order in which replacements are made is not guaranteed.\n *\n * @param {string|Object.<string>} paths The paths.\n */\nspfNetStyle.path = function (paths) {\n  var type = spfNetResource.Type.CSS\n  spfNetResource.path(type, paths)\n}\n\nexport default spfNetStyle\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/net/style.js","// Copyright 2013 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Simple asynchronous queued task execution.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport {spfBase} from '../base'\nimport spfConfig from '../config'\nimport spfState from '../state'\nimport spfString from '../string/string'\nlet spfTasks = {}\n\n// goog.provide('spfTasks');\n\n// goog.require('spf');\n// goog.require('spfConfig');\n// goog.require('spfState');\n// goog.require('spfString');\n// goog.require('spfTracing');\n\n/**\n * Adds a task to a queue to be executed asynchronously.\n *\n * @param {string} key The key to identify the task queue.\n * @param {!Function} fn The function to execute for this task.\n * @param {number=} opt_delay The time in milliseconds to wait before executing\n *     the function; defaults to 0.\n * @return {number} The number of tasks in the queue afterwards.\n */\nspfTasks.add = function (key, fn, opt_delay) {\n  var queues = spfTasks.queues_\n  var queue = queues[key]\n  if (key && fn) {\n    if (!queue) {\n      queue = queues[key] = spfTasks.createQueue_()\n    }\n    var task = spfTasks.createTask_(fn, opt_delay || 0)\n    return queue.items.push(task)\n  }\n  return (queue && queue.items.length) || 0\n}\n\n/**\n * Runs queued tasks, if not already running.\n *\n * @param {string} key The key to identify the task queue.\n * @param {boolean=} opt_sync Whether to execute the queued tasks synchronously;\n *     defaults to false.\n */\nspfTasks.run = function (key, opt_sync) {\n  var queue = spfTasks.queues_[key]\n  if (queue) {\n    var active = !!queue.scheduledKey || !!queue.timeoutKey\n    var suspended = !(queue.semaphore > 0)\n    if (!suspended && (opt_sync || !active)) {\n      spfTasks.do_(key, opt_sync)\n    }\n  }\n}\n\n/**\n * Suspends execution of a running task queue.\n * See {@link #resume}.\n *\n * Queue execution is controlled by values similar to POSIX Semaphores.  Each\n * `suspend` decrements a value, and each `resume` increments it.\n * Queue execution only continues when the values are positive, so while\n * `suspend` may be called multiple times, it must be matched by an equal\n * number of `resume` calls.\n *\n * @param {string} key The key to identify the task queue.\n */\nspfTasks.suspend = function (key) {\n  var queue = spfTasks.queues_[key]\n  if (queue) {\n    queue.semaphore--\n  }\n}\n\n/**\n * Resumes execution of a running task queue.\n * See {@link #suspend}.\n *\n * Queue execution is controlled by values similar to POSIX Semaphores.  Each\n * `suspend` decrements a value, and each `resume` increments it.\n * Queue execution only continues when the values are positive, so while\n * `suspend` may be called multiple times, it much be matched by an equal\n * number of `resume` calls.\n *\n * @param {string} key The key to identify the task queue.\n * @param {boolean=} opt_sync Whether to execute the queued tasks synchronously;\n *     defaults to false.\n */\nspfTasks.resume = function (key, opt_sync) {\n  var queue = spfTasks.queues_[key]\n  if (queue) {\n    queue.semaphore++\n    spfTasks.run(key, opt_sync)\n  }\n}\n\n/**\n * Cancels execution of a running task queue.\n *\n * @param {string} key The key to identify the task queue.\n */\nspfTasks.cancel = function (key) {\n  var queue = spfTasks.queues_[key]\n  if (queue) {\n    spfTasks.clearAsyncTasks_(queue)\n    delete spfTasks.queues_[key]\n  }\n}\n\n/**\n * Cancels execution of all current task queues, optionally limited to\n * with a given key prefix and optionally skipping the given key.\n *\n * @param {string=} opt_keyPrefix The prefix of the tasks to be canceled.\n * @param {string=} opt_skipKey The key of the task queue that should not\n *     be canceled.\n */\nspfTasks.cancelAllExcept = function (opt_keyPrefix, opt_skipKey) {\n  var keyPrefix = opt_keyPrefix || ''\n  for (var key in spfTasks.queues_) {\n    if (opt_skipKey != key && spfString.startsWith(key, keyPrefix)) {\n      spfTasks.cancel(key)\n    }\n  }\n}\n\n/**\n * Gets a unique key for an object.  Mutates the object to store the key so\n * that multiple calls for the same object will return the same key.\n *\n * @param {Object} obj The object to get a unique key for.\n * @return {string} The unique key.\n */\nspfTasks.key = function (obj) {\n  var uid = parseInt(spfState.get(spfState.Key.TASKS_UID), 10) || 0\n  uid++\n  return obj['spf-key'] || (\n      obj['spf-key'] = '' + spfState.set(spfState.Key.TASKS_UID, uid))\n}\n\n/**\n * @param {string} key The key to identify the task queue.\n * @param {boolean=} opt_sync Whether to execute the queued tasks synchronously;\n *     defaults to false.\n * @private\n */\nspfTasks.do_ = function (key, opt_sync) {\n  var queue = spfTasks.queues_[key]\n  if (queue) {\n    spfTasks.clearAsyncTasks_(queue)\n    if (queue.semaphore > 0 && queue.items.length) {\n      var task = queue.items[0]\n      if (task) {\n        var next = spfBase.bind(spfTasks.do_, null, key, opt_sync)\n        var step = spfBase.bind(function (nextFn, taskFn) {\n          taskFn()\n          nextFn()\n        }, null, next)\n        if (opt_sync) {\n          queue.items.shift()\n          step(task.fn)\n        } else {\n          spfTasks.scheduleTask_(queue, task, step)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Schedule a task for asynchronous execution.\n * @param {!spfTasks.Queue} queue The current queue being executed.\n * @param {!spfTasks.Task} task The task to be scheduled.\n * @param {!Function} step The task execution function.\n * @private\n */\nspfTasks.scheduleTask_ = function (queue, task, step) {\n  if (task.delay) {\n    // For a delay an empty step is run, and the task's functionality is saved\n    // for the next step.\n    var fn = spfBase.bind(step, null, spfBase.nullFunction)\n    queue.timeoutKey = setTimeout(fn, task.delay)\n    // Instead of removing the task from the queue, set it's delay to 0 so it\n    // will be processed traditionally on the next step.\n    task.delay = 0\n  } else {\n    queue.items.shift()\n    var fn = spfBase.bind(step, null, task.fn)\n    var scheduler = /** @type {spfBase.TaskScheduler} */ (\n        spfConfig.get('advanced-task-scheduler'))\n    var addTask = scheduler && scheduler['addTask']\n    if (addTask) {\n      queue.scheduledKey = addTask(fn)\n    } else {\n      queue.timeoutKey = setTimeout(fn, 0)\n    }\n  }\n}\n\n/**\n * Clear the current asynchronous tasks.\n * @param {!spfTasks.Queue} queue The queue.\n * @private\n */\nspfTasks.clearAsyncTasks_ = function (queue) {\n  if (queue.scheduledKey) {\n    var scheduler = /** @type {spfBase.TaskScheduler} */ (\n        spfConfig.get('advanced-task-scheduler'))\n    var cancelTask = scheduler && scheduler['cancelTask']\n    if (cancelTask) {\n      cancelTask(queue.scheduledKey)\n    }\n    queue.scheduledKey = 0\n  }\n  if (queue.timeoutKey) {\n    clearTimeout(queue.timeoutKey)\n    queue.timeoutKey = 0\n  }\n}\n\n/**\n * Type definition for a SPF task.\n * - fn: The function to execute.\n * - delay: The time in milliseconds to wait before executing the function.\n *\n * @typedef {{\n *   fn: !Function,\n *   delay: number\n * }}\n */\nspfTasks.Task\n\n/**\n * Type definition for a SPF task queue.\n * - items: The ordered list of tasks.\n * - scheduledKey: A key to track the current scheduled task.\n * - timeoutKey: A key to track the current task delayed by a timeout.\n * - semaphore: A POSIX Semaphore style value used to control suspending and\n *     resuming a running queue.\n *\n * @typedef {{\n *   items: !Array.<spfTasks.Task>,\n *   scheduledKey: number,\n *   timeoutKey: number,\n *   semaphore: number\n * }}\n */\nspfTasks.Queue\n\n/**\n * @return {spfTasks.Queue}\n * @private\n */\nspfTasks.createQueue_ = function () {\n  return {items: [], scheduledKey: 0, timeoutKey: 0, semaphore: 1}\n}\n\n/**\n * @param {!Function} fn The function to execute.\n * @param {number} delay The time in milliseconds to wait before executing\n *     the function.\n * @return {spfTasks.Task}\n * @private\n */\nspfTasks.createTask_ = function (fn, delay) {\n  return {fn: fn, delay: delay}\n}\n\n/**\n * @type {!Object.<string, spfTasks.Queue>}\n * @private\n */\nspfTasks.queues_ = {}\n\nexport default spfTasks\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/tasks/tasks.js","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 96\n// module chunks = 0 6","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 97\n// module chunks = 0 6","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 98\n// module chunks = 0 6","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 103\n// module chunks = 0 6","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-array-iter.js\n// module id = 104\n// module chunks = 0 2","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-call.js\n// module id = 105\n// module chunks = 0 2","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-detect.js\n// module id = 106\n// module chunks = 0 2","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator-method.js\n// module id = 108\n// module chunks = 0 2","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 109\n// module chunks = 0 6","/**\n * @fileoverview Element dataset manipulation functions.\n * See {@link http://www.w3.org/TR/html5/Overview.html#dom-dataset}.\n *\n */\n\n// goog.provide('spfDomDataset');\n\nlet spfDomDataset = {}\n\n/**\n * Gets a custom data attribute from a node. The key should be in\n * camelCase format (e.g \"keyName\" for the \"data-key-name\" attribute).\n *\n * @param {Node} node DOM node to get the custom data attribute from.\n * @param {string} key Key for the custom data attribute.\n * @return {?string} The attribute value, if it exists.\n */\nspfDomDataset.get = function (node, key) {\n  if (node.dataset) {\n    return node.dataset[key]\n  } else {\n    return node.getAttribute('data-' + spf.string.toSelectorCase(key))\n  }\n}\n\n/**\n * Sets a custom data attribute on a node. The key should be in\n * camelCase format (e.g \"keyName\" for the \"data-key-name\" attribute).\n *\n * @param {Node} node DOM node to set the custom data attribute on.\n * @param {string} key Key for the custom data attribute.\n * @param {string} val Value for the custom data attribute.\n */\nspfDomDataset.set = function (node, key, val) {\n  if (node.dataset) {\n    node.dataset[key] = val\n  } else {\n    node.setAttribute('data-' + spf.string.toSelectorCase(key), val)\n  }\n}\n\nexport default spfDomDataset\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/dom/dataset.js","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions to handle pushstate-based navigation.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport {spfBase, SPF_DEBUG} from '../base'\nimport spfArray from '../array/array'\nimport spfCache from '../cache/cache'\nimport spfConfig from '../config'\nimport spfDebug from '../debug/debug'\nimport spfDom from '../dom/dom'\nimport spfDomClasslist from '../dom/classlist'\nimport spfDomDataset from '../dom/dataset'\nimport spfHistory from '../history/history'\nimport spfNavRequest from '../nav/request'\nimport spfNavResponse from '../nav/response'\nimport spfState from '../state'\nimport spfString from '../string/string'\nimport spfTasks from '../tasks/tasks'\nimport spfUrl from '../url/url'\n\nlet spfNav = {}\n// goog.provide('spfNav');\n\n/**\n * Initializes (enables) pushState navigation.\n */\nspfNav.init = function () {\n  // Initialize history management.\n  spfHistory.init(spfNav.handleHistory_, spfNav.dispatchError_)\n  // If already initialized, or running in an unsupported environment, return.\n  if (spfState.get(spfState.Key.NAV_INIT) || !document.addEventListener) {\n    return\n  }\n  // Set some basic state.\n  spfState.set(spfState.Key.NAV_INIT, true)\n  spfState.set(spfState.Key.NAV_INIT_TIME, spfBase.now())\n  spfState.set(spfState.Key.NAV_COUNTER, 0)\n  // Handle clicks for navigating when a spf-link element click happens.\n  document.addEventListener('click', spfNav.handleClick_, false)\n  spfState.set(spfState.Key.NAV_CLICK_LISTENER, spfNav.handleClick_)\n  // Handle mousedowns for prefetching when a spf-link element click starts.\n  if (spfConfig.get('experimental-prefetch-mousedown') &&\n      !spfNav.isTouchCapablePlatform_()) {\n    document.addEventListener('mousedown', spfNav.handleMouseDown_, false)\n    spfState.set(spfState.Key.NAV_MOUSEDOWN_LISTENER,\n                  spfNav.handleMouseDown_)\n  }\n  // Handle scrolls for preventing early scrolling during history changes.\n  document.addEventListener('scroll', spfNav.handleScroll_, false)\n  spfState.set(spfState.Key.NAV_SCROLL_LISTENER, spfNav.handleScroll_)\n}\n\n/**\n * Disposes (disables) pushState navigation.\n */\nspfNav.dispose = function () {\n  spfNav.cancel()\n  if (spfState.get(spfState.Key.NAV_INIT)) {\n    if (document.removeEventListener) {\n      var handleClick = /** @type {function(Event)} */ (\n          spfState.get(spfState.Key.NAV_CLICK_LISTENER))\n      document.removeEventListener('click', handleClick, false)\n      var handleMouseDown = /** @type {function(Event)} */ (\n          spfState.get(spfState.Key.NAV_MOUSEDOWN_LISTENER))\n      document.removeEventListener('mousedown', handleMouseDown, false)\n      var handleScroll = /** @type {function(Event)} */ (\n          spfState.get(spfState.Key.NAV_SCROLL_LISTENER))\n      document.removeEventListener('scroll', handleScroll, false)\n    }\n    spfState.set(spfState.Key.NAV_CLICK_LISTENER, null)\n    spfState.set(spfState.Key.NAV_MOUSEDOWN_LISTENER, null)\n    spfState.set(spfState.Key.NAV_SCROLL_LISTENER, null)\n    spfState.set(spfState.Key.NAV_SCROLL_TEMP_POSITION, null)\n    spfState.set(spfState.Key.NAV_SCROLL_TEMP_URL, null)\n    spfState.set(spfState.Key.NAV_INIT, false)\n    spfState.set(spfState.Key.NAV_INIT_TIME, null)\n    spfState.set(spfState.Key.NAV_COUNTER, null)\n  }\n  spfHistory.dispose()\n}\n\n/**\n * Walks up the DOM hierarchy, returning the first ancestor that has the\n * link class.\n *\n * @param {Node|EventTarget} element The DOM node to start with.\n * @return {Node} DOM node with the link class or null if not found.\n * @private\n */\nspfNav.getAncestorWithLinkClass_ = function (element) {\n  return spfDom.getAncestor(element, function (node) {\n    return spfDomClasslist.contains(node, /** @type {string} */ (\n        spfConfig.get('link-class')))\n  })\n}\n\n/**\n * Walks up the DOM hierarchy, returning the first ancestor that has the\n * nolink class.\n *\n * @param {Node|EventTarget} element The DOM node to start with.\n * @return {Node} DOM node with the nolink class or null if not found.\n * @private\n */\nspfNav.getAncestorWithNoLinkClass_ = function (element) {\n  return spfDom.getAncestor(element, function (node) {\n    return spfDomClasslist.contains(node, /** @type {string} */ (\n        spfConfig.get('nolink-class')))\n  })\n}\n\n/**\n * Walks up the DOM hierarchy, returning the first ancestor with a href.\n *\n * @param {Node|EventTarget} element The DOM node to start with.\n * @param {Node} parent The DOM node to end with.\n * @return {Node} DOM node with a href or null if not found.\n * @private\n */\nspfNav.getAncestorWithHref_ = function (element, parent) {\n  return spfDom.getAncestor(element, function (node) {\n    // Images in IE10 can have an href.\n    return node.href && node.tagName.toLowerCase() != 'img'\n  }, parent)\n}\n\n/**\n * Given a mouse event, try to get the corresponding navigation URL.\n *\n * @param {Event} evt The click event.\n * @return {?string} Navigation url of event if applicable.\n * @private\n */\nspfNav.getEventURL_ = function (evt) {\n  // Ignore clicks with modifier keys.\n  if (evt.metaKey || evt.altKey || evt.ctrlKey || evt.shiftKey) {\n    spfDebug.debug('    ignoring click with modifier key')\n    return null\n  }\n  // Ignore clicks with alternate buttons (left = 0, middle = 1, right = 2).\n  if (evt.button > 0) {\n    spfDebug.debug('    ignoring click with alternate button')\n    return null\n  }\n  // Ignore clicks on targets without the link class or not within\n  // a container with the link class.\n  var linkEl = spfNav.getAncestorWithLinkClass_(evt.target)\n  if (!linkEl) {\n    spfDebug.debug('    ignoring click without link class')\n    return null\n  }\n  // Ignore clicks on targets with the nolink class or within\n  // a container with the nolink class.\n  if (spfConfig.get('nolink-class')) {\n    var nolinkEl = spfNav.getAncestorWithNoLinkClass_(evt.target)\n    if (nolinkEl) {\n      spfDebug.debug('    ignoring click with nolink class')\n      return null\n    }\n  }\n  var target = spfNav.getAncestorWithHref_(evt.target, linkEl)\n  // Ignore clicks on targets without an href.\n  if (!target) {\n    spfDebug.debug('    ignoring click without href parent')\n    return null\n  }\n  return target.href\n}\n\n/**\n * Whether this URL is allowed for navigation, according to same-origin security\n * policy.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @return {boolean}\n * @private\n */\nspfNav.isAllowed_ = function (url) {\n  // If the destination is not same-origin, cancel.\n  // TODO(nicksay): Add CORS origin whitelist.\n  var destination = spfUrl.origin(url)\n  if (destination != spfUrl.origin(window.location.href)) {\n    spfDebug.warn('destination not same-origin')\n    return false\n  }\n  return true\n}\n\n/**\n * Whether this URL is eligible for navigation, according to the configured\n * limits and lifetime.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @return {boolean}\n * @private\n */\nspfNav.isEligible_ = function (url) {\n  // If navigation is requested but SPF is not initialized, cancel.\n  if (!spfState.get(spfState.Key.NAV_INIT)) {\n    spfDebug.warn('navigation not initialized')\n    return false\n  }\n  // If a session limit has been set and reached, cancel.\n  var count = parseInt(spfState.get(spfState.Key.NAV_COUNTER), 10) || 0\n  count++\n  var limit = parseInt(spfConfig.get('navigate-limit'), 10)\n  limit = isNaN(limit) ? Infinity : limit\n  if (count > limit) {\n    spfDebug.warn('navigation limit reached')\n    return false\n  }\n  // If a session lifetime has been set and reached, cancel.\n  var timestamp = parseInt(spfState.get(spfState.Key.NAV_INIT_TIME), 10)\n  timestamp--\n  var age = spfBase.now() - timestamp\n  var lifetime = parseInt(spfConfig.get('navigate-lifetime'), 10)\n  lifetime = isNaN(lifetime) ? Infinity : lifetime\n  if (age > lifetime) {\n    spfDebug.warn('navigation lifetime reached')\n    return false\n  }\n  return true\n}\n\n/**\n * Whether this URL should be handled for navigation (i.e. not same-page\n * hash-based navigation).\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @param {string=} opt_current The current page URL, without the SPF\n *     identifier.\n * @return {boolean}\n * @private\n */\nspfNav.isNavigable_ = function (url, opt_current) {\n  var current = opt_current || window.location.href\n  // Check for transitions between hash URLs.  If the destination\n  // contains a hash and the page is the same, navigation is not handled.\n  if (spfString.contains(url, '#')) {\n    var absoluteUrl = spfUrl.absolute(url)\n    var absoluteCurrent = spfUrl.absolute(current)\n    if (absoluteUrl == absoluteCurrent) {\n      spfDebug.debug('    not handling hash-based navigation')\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Handles page click events on SPF links, adds pushState history entries for\n * them, and navigates.\n *\n * @param {Event} evt The click event.\n * @private\n */\nspfNav.handleClick_ = function (evt) {\n  spfDebug.debug('nav.handleClick ', 'evt=', evt)\n  // Allow other click handlers to cancel navigation.\n  if (evt.defaultPrevented) {\n    return\n  }\n  var url = spfNav.getEventURL_(evt)\n  // Ignore clicks without a URL.\n  if (!url) {\n    return\n  }\n  url = spfUrl.appendPersistentParameters(url)\n  // Ignore clicks if the URL is not allowed (e.g. cross-domain).\n  if (!spfNav.isAllowed_(url)) {\n    return\n  }\n  // Ignore clicks if the URL is not eligible (e.g. limit reached).\n  if (!spfNav.isEligible_(url)) {\n    return\n  }\n  // Ignore clicks if the \"click\" event is canceled.\n  if (!spfNav.dispatchClick_(url, evt.target)) {\n    return\n  }\n\n  // Navigate to the URL.\n  var options = spfNav.createOptions_()\n  var info = new spfNav.Info()\n  spfNav.navigate_(url, options, info)\n  // Prevent the default browser navigation to avoid reloads.\n  evt.preventDefault()\n}\n\n/**\n * Handles page mousedown events on SPF links and prefetches them if possible.\n *\n * @param {Event} evt The mousedown event.\n * @private\n */\nspfNav.handleMouseDown_ = function (evt) {\n  spfDebug.debug('nav.handleMouseDown ', 'evt=', evt)\n  var url = spfNav.getEventURL_(evt)\n  // Ignore clicks without a URL.\n  if (!url) {\n    return\n  }\n  // Allow other mousedown handlers to run before issuing a prefetch request.\n  setTimeout(function () {\n    spfNav.prefetch(/** @type {string} */(url))\n  }, 0)\n}\n\n/**\n * Handles page scroll events to ensure history entry changes do not\n * prematurally scroll the page before content is updated.\n *\n * @param {Event} evt The scroll event.\n * @private\n */\nspfNav.handleScroll_ = function (evt) {\n  var position = spfNav.getScrollTempPosition_()\n  spfNav.clearScrollTempPosition_()\n  if (position) {\n    spfDebug.debug('    returning to saved scroll temp position', position)\n    window.scroll.apply(null, position)\n  }\n}\n\n/**\n * Handles when the active history entry changes.\n *\n * @param {string} url The URL the user is browsing to.\n * @param {Object=} opt_state An optional state object associated with the URL.\n * @private\n */\nspfNav.handleHistory_ = function (url, opt_state) {\n  spfDebug.debug('nav.handleHistory ', '(url=', url, 'state=', opt_state, ')')\n  var info = new spfNav.Info({\n    current: opt_state && opt_state['spf-current'],\n    history: true,\n    position: opt_state && opt_state['spf-position'],\n    referer: opt_state && opt_state['spf-referer'],\n    reverse: !!(opt_state && opt_state['spf-back'])\n  })\n  // If the reload-identifier is present, remove it to prevent confusing data.\n  var reloadId = /** @type {?string} */ (spfConfig.get('reload-identifier'))\n  if (reloadId) {\n    url = spfUrl.removeParameters(url, [reloadId])\n  }\n  // Reload if the URL is not allowed (e.g. cross-domain).\n  if (!spfNav.isAllowed_(url)) {\n    spfNav.reload(url, spfNav.ReloadReason.FORBIDDEN)\n    return\n  }\n  // Reload if the URL is not eligible (e.g. limit reached).\n  if (!spfNav.isEligible_(url)) {\n    spfNav.reload(url, spfNav.ReloadReason.INELIGIBLE)\n    return\n  }\n  // Ignore the change if the \"history\" event is canceled.\n  if (!spfNav.dispatchHistory_(url, info.referer, info.current)) {\n    return\n  }\n  // If navigating for this history change and a scroll position is set, ensure\n  // the browser doesn't scroll too early.  The browser default behavior is to\n  // scroll to the position when pushState was called just after a popState\n  // event is fired.  This is okay only if using history to move around a single\n  // page or if all content can be rendered synchronously during the popState\n  // event handling.  Since navigation content updates have at least one\n  // asynchronous break, avoid this by saving the current page position and\n  // scrolling immediately back to it when the browser scrolls early.\n  // The proper position will be set once content is updated.\n  if (info.position) {\n    spfNav.setScrollTempPosition_()\n  }\n  // Navigate to the URL.\n  // NOTE: The persistent parameters are not appended here because they should\n  // already be set on the URL if necessary.\n  var options = spfNav.createOptions_()\n  spfNav.navigate_(url, options, info)\n}\n\n/**\n * Navigates to a URL.\n *\n * A pushState history entry is added for the URL, and if successful, the\n * navigation is performed.  If not, the browser is reloaded to the URL.\n * During the navigation, first the content is requested.  If the reponse is\n * sucessfully parsed, it is processed.  If not, the browser is reloaded to\n * the URL.  Only a single navigation request can be in flight at once.  If a\n * second URL is navigated to while a first is still pending, the first will be\n * cancelled.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @param {spfBase.RequestOptions=} opt_options Optional request options object.\n */\nspfNav.navigate = function (url, opt_options) {\n  spfDebug.debug('nav.navigate ', '(url=', url, 'options=', opt_options, ')')\n  // Ignore navigation to an empty URL.\n  if (!url) {\n    return\n  }\n  url = spfUrl.appendPersistentParameters(url)\n  // Reload if the URL is not allowed (e.g. cross-domain).\n  if (!spfNav.isAllowed_(url)) {\n    spfNav.reload(url, spfNav.ReloadReason.FORBIDDEN)\n    return\n  }\n  // Reload if the URL is not eligible (e.g. limit reached).\n  if (!spfNav.isEligible_(url)) {\n    spfNav.reload(url, spfNav.ReloadReason.INELIGIBLE)\n    return\n  }\n  // Navigate to the URL.\n  var options = spfNav.createOptions_(opt_options)\n  var info = new spfNav.Info()\n  spfNav.navigate_(url, options, info)\n}\n\n/**\n * Performs navigation to a URL.\n * See {@link #navigate}, {@link #handleClick}, and {@link #handleHistory}.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @private.\n */\nspfNav.navigate_ = function (url, options, info) {\n  spfDebug.info('nav.navigate_ ', url, options, info)\n\n  // Abort previous navigation, if needed.\n  spfNav.cancel()\n\n  // If the URL is not navigable, attempt to scroll to support hash navigation.\n  if (!spfNav.isNavigable_(url, info.current)) {\n    spfDebug.debug('non-navigable, just scroll')\n    // Add a history entry beforehand to save current position, if needed.\n    if (!info.history) {\n      var handleError = spfBase.bind(spfNav.handleNavigateError_, null,\n                                 options)\n      spfNav.navigateAddHistory_(url, info.referer, handleError)\n    }\n    // Then attempt to scroll.\n    spfNav.navigateScroll_(url, info)\n    return\n  }\n\n  // Reload if the \"request\" event is canceled.\n  if (!spfNav.dispatchRequest_(url, info.referer, info.current, options)) {\n    spfNav.reload(url, spfNav.ReloadReason.REQUEST_CANCELED)\n    return\n  }\n\n  // Set the navigation counter.\n  var count = (parseInt(spfState.get(spfState.Key.NAV_COUNTER), 10) || 0) + 1\n  spfState.set(spfState.Key.NAV_COUNTER, count)\n\n  // Abort all ongoing prefetch requests, except for the navigation one if it\n  // exists.  This will reduce network contention for the navigation request\n  // by eliminating concurrent reqeuests that will not be used.\n  spfNav.cancelAllPrefetchesExcept(url)\n  // Cancel all preprocessing being done for completed single or ongoing\n  // multipart prefetch response, except for the navigation one if it exists.\n  // If the navigation one is a completed single response, the task will be\n  // canceled in spfNav.navigatePromotePrefetch_.  If it is an ongoing\n  // multipart response, allow it to continue processing until the completed.\n  var absoluteUrl = spfUrl.absolute(url)\n  var preprocessKey = spfNav.preprocessKey(absoluteUrl)\n  spfTasks.cancelAllExcept('preprocess', preprocessKey)\n\n  // Set the current nav request to be the prefetch, if it exists.\n  var prefetches = spfNav.prefetches_()\n  var prefetchXhr = prefetches[absoluteUrl]\n  spfState.set(spfState.Key.NAV_REQUEST, prefetchXhr)\n  // Make sure there is no current nav promotion set.\n  spfState.set(spfState.Key.NAV_PROMOTE, null)\n  spfState.set(spfState.Key.NAV_PROMOTE_TIME, null)\n\n  // Check the prefetch XHR.  If it is not done, promote the prefetch\n  // to navigate.  Otherwise, navigate immediately.\n  if (prefetchXhr && prefetchXhr.readyState != 4) {\n    // Begin the prefetch promotion process.\n    spfNav.navigatePromotePrefetch_(url, options, info)\n  } else {\n    spfNav.navigateSendRequest_(url, options, info)\n  }\n}\n\n/**\n * Promotes a prefetch request to a navigation after it completes.\n * See {@link navigate}.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @private\n */\nspfNav.navigatePromotePrefetch_ = function (url, options, info) {\n  spfDebug.debug('nav.navigatePromotePrefetch_ ', url)\n  var preprocessKey = spfNav.preprocessKey(url)\n  var promoteKey = spfNav.promoteKey(url)\n  spfState.set(spfState.Key.NAV_PROMOTE, url)\n  spfState.set(spfState.Key.NAV_PROMOTE_TIME, spfBase.now())\n  spfTasks.cancel(preprocessKey)\n  spfTasks.run(promoteKey, true)\n\n  // After starting the promote tasks, check for new navigation that needs\n  // a history entry added.\n  if (!info.history) {\n    var handleError = spfBase.bind(spfNav.handleNavigateError_, null,\n                               options)\n    spfNav.navigateAddHistory_(url, info.referer, handleError)\n  }\n}\n\n/**\n * Send the navigation request.\n * See {@link navigate}.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @private\n */\nspfNav.navigateSendRequest_ = function (url, options, info) {\n  var handleError = spfBase.bind(spfNav.handleNavigateError_, null,\n                             options)\n  var handlePart = spfBase.bind(spfNav.handleNavigatePart_, null,\n                            options, info)\n  var handleSuccess = spfBase.bind(spfNav.handleNavigateSuccess_, null,\n                               options, info)\n\n  // Before sending a new navigation request, clear previous resource timings\n  // to avoid (1) hitting buffer size limits or (2) accidentally getting timings\n  // for a previous request in Chrome, where the API is asynchronous and the\n  // latest values will not be available immediately.\n  // Only do this for navigations to avoid removing unrelated resource timings\n  // during prefetch or load calls.\n  // As an advanced option, allow timings to persist if desired.\n  if (!spfConfig.get('advanced-navigate-persist-timing')) {\n    spfNav.clearResourceTimings_()\n  }\n\n  info.type = 'navigate'\n  if (info.history) {\n    info.type += info.reverse ? '-back' : '-forward'\n  }\n\n  var xhr = spfNavRequest.send(url, {\n    method: options['method'],\n    headers: options['headers'],\n    onPart: handlePart,\n    onError: handleError,\n    onSuccess: handleSuccess,\n    postData: options['postData'],\n    type: info.type,\n    current: info.current,\n    referer: info.referer\n  })\n  spfState.set(spfState.Key.NAV_REQUEST, xhr)\n\n  // After the request has been sent, check for new navigation that needs\n  // a history entry added.  Do this after sending the XHR to have the\n  // correct referer for regular navigation (but not history navigation).\n  if (!info.history) {\n    spfNav.navigateAddHistory_(url, info.referer, handleError)\n  }\n}\n\n/**\n * Scrolls to a target specified by a URL hash, a position specified in the\n * navigation info object, or the top of the page if the window has not yet\n * been scrolled as part of this navigation.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNav.Info} info The navigation info object.\n * @private\n */\nspfNav.navigateScroll_ = function (url, info) {\n  // If a position is defined, scroll to it.\n  if (info.position) {\n    spfDebug.debug('    clearing scroll temp position')\n    spfNav.clearScrollTempPosition_()\n    spfDebug.debug('    scrolling to position', info.position)\n    window.scroll.apply(null, info.position)\n    info.scrolled = true\n    return\n  }\n  var result = spfString.partition(url, '#')\n  // If a non-empty hash is found, attempt to scroll the element into view.\n  // Otherwise, scroll to the top of the page.\n  if (result[2]) {\n    var el = document.getElementById(result[2])\n    if (el) {\n      spfDebug.debug('    clearing scroll temp position')\n      spfNav.clearScrollTempPosition_()\n      spfDebug.debug('    scrolling into view', result[2])\n      el.scrollIntoView()\n      info.scrolled = true\n    }\n  } else if (!info.scrolled) {\n    spfDebug.debug('    clearing scroll temp position')\n    spfNav.clearScrollTempPosition_()\n    spfDebug.debug('    scrolling to top')\n    window.scroll(0, 0)\n    info.scrolled = true\n  }\n}\n\n/**\n * Add the navigate state to the history.\n *\n * @param {string} url The URL to navigate to, without the SPF identifier.\n * @param {string} referer The Referrer URL, without the SPF identifier.\n * @param {function(string, Error)} handleError The error handler.\n * @private\n */\nspfNav.navigateAddHistory_ = function (url, referer, handleError) {\n  try {\n    // Before adding the new history entry, update the existing one with the\n    // current scroll position (and timestamp, always done automatically).\n    var position = [window.pageXOffset, window.pageYOffset]\n    var updateState = {'spf-position': position}\n    spfDebug.debug('    updating history to scroll position', position)\n    spfHistory.replace(null, updateState)\n    // Add the new history entry, unless the URL is the same as the current.\n    // (This can happen when clicking a hash-based target multiple times.)\n    if (spfUrl.absolute(url, true) != window.location.href) {\n      var newState = {'spf-referer': referer}\n      spfHistory.add(url, newState)\n    }\n  } catch (err) {\n    // Abort the navigation.\n    spfNav.cancel()\n    // An error is thrown if the state object is too large or if the\n    // URL is not in the same domain.\n    spfDebug.error('error caught, redirecting ',\n                    '(url=', url, 'err=', err, ')')\n    handleError(url, err)\n  }\n}\n\n/**\n * Handles a navigation error.\n * See {@link navigate}.\n *\n * @param {spfBase.RequestOptions} options Request options object.\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {Error} err The Error object.\n * @param {XMLHttpRequest=} opt_xhr The XMLHttpRequest for current error\n * @private\n */\nspfNav.handleNavigateError_ = function (options, url, err, opt_xhr) {\n  spfDebug.warn('navigate error', '(url=', url, ')')\n  spfState.set(spfState.Key.NAV_REQUEST, null)\n  // Ignore the error if the \"error\" event is canceled, but otherwise,\n  // reload the page.\n  if (!spfNav.dispatchError_(url, err, options, undefined, opt_xhr)) {\n    return\n  }\n  spfNav.reload(url, spfNav.ReloadReason.ERROR, err)\n}\n\n/**\n * Handles a navigation partial response.\n * See {@link navigate}.\n *\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse} partial The partial response object.\n * @private\n */\nspfNav.handleNavigatePart_ = function (options, info, url, partial) {\n  // Reload if the \"part process\" event is canceled.\n  if (!spfNav.dispatchPartProcess_(url, partial, options)) {\n    spfNav.reload(url, spfNav.ReloadReason.PART_PROCESS_CANCELED)\n    return\n  }\n\n  // Check for reload responses.\n  if (partial['reload']) {\n    spfNav.reload(url, spfNav.ReloadReason.RESPONSE_RECEIVED)\n    return\n  }\n\n  // Check for redirect responses.\n  if (partial['redirect']) {\n    spfNav.handleNavigateRedirect_(options, partial['redirect'])\n    return\n  }\n\n  try {\n    spfNavResponse.process(url, partial, info, function () {\n      spfNav.dispatchPartDone_(url, partial, options)\n    })\n  } catch (err) {\n    // If an exception is caught during processing, log, execute the error\n    // handler, and bail.\n    spfDebug.debug('    failed to process part', partial)\n    spfNav.handleNavigateError_(options, url, err)\n  }\n}\n\n/**\n * Handles a navigation complete response.\n * See {@link navigate}.\n *\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The response\n *     object, either a complete single or multipart response object.\n * @private\n */\nspfNav.handleNavigateSuccess_ = function (options, info, url, response) {\n  spfState.set(spfState.Key.NAV_REQUEST, null)\n\n  // If this is a navigation from a promotion, manually set the\n  // navigation start time.\n  if (spfState.get(spfState.Key.NAV_PROMOTE) == info.original) {\n    var timing = response['timing'] || {}\n    timing['navigationStart'] = spfState.get(spfState.Key.NAV_PROMOTE_TIME)\n    timing['spfPrefetched'] = true\n  }\n\n  // If a multipart response was received, all processing is already done,\n  // so don't fire the \"process\" event/callbacks.\n  var multipart = response['type'] == 'multipart'\n  if (!multipart) {\n    // Reload if the \"process\" event is canceled.\n    if (!spfNav.dispatchProcess_(url, response, options)) {\n      spfNav.reload(url, spfNav.ReloadReason.PROCESS_CANCELED)\n      return\n    }\n\n    // Check for reload responses.\n    if (response['reload']) {\n      spfNav.reload(url, spfNav.ReloadReason.RESPONSE_RECEIVED)\n      return\n    }\n\n    // Check for redirect responses.\n    if (response['redirect']) {\n      spfNav.handleNavigateRedirect_(options, response['redirect'])\n      return\n    }\n  }\n\n  // Process the requested response.\n  try {\n    // If a multipart response was received, all processing is already done,\n    // so an empty object is used to ensure events/callbacks are properly\n    // queued after existing ones from any ongoing part prcoessing.\n    var r = /** @type {spfBase.SingleResponse} */ (multipart ? {} : response)\n    spfNavResponse.process(url, r, info, function () {\n      // After processing is complete, save the name for future use.\n      var name = response['name'] || ''\n      if (multipart) {\n        var parts = response['parts']\n        spfArray.each(parts, function (part) {\n          name = part['name'] || name\n        })\n      }\n      spfDomDataset.set(document.body, 'spfName', name)\n      // If this navigation was from history, attempt to scroll to the previous\n      // position after all processing is complete.  This should not be done\n      // earlier because the prevous position might rely on page width/height\n      // that is changed during the processing.\n      // Fallback to scrolling to the top if neither a hash target nor a\n      // history position exists and the window was not previously scrolled\n      // during response processing.\n      spfNav.navigateScroll_(url, info)\n      spfNav.dispatchDone_(url, response, options)\n    })\n  } catch (err) {\n    // If an exception is caught during processing, log, execute the error\n    // handler and bail.\n    spfDebug.debug('    failed to process response', response)\n    spfNav.handleNavigateError_(options, url, err)\n  }\n}\n\n/**\n * Handles a redirect responses on navigation requests.\n *\n * @param {spfBase.RequestOptions} options Request options object.\n * @param {string} redirectUrl The new URL to be redirected to.\n * @private\n */\nspfNav.handleNavigateRedirect_ = function (options, redirectUrl) {\n  //\n  // TODO(nicksay): Figure out navigate callbacks + redirects.\n  //\n  // Replace the current history entry with the redirect,\n  // executing the callback to trigger the next navigation.\n  try {\n    // Persist the url hash to mirror browser redirects.\n    redirectUrl = redirectUrl + window.location.hash\n    spfHistory.replace(redirectUrl, null, true)\n  } catch (err) {\n    spfNav.cancel()\n    spfDebug.error('error caught, reloading ',\n                    '(url=', redirectUrl, 'err=', err, ')')\n    spfNav.handleNavigateError_(options, redirectUrl, err)\n  }\n}\n\n/**\n * Cancels the current navigation request, if any.\n */\nspfNav.cancel = function () {\n  var xhr = /** @type {XMLHttpRequest} */ (\n      spfState.get(spfState.Key.NAV_REQUEST))\n  if (xhr) {\n    spfDebug.warn('aborting previous navigate ',\n                   'xhr=', xhr)\n    xhr.abort()\n    spfState.set(spfState.Key.NAV_REQUEST, null)\n  }\n}\n\n/**\n * Executes an external callback and checks whether the callback was canceled\n * with an explicit return value of `false`.\n *\n * @param {Function|undefined} fn Callback function to be executed.\n * @param {...*} var_args Arguments to apply to the function.\n * @return {boolean} False if the callback was canceled by explicitly returning\n *     false to stop the operation; true otherwise.\n */\nspfNav.callback = function (fn, var_args) {\n  var val\n  if (fn) {\n    var args = Array.prototype.slice.call(arguments)\n    args[0] = fn\n    val = spfBase.execute.apply(null, args)\n    if (val instanceof Error) {\n      spfDebug.error('error in callback (url=', window.location.href,\n                      'err=', val, ')')\n    }\n  }\n  return (val !== false)\n}\n\n/**\n * Reloads the page with a URL, to be used when navigation fails or is disabled.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNav.ReloadReason} reason The reason code causing the reload.\n * @param {Error=} opt_err An optional error object used in the dispatched\n *    reason.\n */\nspfNav.reload = function (url, reason, opt_err) {\n  var err = opt_err ? opt_err.message : ''\n  spfDebug.warn('reloading (', 'url=', url, 'reason=', reason,\n                 'error=', err, ')')\n  spfNav.cancel()\n  spfNav.cancelAllPrefetchesExcept()\n  // Dispatch the reload event to notify the app that a reload is required.\n  var logReason = reason\n  if (err) {\n    logReason += ' Message: ' + err\n  }\n  spfNav.dispatchReload_(url, logReason)\n  var current = window.location.href\n  // If the url has already changed, clear its entry to prevent browser\n  // inconsistency with history management for 301 responses on reloads. Chrome\n  // will identify that the starting url was the same, and replace the current\n  // history state, whereas Firefox will set a new state with the post 301\n  // value.\n  if (spfConfig.get('experimental-remove-history') && current == url) {\n    spfHistory.removeCurrentEntry()\n  }\n  // Delay the reload until after the history state has had time to clear.\n  setTimeout(function () {\n    var reloadId = /** @type {?string} */ (spfConfig.get('reload-identifier'))\n    if (reloadId) {\n      var params = {}\n      params[reloadId] = encodeURIComponent(reason)\n      url = spfUrl.appendParameters(url, params)\n    }\n    window.location.href = url\n    // If the new url only differs by a hash then just assigning to\n    // `location.href` is not enough to trigger a reload.  If this is the case,\n    // explicitly calling `location.reload()` is required, but it can't be done\n    // every time because an immediate call to `location.reload()` will cancel\n    // the navgation started by the assignment to `location.href`.  The\n    // `isNavigable_` function checks for hash-based navgiation that won't\n    // trigger, so use it here to determine whether to call `location.reload()`.\n    if (!spfNav.isNavigable_(url, current)) {\n      window.location.reload()\n    }\n  }, 0)\n}\n\n/**\n * Loads a URL.\n *\n * Similar to {@link spfNav.navigate}, but intended for traditional content\n * updates, not page navigation.  Not subject to restrictions on the number of\n * simultaneous requests.\n *\n * @param {string} url The URL to load, without the SPF identifier.\n * @param {spfBase.RequestOptions=} opt_options Optional request options object.\n */\nspfNav.load = function (url, opt_options) {\n  url = spfUrl.appendPersistentParameters(url)\n  var options = spfNav.createOptions_(opt_options)\n  var info = new spfNav.Info()\n  spfNav.load_(url, options, info)\n}\n\n/**\n * Loads a URL.\n * See {@link #load}.\n *\n * @param {string} url The URL to load, without the SPF identifier.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @private\n */\nspfNav.load_ = function (url, options, info) {\n  spfDebug.info('nav.load ', url, options, info)\n\n  info.original = info.original || url\n\n  // Abort the load if the \"request\" callback is canceled.\n  // Note: pass \"true\" to only execute callbacks and not dispatch events.\n  if (!spfNav.dispatchRequest_(url, undefined, undefined, options, true)) {\n    return\n  }\n\n  var handleError = spfBase.bind(spfNav.handleLoadError_, null,\n                             false, options, info)\n  var handlePart = spfBase.bind(spfNav.handleLoadPart_, null,\n                            false, options, info)\n  var handleSuccess = spfBase.bind(spfNav.handleLoadSuccess_, null,\n                               false, options, info)\n\n  info.type = 'load'\n\n  spfNavRequest.send(url, {\n    method: options['method'],\n    headers: options['headers'],\n    onPart: handlePart,\n    onError: handleError,\n    onSuccess: handleSuccess,\n    postData: options['postData'],\n    type: info.type,\n    withCredentials: options['withCredentials']\n  })\n}\n\n/**\n * Prefetches a URL.\n *\n * Use to prime the SPF request cache with the content and the browser cache\n * with script and stylesheet URLs.  If the response is successfully parsed, it\n * is preprocessed to prefetch scripts and stylesheets as well.\n *\n * @param {string} url The URL to prefetch, without the SPF identifier.\n * @param {spfBase.RequestOptions=} opt_options Optional request options object.\n */\nspfNav.prefetch = function (url, opt_options) {\n  url = spfUrl.appendPersistentParameters(url)\n  var options = spfNav.createOptions_(opt_options)\n  var info = new spfNav.Info()\n  spfNav.prefetch_(url, options, info)\n}\n\n/**\n * Prefetches a URL.\n * See {@link #prefetch}.\n *\n * @param {string} url The URL to prefetch, without the SPF identifier.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @private\n */\nspfNav.prefetch_ = function (url, options, info) {\n  spfDebug.info('nav.prefetch ', url, options, info)\n  info.original = info.original || url\n\n  // Abort the prefetch if the \"request\" callback is canceled.\n  // Note: pass \"true\" to only execute callbacks and not dispatch events.\n  if (!spfNav.dispatchRequest_(url, undefined, undefined, options, true)) {\n    return\n  }\n\n  var handleError = spfBase.bind(spfNav.handleLoadError_, null,\n                             true, options, info)\n  var handlePart = spfBase.bind(spfNav.handleLoadPart_, null,\n                            true, options, info)\n  var handleSuccess = spfBase.bind(spfNav.handleLoadSuccess_, null,\n                               true, options, info)\n\n  info.type = 'prefetch'\n\n  var xhr = spfNavRequest.send(url, {\n    method: options['method'],\n    headers: options['headers'],\n    onPart: handlePart,\n    onError: handleError,\n    onSuccess: handleSuccess,\n    postData: options['postData'],\n    type: info.type,\n    current: info.current\n  })\n  spfNav.addPrefetch(url, xhr)\n}\n\n/**\n * Handles a load or prefetch error.\n * See {@link load} and {@link prefetch}.\n *\n * @param {boolean} isPrefetch True for prefetch; false for load.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {Error} err The Error object.\n * @private\n */\nspfNav.handleLoadError_ = function (isPrefetch, options, info, url, err) {\n  spfDebug.warn(isPrefetch ? 'prefetch' : 'load', 'error', '(url=', url, ')')\n\n  if (isPrefetch) {\n    spfNav.removePrefetch(url)\n  }\n\n  // If a prefetch has been promoted to a navigate, use the navigate error\n  // handler.  Otherwise, execute the \"error\" callback.\n  if (isPrefetch && spfState.get(spfState.Key.NAV_PROMOTE) == info.original) {\n    spfNav.handleNavigateError_(options, url, err)\n  } else {\n    // Note: pass \"true\" to only execute callbacks and not dispatch events.\n    spfNav.dispatchError_(url, err, options, true)\n  }\n}\n\n/**\n * Handles a load or prefetch partial response.\n * See {@link load} and {@link prefetch}.\n *\n * @param {boolean} isPrefetch True for prefetch; false for load.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse} partial The partial response object.\n * @private\n */\nspfNav.handleLoadPart_ = function (isPrefetch, options, info, url, partial) {\n  // Abort the load/prefetch if the \"part process\" callback is canceled.\n  // Note: pass \"true\" to only execute callbacks and not dispatch events.\n  if (!spfNav.dispatchPartProcess_(url, partial, options, true)) {\n    return\n  }\n\n  // Check for reload responses.\n  // For a load, abort; for a promoted prefetch, reload immediately; for a\n  // prefetch, ignore and the reload will be processed when a navigate occurs.\n  if (partial['reload']) {\n    if (!isPrefetch) {\n      return\n    }\n    if (spfState.get(spfState.Key.NAV_PROMOTE) == info.original) {\n      spfNav.reload(url, spfNav.ReloadReason.RESPONSE_RECEIVED)\n      return\n    }\n  }\n\n  // Check for redirect responses.\n  if (partial['redirect']) {\n    spfNav.handleLoadRedirect_(isPrefetch, options, info, partial['redirect'])\n    return\n  }\n\n  if (isPrefetch) {\n    // Add the navigate part function as a task to be invoked on\n    // prefetch promotion.\n    // TODO(nicksay): Honor history/reverse/position during promotion in\n    // reponse to a popState. (This is an edge case.)\n    var fn = spfBase.bind(spfNav.handleNavigatePart_, null,\n                      options, info, url, partial)\n    var promoteKey = spfNav.promoteKey(info.original)\n    spfTasks.add(promoteKey, fn)\n    // If the prefetch has been promoted, run the promotion task after\n    // adding it and do not perform any preprocessing.\n    if (spfState.get(spfState.Key.NAV_PROMOTE) == info.original) {\n      spfTasks.run(promoteKey, true)\n      return\n    }\n  }\n\n  var processFn = isPrefetch\n      ? spfNavResponse.preprocess\n      : spfNavResponse.process\n  processFn(url, partial, info, function () {\n    // Note: pass \"true\" to only execute callbacks and not dispatch events.\n    spfNav.dispatchPartDone_(url, partial, options, true)\n  })\n}\n\n/**\n * Handles a load or prefetch complete response.\n * See {@link load} and {@link prefetch}.\n *\n * @param {boolean} isPrefetch True for prefetch; false for load.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The response\n *     object, either a complete single or multipart response object.\n * @private\n */\nspfNav.handleLoadSuccess_ = function (isPrefetch, options, info, url,\n                                      response) {\n  // If a multipart response was received, all processing is already done,\n  // so don't execute the \"process\" callback.\n  var multipart = response['type'] == 'multipart'\n  if (!multipart) {\n    // Abort the load/prefetch if the \"process\" callback is canceled.\n    // Note: pass \"true\" to only execute callbacks and not dispatch events.\n    if (!spfNav.dispatchProcess_(url, response, options, true)) {\n      spfNav.reload(url, spfNav.ReloadReason.PROCESS_CANCELED)\n      return\n    }\n\n    // Check for reload responses.\n    // For a load, abort; for a promoted prefetch, reload immediately; for a\n    // prefetch, ignore and the reload will be processed when a navigate occurs.\n    if (response['reload']) {\n      if (!isPrefetch) {\n        return\n      }\n      if (spfState.get(spfState.Key.NAV_PROMOTE) == info.original) {\n        spfNav.reload(url, spfNav.ReloadReason.RESPONSE_RECEIVED)\n        return\n      }\n    }\n\n    // Check for redirect responses.\n    if (response['redirect']) {\n      spfNav.handleLoadRedirect_(isPrefetch, options, info,\n                                  response['redirect'])\n      return\n    }\n  }\n\n  var promoteKey = spfNav.promoteKey(info.original)\n  if (isPrefetch) {\n    // Remove the prefetch xhr from the set of currently active\n    // prefetches upon successful prefetch.\n    spfNav.removePrefetch(url)\n    // If the prefetch has been promoted, run the promotion task after\n    // adding it and do not perform any preprocessing. If it has not\n    // been promoted, remove the task queues becuase a subsequent\n    // request will hit the cache.\n    if (spfState.get(spfState.Key.NAV_PROMOTE) == info.original) {\n      // TODO(nicksay): Honor history/reverse/position during promotion in\n      // reponse to a popState. (This is an edge case.)\n      var fn = spfBase.bind(spfNav.handleNavigateSuccess_, null,\n                        options, info, url, response)\n      spfTasks.add(promoteKey, fn)\n      spfTasks.run(promoteKey, true)\n      return\n    } else {\n      spfTasks.cancel(promoteKey)\n    }\n  }\n\n  // Process the requested response.\n  var processFn = isPrefetch\n      ? spfNavResponse.preprocess\n      : spfNavResponse.process\n  try {\n    // If a multipart response was received, all processing is already done,\n    // so an empty object is used to ensure the callback is properly\n    // queued after existing ones from any ongoing part prcoessing.\n    var r = /** @type {spfBase.SingleResponse} */ (multipart ? {} : response)\n    processFn(url, r, info, function () {\n      // Note: pass \"true\" to only execute callbacks and not dispatch events.\n      spfNav.dispatchDone_(url, response, options, true)\n    })\n  } catch (err) {\n    // If an exception is caught during processing, log, execute the error\n    // handler and bail.\n    spfDebug.debug('    failed to process response', response)\n    spfNav.handleLoadError_(isPrefetch, options, info, url, err)\n  }\n}\n\n/**\n * Handles a redirect response on load requests.\n *\n * @param {boolean} isPrefetch True for prefetch; false for load.\n * @param {spfBase.RequestOptions} options The request options object.\n * @param {spfNav.Info} info The navigation info object.\n * @param {string} redirectUrl The new URL to be redirected to.\n * @private\n */\nspfNav.handleLoadRedirect_ = function (isPrefetch, options, info, redirectUrl) {\n  var redirectFn = isPrefetch ? spfNav.prefetch_ : spfNav.load_\n  // Note that POST is not propagated with redirects.\n  // Only copy callback keys to into a new object to enforce this.\n  var keys = [\n    spfNav.Callback.ERROR,\n    spfNav.Callback.REQUEST,\n    spfNav.Callback.PART_PROCESS,\n    spfNav.Callback.PART_DONE,\n    spfNav.Callback.PROCESS,\n    spfNav.Callback.DONE\n  ]\n  var redirectOpts = /** @type {spfBase.RequestOptions} */ ({})\n  spfArray.each(keys, function (key) {\n    redirectOpts[key] = options[key]\n  })\n  redirectFn(redirectUrl, redirectOpts, info)\n}\n\n/**\n * Process a SPF response on the current page outside of a navigation flow.\n *\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The SPF response\n *     object to process.\n * @param {function((spfBase.SingleResponse|spfBase.MultipartResponse))=} opt_callback\n *     Function to execute when processing is done; the argument is\n *     the `response`.\n */\nspfNav.process = function (response, opt_callback) {\n  var url = window.location.href\n  var multipart = response['type'] == 'multipart'\n  var done = function (index, max, _, resp) {\n    if (index == max && opt_callback) {\n      opt_callback(resp)\n    }\n  }\n  if (multipart) {\n    var parts = response['parts']\n    var max = parts.length - 1\n    spfArray.each(parts, function (part, index) {\n      var fn = spfBase.bind(done, null, index, max)\n      spfNavResponse.process(url, part, null, fn)\n    })\n  } else {\n    response = /** @type {spfBase.SingleResponse} */ (response)\n    var fn = spfBase.bind(done, null, 0, 0)\n    spfNavResponse.process(url, response, null, fn)\n  }\n}\n\n/**\n * Dispatches the \"error\" event with the following custom event detail:\n *   url: The current URL.\n *   err: The Error object.\n *\n * If a local \"onError\" callback is provided, it is executed first with the\n * same detail object.  If the callback is canceled, the event is not fired.\n *\n * @param {string} url The history URL.\n * @param {Error} err The Error object.\n * @param {?spfBase.RequestOptions=} opt_options Optional request options object.\n * @param {boolean=} opt_noEvents Whether to skip the event and only execute the\n *     callback; for use with load and prefetch requests.\n * @param {XMLHttpRequest=} opt_xhr The XMLHttpRequest for current error\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchError_ = function (url, err, opt_options, opt_noEvents,\n                                  opt_xhr) {\n  var detail = {'url': url, 'err': err, 'xhr': opt_xhr}\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  var fn = options[spfNav.Callback.ERROR]\n  var proceed = spfNav.callback(fn, detail)\n  if (proceed && !opt_noEvents) {\n    proceed = spfBase.dispatch(spfBase.EventName.ERROR, detail)\n  }\n  return proceed\n}\n\n/**\n * Dispatches the \"reload\" event with the following custom event detail:\n *   url: The current URL.\n *   reason: The reason code and text explaining the reload.\n *\n * @param {string} url The target URL which is being reloaded.\n * @param {string} reason The reason code causing the reload.\n * @private\n */\nspfNav.dispatchReload_ = function (url, reason) {\n  var detail = {'url': url, 'reason': reason}\n  spfBase.dispatch(spfBase.EventName.RELOAD, detail)\n}\n\n/**\n * Dispatches the \"click\" event with the following custom event detail:\n *   url: The click URL, without the SPF identifier.\n *   target: The click target.\n *\n * @param {string} url The click URL, without the SPF identifier.\n * @param {EventTarget} target The click target.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchClick_ = function (url, target) {\n  var detail = {'url': url, 'target': target}\n  return spfBase.dispatch(spfBase.EventName.CLICK, detail)\n}\n\n/**\n * Dispatches the \"history\" event with the following custom event detail:\n *   url: The click URL, without the SPF identifier.\n *   referer: The referring page URL, without the SPF identifier.\n *   previous: The previously visible page URL, without the SPF identifier.\n *\n * @param {string} url The click URL, without the SPF identifier.\n * @param {string=} opt_referer The referer URL.\n * @param {string=} opt_previous The previously visible URL.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchHistory_ = function (url, opt_referer, opt_previous) {\n  var detail = {'url': url, 'referer': opt_referer, 'previous': opt_previous}\n  return spfBase.dispatch(spfBase.EventName.HISTORY, detail)\n}\n\n/**\n * Dispatches the \"request\" event with the follow custom event detail:\n *   url: The URL to request, without the SPF identifier.\n *   referer: The referring page URL, without the SPF identifier.\n *   previous: The previously visible page URL, without the SPF identifier.\n *\n * If a local \"onRequest\" callback is provided, it is executed first with the\n * same detail object.  If the callback is canceled, the event is not fired.\n *\n * @param {string} url The URL to request, without the SPF identifier.\n * @param {string|undefined} referer The referer URL.\n * @param {string|undefined} previous The previously visible URL.\n * @param {?spfBase.RequestOptions=} opt_options Optional request options object.\n * @param {boolean=} opt_noEvents Whether to skip the event and only execute the\n *     callback; for use with load and prefetch requests.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchRequest_ = function (url, referer, previous, opt_options,\n                                    opt_noEvents) {\n  var detail = {'url': url, 'referer': referer, 'previous': previous}\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  var fn = options[spfNav.Callback.REQUEST]\n  var proceed = spfNav.callback(fn, detail)\n  if (proceed && !opt_noEvents) {\n    proceed = spfBase.dispatch(spfBase.EventName.REQUEST, detail)\n  }\n  return proceed\n}\n\n/**\n * Dispatches the \"part process\" event with the follow custom event detail:\n *   url: The requested URL, without the SPF identifier.\n *   part: The partial response object, a part of a multipart response.\n *\n * If a local \"onPartProcess\" callback is provided, it is executed first with\n * the same detail object.  If the callback is canceled, the event is not fired.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse} partial The partial response object,\n *     part of a multipart response object.\n * @param {?spfBase.RequestOptions=} opt_options Optional request options object.\n * @param {boolean=} opt_noEvents Whether to skip the event and only execute the\n *     callback; for use with load and prefetch requests.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchPartProcess_ = function (url, partial, opt_options,\n                                        opt_noEvents) {\n  var detail = {'url': url, 'part': partial}\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  var fn = options[spfNav.Callback.PART_PROCESS]\n  var proceed = spfNav.callback(fn, detail)\n  if (proceed && !opt_noEvents) {\n    proceed = spfBase.dispatch(spfBase.EventName.PART_PROCESS, detail)\n  }\n  return proceed\n}\n\n/**\n * Dispatches the \"part done\" event with the follow custom event detail:\n *   url: The requested URL, without the SPF identifier.\n *   part: The partial response object, a part of a multipart response.\n *\n * If a local \"onPartDone\" callback is provided, it is executed first with the\n * same detail object.  If the callback is canceled, the event is not fired.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse} partial The partial response object,\n *     part of a multipart response object.\n * @param {?spfBase.RequestOptions=} opt_options Optional request options object.\n * @param {boolean=} opt_noEvents Whether to skip the event and only execute the\n *     callback; for use with load and prefetch requests.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchPartDone_ = function (url, partial, opt_options, opt_noEvents) {\n  var detail = {'url': url, 'part': partial}\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  var fn = options[spfNav.Callback.PART_DONE]\n  var proceed = spfNav.callback(fn, detail)\n  if (proceed && !opt_noEvents) {\n    proceed = spfBase.dispatch(spfBase.EventName.PART_DONE, detail)\n  }\n  return proceed\n}\n\n/**\n * Dispatches the \"process\" event with the follow custom event detail:\n *   url: The requested URL, without the SPF identifier.\n *   response: The response object, either a single or multipart response.\n *\n * If a local \"onProcess\" callback is provided, it is executed first with the\n * same detail object.  If the callback is canceled, the event is not fired.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The response\n *     object, either a complete single or multipart response object.\n * @param {?spfBase.RequestOptions=} opt_options Optional request options object.\n * @param {boolean=} opt_noEvents Whether to skip the event and only execute the\n *     callback; for use with load and prefetch requests.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchProcess_ = function (url, response, opt_options, opt_noEvents) {\n  var detail = {'url': url, 'response': response}\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  var fn = options[spfNav.Callback.PROCESS]\n  var proceed = spfNav.callback(fn, detail)\n  if (proceed && !opt_noEvents) {\n    proceed = spfBase.dispatch(spfBase.EventName.PROCESS, detail)\n  }\n  return proceed\n}\n\n/**\n * Dispatches the \"done\" event with the follow custom event detail:\n *   url: The requested URL, without the SPF identifier.\n *   response: The response object, either a single or multipart response.\n *\n * If a local \"onDone\" callback is provided, it is executed first with the\n * same detail object.  If the callback is canceled, the event is not fired.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The response\n *     object, either a complete single or multipart response object.\n * @param {?spfBase.RequestOptions=} opt_options Optional request options object.\n * @param {boolean=} opt_noEvents Whether to skip the event and only execute the\n *     callback; for use with load and prefetch requests.\n * @return {boolean} False if the event was canceled.\n * @private\n */\nspfNav.dispatchDone_ = function (url, response, opt_options, opt_noEvents) {\n  var detail = {'url': url, 'response': response}\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  var fn = options[spfNav.Callback.DONE]\n  var proceed = spfNav.callback(fn, detail)\n  if (proceed && !opt_noEvents) {\n    proceed = spfBase.dispatch(spfBase.EventName.DONE, detail)\n  }\n  return proceed\n}\n\n/**\n * Generate the promote key given a url.\n *\n * @param {string} url The url of the request.\n * @return {string} The promote key.\n */\nspfNav.promoteKey = function (url) {\n  return 'promote ' + spfUrl.absolute(url)\n}\n\n/**\n * Generate the preprocess key given a url.\n *\n * @param {string} url The url of the request.\n * @return {string} The preprocess key.\n */\nspfNav.preprocessKey = function (url) {\n  return 'preprocess ' + spfUrl.absolute(url)\n}\n\n/**\n * Add a prefetch request to the set of ongoing prefetches.\n *\n * @param {string} url The url of the prefetch request.\n * @param {XMLHttpRequest} xhr The prefetch request object.\n */\nspfNav.addPrefetch = function (url, xhr) {\n  spfDebug.debug('nav.addPrefetch ', url, xhr)\n  var absoluteUrl = spfUrl.absolute(url)\n  var prefetches = spfNav.prefetches_()\n  prefetches[absoluteUrl] = xhr\n}\n\n/**\n * Cancels a single prefetch request and removes it from the set.\n *\n * @param {string} url The url of the prefetch to be aborted.\n */\nspfNav.removePrefetch = function (url) {\n  spfDebug.debug('nav.removePrefetch ', url)\n  var absoluteUrl = spfUrl.absolute(url)\n  var prefetches = spfNav.prefetches_()\n  var prefetchXhr = prefetches[absoluteUrl]\n  if (prefetchXhr) {\n    prefetchXhr.abort()\n  }\n  delete prefetches[absoluteUrl]\n}\n\n/**\n * Cancels all ongoing prefetch requests, optionally skipping the given url.\n *\n * @param {string=} opt_skipUrl A url of the request that should not\n *     be canceled.\n */\nspfNav.cancelAllPrefetchesExcept = function (opt_skipUrl) {\n  spfDebug.debug('nav.cancelAllPrefetchesExcept', opt_skipUrl)\n  var prefetches = spfNav.prefetches_()\n  var absoluteUrl = opt_skipUrl && spfUrl.absolute(opt_skipUrl)\n  for (var key in prefetches) {\n    if (absoluteUrl != key) {\n      spfNav.removePrefetch(key)\n    }\n  }\n}\n\n/**\n * Clears all resource timings for the page.\n *\n * @private\n */\nspfNav.clearResourceTimings_ = (function () {\n  var clearResourceTimings = window.performance && (\n      window.performance.clearResourceTimings ||\n      window.performance['webkitClearResourceTimings'] ||\n      window.performance['mozClearResourceTimings'] ||\n      window.performance['msClearResourceTimings'] ||\n      window.performance['oClearResourceTimings'])\n  if (clearResourceTimings) {\n    return spfBase.bind(clearResourceTimings, window.performance)\n  }\n  return spfBase.nullFunction\n})()\n\n/**\n * @param {!Object.<string, XMLHttpRequest>=} opt_reqs\n *     Optional set of requests to overwrite the current value.\n * @return {!Object.<string, XMLHttpRequest>} Current map\n *     of requests.\n * @private\n */\nspfNav.prefetches_ = function (opt_reqs) {\n  if (opt_reqs || !spfState.has(spfState.Key.NAV_PREFETCHES)) {\n    return /** @type {!Object.<string, XMLHttpRequest>} */ (\n        spfState.set(spfState.Key.NAV_PREFETCHES, (opt_reqs || {})))\n  }\n  return /** @type {!Object.<string, XMLHttpRequest>} */ (\n      spfState.get(spfState.Key.NAV_PREFETCHES))\n}\n\n/**\n * @return {Array.<number>} The saved scroll position.\n * @private\n */\nspfNav.getScrollTempPosition_ = function () {\n  var position = /** @type {?Array.<number>} */ (\n      spfState.get(spfState.Key.NAV_SCROLL_TEMP_POSITION)) || null\n  var url = /** @type {?string} */ (\n      spfState.get(spfState.Key.NAV_SCROLL_TEMP_URL)) || ''\n  if (position && url == window.location.href) {\n    return position\n  }\n  return null\n}\n\n/**\n * @private\n */\nspfNav.setScrollTempPosition_ = function () {\n  var position = [window.pageXOffset, window.pageYOffset]\n  spfDebug.debug('    saving scroll temp position', position)\n  spfState.set(spfState.Key.NAV_SCROLL_TEMP_POSITION, position)\n  spfState.set(spfState.Key.NAV_SCROLL_TEMP_URL, window.location.href)\n}\n\n/**\n * @private\n */\nspfNav.clearScrollTempPosition_ = function () {\n  spfState.set(spfState.Key.NAV_SCROLL_TEMP_POSITION, null)\n  spfState.set(spfState.Key.NAV_SCROLL_TEMP_URL, null)\n}\n\n/**\n * Detects touch-capable platforms.\n *\n * @return {boolean} True if this is a touch capable platform.\n * @private\n */\nspfNav.isTouchCapablePlatform_ = function () {\n  return ('ontouchstart' in window || window.navigator['maxTouchPoints'] > 0 ||\n      window.navigator['msMaxTouchPoints'] > 0)\n}\n\n/**\n * @param {spfBase.RequestOptions=} opt_options The request options object.\n * @return {spfBase.RequestOptions}\n * @private\n */\nspfNav.createOptions_ = function (opt_options) {\n  var options = opt_options || /** @type {spfBase.RequestOptions} */ ({})\n  return options\n}\n\n/**\n * Type definition for an object literal argument to {@link spfNav.Info}.\n *\n * @typedef {{\n *   current: (string|undefined),\n *   history: (boolean|undefined),\n *   original: (string|undefined),\n *   position: (Array.<number>|undefined),\n *   referer: (string|undefined),\n *   reverse: (boolean|undefined),\n *   scrolled: (boolean|undefined),\n *   type: (string|undefined)\n * }}\n * @private\n */\nspfNav.Info_\n\n/**\n * Data to track information about an SPF navigation.\n *\n * @param {(spfNav.Info|spfNav.Info_)=} opt_info A navigation info object.\n * @constructor\n * @struct\n */\nspfNav.Info = function (opt_info) {\n  opt_info = opt_info || /** @type {spfNav.Info_} */ ({})\n  /**\n   * The current page URL. This differs from `referer` in that is always\n   * represents the current visible page regardless of history state.\n   * @type {string}\n   */\n  // The current URL will have already changed for history events, so for this\n  // case, the opt_info.current value from the history state should be used.\n  this.current = (opt_info.history && opt_info.current)\n                     ? opt_info.current : window.location.href\n  /**\n   * Whether this navigation is part of a history change. True when navigation\n   * is in response to a popState event.\n   * @type {boolean}\n   */\n  this.history = !!opt_info.history\n  /**\n   * The original request URL. This may differ than the regular URL for\n   * redirect responses.\n   * @type {string}\n   */\n  this.original = opt_info.original || ''\n  /**\n   * The window position to scroll to during navigation, in [x, y] format.\n   * Should be defined when navigation is in response to a popState event and a\n   * value exists in the history state object.\n   * @type {Array.<number>}\n   */\n  this.position = opt_info.position || null\n  /**\n   * The referring page URL.\n   * @type {string}\n   */\n  // The referer is stored in the history entry state object to allow the\n  // correct value to be sent to the server during back/forward.\n  // Compare against \"undefined\" to allow empty referer values in history.\n  this.referer = (opt_info.referer != undefined)\n                     ? opt_info.referer : window.location.href\n  /**\n   * Whether this navigation is going \"backwards\". True when navigation\n   * is in response to a popState event and the \"back\" button is clicked.\n   * @type {boolean}\n   */\n  this.reverse = !!opt_info.reverse\n  /**\n   * Whether the window has been scrolled to `position` or to the top during\n   * this navigation request.\n   * @type {boolean}\n   */\n  this.scrolled = !!opt_info.scrolled\n  /**\n   * The type of request, one of the following: \"navigate\", \"navigate-back\",\n   * \"navigate-forward\", \"load\", \"prefetch\".  If not yet determined (i.e. before\n   * the request is sent), it will be an empty string.\n   * @type {string}\n   */\n  this.type = opt_info.type || ''\n}\n\n/**\n * @enum {string}\n */\nspfNav.Callback = {\n  ERROR: 'onError',\n  REQUEST: 'onRequest',\n  PART_PROCESS: 'onPartProcess',\n  PART_DONE: 'onPartDone',\n  PROCESS: 'onProcess',\n  DONE: 'onDone'\n}\n\n/**\n * @enum {string}\n */\nspfNav.ReloadReason = {\n  INELIGIBLE: (!SPF_DEBUG) ? '1'\n      : '1: Navigation not initialized or limit reached.',\n  REQUEST_CANCELED: (!SPF_DEBUG) ? '2'\n      : '2: Navigation canceled by the request event.',\n  PART_PROCESS_CANCELED: (!SPF_DEBUG) ? '3'\n      : '3: Navigation canceled by the partprocess event.',\n  PROCESS_CANCELED: (!SPF_DEBUG) ? '4'\n      : '4: Navigation canceled by the process event.',\n  RESPONSE_RECEIVED: (!SPF_DEBUG) ? '5'\n      : '5: Reload response received.',\n  FORBIDDEN: (!SPF_DEBUG) ? '9'\n      : '9: Destination forbidden by same-origin security.',\n  ERROR: (!SPF_DEBUG) ? '10'\n      : '10: An uncaught error occurred processing.'\n}\n\nexport default spfNav\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/nav/nav.js","// Copyright 2013 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Navigation-related response functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport {spfBase} from '../base'\nimport spfState from '../state'\nimport spfArray from '../array/array'\nimport spfConfig from '../config'\nimport spfDebug from '../debug/debug'\nimport spfDom from '../dom/dom'\nimport spfDomClasslist from '../dom/classlist'\nimport spfDomDataset from '../dom/dataset'\nimport spfHistory from '../history/history'\nimport spfNetConnect from '../net/connect'\nimport spfNetScript from '../net/script'\nimport spfNetStyle from '../net/style'\nimport spfString from '../string/string'\nimport spfTasks from '../tasks/tasks'\nimport spfUrl from '../url/url'\n\nlet spfNavResponse = {}\n// goog.provide('spfNavResponse');\n\n/**\n * Parses text for an SPF response.  If `opt_multipart` is true, attempts\n * to parse the text for one or more (in)complete multipart SPF responses.\n *\n * @param {string} text Text to parse.\n * @param {boolean=} opt_multipart Whether to attempt to parse the text for\n *     one or more multipart SPF response sections.\n * @param {boolean=} opt_lastDitch Whether to parse the text as the final\n *     one, potentially handling malformed but valid responses.  Requires\n *     `opt_multipart` to be true.\n * @throws {Error} If the `text` contains invalid JSON, or when\n *     `opt_multipart` is true, if a section of a multipart response\n *     contains invalid JSON.\n * @return {{parts: Array.<spfBase.SingleResponse>, extra: string}}\n */\nspfNavResponse.parse = function (text, opt_multipart, opt_lastDitch) {\n  if (opt_multipart) {\n    var beginToken = spfNavResponse.Token.BEGIN\n    var delimToken = spfNavResponse.Token.DELIMITER\n    var endToken = spfNavResponse.Token.END\n    var lastDitchHalfToken = '\\r\\n'\n    var parts = []\n    var chunk\n    var start = 0\n    // With a last-ditch effort, append the token CRLF chars to the text, which\n    // might allow parsing the final section of a response that ends with a\n    // closing bracket but not the CRLF required of a well-formed END token.\n    // As a side-effect, this will also successfully parse a response section\n    // that ends with a comma (because the CRLF will create a well-formed\n    // DELIMITER token).  If the last character is not a comma or closing\n    // bracket, this last-ditch effort will have no effect.\n    if (opt_lastDitch) {\n      text += lastDitchHalfToken\n    }\n    var finish = text.indexOf(beginToken, start)\n    if (finish > -1) {\n      start = finish + beginToken.length\n    }\n    while ((finish = text.indexOf(delimToken, start)) > -1) {\n      chunk = spfString.trim(text.substring(start, finish))\n      start = finish + delimToken.length\n      if (chunk) {\n        parts.push(JSON.parse(chunk))\n      }\n    }\n    finish = text.indexOf(endToken, start)\n    if (finish > -1) {\n      chunk = spfString.trim(text.substring(start, finish))\n      start = finish + endToken.length\n      if (chunk) {\n        parts.push(JSON.parse(chunk))\n      }\n    }\n    var extra = ''\n    if (text.length > start) {\n      extra = text.substring(start)\n      if (opt_lastDitch && spfString.endsWith(extra, lastDitchHalfToken)) {\n        extra = extra.substring(0, extra.length - lastDitchHalfToken.length)\n      }\n    }\n    parts = spfNavResponse.extract(parts)\n    return {\n      parts: /** @type {Array.<spfBase.SingleResponse>} */(parts),\n      extra: extra\n    }\n  } else {\n    var response = JSON.parse(text)\n    var parts = spfNavResponse.extract(spfArray.toArray(response))\n    return {\n      parts: /** @type {Array.<spfBase.SingleResponse>} */(parts),\n      extra: ''\n    }\n  }\n}\n\n/**\n * Processes a SPF response.\n *\n * @param {string} url The URL of the response being processed.\n * @param {spfBase.SingleResponse} response The SPF response object to process.\n * @param {spfBase.nav.Info=} opt_info The navigation info object.\n * @param {function(string, spfBase.SingleResponse)=} opt_callback Function to\n *     execute when processing is done; the first argument is `url`,\n *     the second argument is `response`.\n */\nspfNavResponse.process = function (url, response, opt_info, opt_callback) {\n  spfDebug.info('nav.response.process ', response, opt_info)\n\n  var isNavigate = opt_info && spfString.startsWith(opt_info.type, 'navigate')\n  var isReverse = opt_info && opt_info.reverse\n  var hasPosition = opt_info && !!opt_info.position\n  var hasScrolled = opt_info && opt_info.scrolled\n\n  var name = response['name'] || ''\n\n  // Convert the URL to absolute, to be used for finding the task queue.\n  var key = 'process ' + spfUrl.absolute(url)\n  var sync = !spfConfig.get('experimental-process-async')\n\n  // NOTE: when adding tasks to a queue, use bind to avoid name/scope errors.\n  var fn\n  var num = 0\n\n  // Initialize the timing object if needed.\n  if (!response['timing']) {\n    response['timing'] = {}\n  }\n\n  // Update title (immediate).\n  if (response['title']) {\n    document.title = response['title']\n  }\n\n  // Add the new history state (immediate), if needed.\n  // Only navigation requests should process URL changes.\n  if (isNavigate && response['url']) {\n    var fullUrl = spfUrl.absolute(response['url'])\n    // Update the history state if the url doesn't match.\n    if (fullUrl != spfNavResponse.getCurrentUrl_()) {\n      spfDebug.debug('  update history with response url')\n      // Add the URL to the history stack, including hash.\n      spfHistory.replace(response['url'] + window.location.hash)\n    }\n  }\n\n  // Install head scripts and styles (single task), if needed.\n  if (response['head']) {\n    fn = spfBase.bind(function (head, timing) {\n      // Extract scripts and styles from the fragment.\n      var extracted = spfNavResponse.extract_(head)\n      // Install links.\n      spfNavResponse.installLinks_(extracted)\n      // Install styles.\n      spfNavResponse.installStyles_(extracted)\n      spfDebug.debug('    head css')\n      // Install scripts.\n      // Suspend main queue to allow JS execution to occur sequentially.\n      // TODO(nicksay): Consider using a sub-queue for JS execution.\n      spfTasks.suspend(key)\n      spfNavResponse.installScripts_(extracted, function () {\n        timing['spfProcessHead'] = spfBase.now()\n        spfDebug.debug('    head js')\n        // Resume main queue after JS.\n        spfTasks.resume(key, sync)\n        spfDebug.debug('  process task done: head')\n      })\n    }, null, response['head'], response['timing'])\n    num = spfTasks.add(key, fn)\n    spfDebug.debug('  process task queued: head', num)\n  }\n\n  // Update attributes (single task), if needed.\n  if (response['attr']) {\n    fn = spfBase.bind(function (attrs, timing) {\n      for (var id in attrs) {\n        var el = document.getElementById(id)\n        if (el) {\n          spfDom.setAttributes(el, attrs[id])\n          spfDebug.debug('    attr set', id)\n        }\n      }\n      timing['spfProcessAttr'] = spfBase.now()\n      spfDebug.debug('  process task done: attr')\n    }, null, response['attr'], response['timing'])\n    num = spfTasks.add(key, fn)\n    spfDebug.debug('  process task queued: attr', num)\n  }\n\n  // Update content (one task per fragment or three tasks if animated).\n  var fragments = response['body'] || {}\n  var numBeforeFragments = num\n  for (var id in fragments) {\n    fn = spfBase.bind(function (id, body, timing) {\n      var el = document.getElementById(id)\n      if (el) {\n        // Scroll to the top before the first content update, if needed.\n        // Only non-history navigation requests scroll to the top immediately.\n        // Other history navigation requests handle scrolling after all\n        // processing is done to avoid jumping to the top and back down to the\n        // saved position afterwards.\n        if (isNavigate && !hasPosition && !hasScrolled) {\n          spfState.set(spfState.Key.NAV_SCROLL_TEMP_POSITION, null)\n          spfState.set(spfState.Key.NAV_SCROLL_TEMP_URL, null)\n          spfDebug.debug('    scrolling to top')\n          window.scroll(0, 0)\n          hasScrolled = true\n          if (opt_info) {\n            opt_info.scrolled = true\n          }\n        }\n        // Extract scripts and styles from the fragment.\n        var extracted = spfNavResponse.extract_(body)\n        // Install styles.\n        spfNavResponse.installStyles_(extracted)\n        // Set up scripts to be installed after the html is updated.\n        var installScripts = function () {\n          // Install scripts.\n          // Suspend main queue to allow JS execution to occur sequentially.\n          // TODO(nicksay): Consider using a sub-queue for JS execution.\n          spfTasks.suspend(key)\n          spfNavResponse.installScripts_(extracted, function () {\n            // Resume main queue after JS.\n            spfTasks.resume(key, sync)\n            spfDebug.debug('  process task done: body', id)\n          })\n        }\n\n        var animationClass = /** @type {string} */ (\n            spfConfig.get('animation-class'))\n        var noAnimation = (!spfNavResponse.CAN_ANIMATE_ ||\n                           !spfDomClasslist.contains(el, animationClass))\n        if (noAnimation) {\n          var htmlHandler = /** @type {Function} */(\n              spfConfig.get('experimental-html-handler'))\n          if (htmlHandler) {\n            // Suspend main queue for the experimental HTML handler.\n            spfTasks.suspend(key)\n            htmlHandler(extracted['html'], el, function () {\n              installScripts()\n              // Resume main queue after the experimental HTML handler.\n              spfTasks.resume(key, sync)\n            })\n          } else {\n            el.innerHTML = extracted['html']\n            installScripts()\n          }\n        } else {\n          var animation = new spfNavResponse.Animation_(\n              el,\n              extracted['html'],\n              animationClass,\n              name,\n              parseInt(spfConfig.get('animation-duration'), 10),\n              !!isReverse)\n          // Suspend main queue while the animation is running.\n          spfTasks.suspend(key)\n          // Finish a previous animation on this sub-queue, if needed.\n          spfTasks.run(animation.key, true)\n          // Animation task 1: insert new, delay = 0.\n          spfTasks.add(\n              animation.key,\n              spfBase.bind(spfNavResponse.prepareAnimation_, null, animation),\n              0)\n          spfDebug.debug('  process queued prepare animation', id)\n          // Animation task 2: switch, delay = 17ms = 1 frame @ 60fps.\n          spfTasks.add(\n              animation.key,\n              spfBase.bind(spfNavResponse.runAnimation_, null, animation),\n              17)\n          spfDebug.debug('  process queued run animation', id)\n          // Animation task 3: remove old, delay = config.\n          spfTasks.add(\n              animation.key,\n              spfBase.bind(spfNavResponse.completeAnimation_, null, animation),\n              animation.duration)\n          spfDebug.debug('  process queued complete animation', id)\n          // Resume main queue after animation is done.\n          spfTasks.add(\n              animation.key,\n              spfBase.bind(function () {\n                installScripts()\n                spfTasks.resume(key, sync)\n              }, null),\n              0)\n          spfTasks.run(animation.key)\n        }\n      }\n    }, null, id, fragments[id], response['timing'])\n    num = spfTasks.add(key, fn)\n    spfDebug.debug('  process task queued: body', id, num)\n  }\n  var numAfterFragments = num\n  var numFragments = numAfterFragments - numBeforeFragments\n\n  // Install foot scripts and styles (single task), if needed.\n  if (response['foot']) {\n    fn = spfBase.bind(function (foot, timing, numFragments) {\n      // Use the page scripts task as a signal that the content is updated,\n      // only recording the content completion time if fragments were processed.\n      if (numFragments) {\n        timing['spfProcessBody'] = spfBase.now()\n      }\n      // Extract scripts and styles from the fragment.\n      var extracted = spfNavResponse.extract_(foot)\n      // Install styles.\n      spfNavResponse.installStyles_(extracted)\n      spfDebug.debug('    foot css')\n      // Install scripts.\n      // Suspend main queue to allow JS execution to occur sequentially.\n      // TODO(nicksay): Consider using a sub-queue for JS execution.\n      spfTasks.suspend(key)\n      spfNavResponse.installScripts_(extracted, function () {\n        timing['spfProcessFoot'] = spfBase.now()\n        spfDebug.debug('    foot js')\n        spfTasks.resume(key, sync)  // Resume main queue after JS.\n        spfDebug.debug('  process task done: foot')\n      })\n    }, null, response['foot'], response['timing'],\n        numFragments)\n    num = spfTasks.add(key, fn)\n    spfDebug.debug('  process task queued: foot', num)\n  } else if (numFragments) {\n    // If a page scripts task is unnecessary and fragments were processed,\n    // add a task to record the completion time.  Doing this only if page\n    // scripts won't be installed prevents unnecessary task execution and\n    // potential delays.\n    fn = spfBase.bind(function (timing) {\n      timing['spfProcessBody'] = spfBase.now()\n      spfDebug.debug('  process task done: timing-for-body')\n    }, null, response['timing'])\n    num = spfTasks.add(key, fn)\n    spfDebug.debug('  process task queued: timing-for-body', num)\n  }\n\n  // Execute callback.\n  if (opt_callback) {\n    num = spfTasks.add(key, spfBase.bind(opt_callback, null, url, response))\n    spfDebug.debug('  process task queued: callback', num)\n  }\n\n  spfDebug.debug('  process run', key, sync)\n  spfTasks.run(key, sync)\n}\n\n/**\n * Preprocesses a SPF response.\n\n * Similar to {@link #process} but instead of page content being updated,\n * script and stylesheet URLs are prefetched.\n *\n * @param {string} url The URL of the response being preprocessed.\n * @param {spfBase.SingleResponse} response The SPF response object to preprocess.\n * @param {spfBase.nav.Info=} opt_info The navigation info object.\n * @param {function(string, spfBase.SingleResponse)=} opt_callback Function to\n *     execute when preprocessing is done; the first argument is `url`,\n *     the second argument is `response`.\n */\nspfNavResponse.preprocess = function (url, response, opt_info, opt_callback) {\n  spfDebug.info('nav.response.preprocess ', response)\n  // Convert the URL to absolute, to be used for finding the task queue.\n  var key = 'preprocess ' + spfUrl.absolute(url)\n\n  // NOTE: when adding tasks to a queue, use bind to avoid name/scope errors.\n  var fn\n\n  // Preinstall page styles (single task), if needed.\n  if (response['head']) {\n    fn = spfBase.bind(function (head) {\n      var extracted = spfNavResponse.extract_(head)\n      spfNavResponse.preinstallLinks_(extracted)\n      spfNavResponse.preinstallStyles_(extracted)\n      spfNavResponse.preinstallScripts_(extracted)\n      spfDebug.debug('  preprocess task done: head')\n    }, null, response['head'])\n    spfTasks.add(key, fn)\n    spfDebug.debug('  preprocess task queued: head')\n  }\n\n  // Preinstall fragment scripts and styles (one task per fragment).\n  var fragments = response['body'] || {}\n  for (var id in fragments) {\n    if (fragments[id]) {\n      fn = spfBase.bind(function (id, body) {\n        var extracted = spfNavResponse.extract_(body)\n        spfNavResponse.preinstallStyles_(extracted)\n        spfNavResponse.preinstallScripts_(extracted)\n        spfDebug.debug('    body js', id)\n        spfDebug.debug('  preprocess task done: body', id)\n      }, null, id, fragments[id])\n      spfTasks.add(key, fn)\n      spfDebug.debug('  preprocess task queued: body', id)\n    }\n  }\n\n  // Preinstall page scripts (single task).\n  if (response['foot']) {\n    fn = spfBase.bind(function (foot) {\n      var extracted = spfNavResponse.extract_(foot)\n      spfNavResponse.preinstallStyles_(extracted)\n      spfNavResponse.preinstallScripts_(extracted)\n      spfDebug.debug('  preprocess task done: foot')\n    }, null, response['foot'])\n    spfTasks.add(key, fn)\n    spfDebug.debug('  preprocess task queued: foot')\n  }\n\n  // Execute callback.\n  if (opt_callback) {\n    spfTasks.add(key, spfBase.bind(opt_callback, null, url, response))\n    spfDebug.debug('  preprocess task queued: callback')\n  }\n\n  // The preprocessing queue is always run async.\n  spfTasks.run(key)\n}\n\n/**\n * @param {spfNavResponse.Animation_} data The animation data.\n * @private\n */\nspfNavResponse.prepareAnimation_ = function (data) {\n  // Add the start class to put elements in their beginning states.\n  spfDomClasslist.add(data.element, data.dirClass)\n  spfDomClasslist.add(data.element, data.fromClass)\n  spfDomClasslist.add(data.element, data.toClass)\n  spfDomClasslist.add(data.element, data.startClass)\n  spfDomClasslist.add(data.element, data.startClassDeprecated)\n  // Pack the existing content into a temporary container.\n  data.oldEl = document.createElement('div')\n  data.oldEl.className = data.oldClass\n  spfDom.packElement(data.element, data.oldEl)\n  // Place the new content into a temporary container as a sibling.\n  data.newEl = document.createElement('div')\n  data.newEl.className = data.newClass\n  data.newEl.innerHTML = data.html\n  if (data.reverse) {\n    spfDom.insertSiblingBefore(data.newEl, data.oldEl)\n  } else {\n    spfDom.insertSiblingAfter(data.newEl, data.oldEl)\n  }\n  spfDebug.debug('  process done prepare animation', data.element.id)\n}\n\n/**\n * @param {spfNavResponse.Animation_} data The animation data.\n * @private\n */\nspfNavResponse.runAnimation_ = function (data) {\n  spfDomClasslist.remove(data.element, data.startClass)\n  spfDomClasslist.remove(data.element, data.startClassDeprecated)\n  spfDomClasslist.add(data.element, data.endClass)\n  spfDomClasslist.add(data.element, data.endClassDeprecated)\n  spfDebug.debug('  process done run animation', data.element.id)\n}\n\n/**\n * @param {spfNavResponse.Animation_} data The animation data.\n * @private\n */\nspfNavResponse.completeAnimation_ = function (data) {\n  // Remove the old content.\n  data.element.removeChild(data.oldEl)\n  // Unpack the new content from the temporary container.\n  spfDom.unpackElement(data.newEl)\n  // Remove the end class to put elements back in normal state.\n  spfDomClasslist.remove(data.element, data.endClass)\n  spfDomClasslist.remove(data.element, data.endClassDeprecated)\n  spfDomClasslist.remove(data.element, data.fromClass)\n  spfDomClasslist.remove(data.element, data.toClass)\n  spfDomClasslist.remove(data.element, data.dirClass)\n  spfDebug.debug('  process done complete animation', data.element.id)\n}\n\n/**\n * Extracts all resources from HTML in a SPF response.\n *\n * @param {T} response The SPF response object to extract.\n * @return {T} The response, updated to have resources extracted from HTML\n *     strings.  This does not create a new object and modifies the passed\n *     response in-place.\n * @template T\n */\nspfNavResponse.extract = function (response) {\n  spfDebug.debug('spfNavResponse.extract', response)\n  var parts = spfArray.toArray(response)\n  spfArray.each(parts, function (part) {\n    if (part) {\n      if (part['head']) {\n        part['head'] = spfNavResponse.extract_(part['head'])\n      }\n      if (part['body']) {\n        for (var id in part['body']) {\n          part['body'][id] = spfNavResponse.extract_(part['body'][id])\n        }\n      }\n      if (part['foot']) {\n        part['foot'] = spfNavResponse.extract_(part['foot'])\n      }\n    }\n  })\n  return response\n}\n\n/**\n * Extracts resources from an HTML string:\n *   - JS: <script> and <script src>\n *   - CSS: <style> and <link rel=stylesheet>\n *\n * @param {spfBase.ResponseFragment|spfNavResponse.Extraction_} frag The response\n *     fragment (either a HTML string to parse or a pre-parsed object), or a\n *     previous extraction result.\n * @return {!spfNavResponse.Extraction_}\n * @private\n */\nspfNavResponse.extract_ = function (frag) {\n  var result = new spfNavResponse.Extraction_()\n  if (!frag) {\n    return result\n  }\n\n  // If the fragment isn't a string, it's a pre-parsed object.  Use the\n  // provided values to populate the result instead.\n  if (!spfString.isString(frag)) {\n    // Add the parsed scripts to the result.\n    if (frag['scripts']) {\n      spfArray.each(frag['scripts'], function (script) {\n        result['scripts'].push({url: script['url'] || '',\n          text: script['text'] || '',\n          name: script['name'] || '',\n          async: script['async'] || false})\n      })\n    }\n    // Add the parsed styles to the result.\n    if (frag['styles']) {\n      spfArray.each(frag['styles'], function (style) {\n        result['styles'].push({url: style['url'] || '',\n          text: style['text'] || '',\n          name: style['name'] || ''})\n      })\n    }\n    // Add the parsed links to the result.\n    if (frag['links']) {\n      spfArray.each(frag['links'], function (link) {\n        if (link['rel'] == 'spf-preconnect') {\n          result['links'].push({url: link['url'] || '',\n            rel: link['rel'] || ''})\n        }\n      })\n    }\n    result['html'] = frag['html'] || ''\n    return result\n  }\n\n  // Re-assure the compiler that the fragment is a string at this point.\n  frag = /** @type {string} */ (frag)\n\n  // Parse scripts and styles and add them to the result.\n  frag = frag.replace(spfNavResponse.ElementRegEx.SCRIPT_STYLE,\n      function (full, tag, attr, text) {\n        // A script tag can be either an inline or external style.\n        // Parse the name, src, and async attributes.\n        if (tag == 'script') {\n          var name = attr.match(spfNavResponse.AttributeRegEx.NAME)\n          name = name ? name[1] : ''\n          var url = attr.match(spfNavResponse.AttributeRegEx.SRC)\n          url = url ? url[1] : ''\n          var async = spfNavResponse.AttributeRegEx.ASYNC.test(attr)\n          var type = spfNavResponse.AttributeRegEx.TYPE.exec(attr)\n          var inject = !type || spfString.contains(type[1], '/javascript') ||\n              spfString.contains(type[1], '/x-javascript') ||\n              spfString.contains(type[1], '/ecmascript')\n          if (inject) {\n            result['scripts'].push(\n                {url: url, text: text, name: name, async: async})\n            return ''\n          } else {\n            return full\n          }\n        }\n        // A style tag is an inline style.  Parse the name attribute.\n        if (tag == 'style') {\n          var name = attr.match(spfNavResponse.AttributeRegEx.NAME)\n          name = name ? name[1] : ''\n          var type = spfNavResponse.AttributeRegEx.TYPE.exec(attr)\n          var inject = !type || spfString.contains(type[1], 'text/css')\n          if (inject) {\n            result['styles'].push({url: '', text: text, name: name})\n            return ''\n          } else {\n            return full\n          }\n        }\n        // An unexpected tag was matched.  Do nothing.\n        return full\n      })\n\n  // Parse links and add them to the result.\n  frag = frag.replace(spfNavResponse.ElementRegEx.LINK,\n      function (full, attr) {\n        var rel = attr.match(spfNavResponse.AttributeRegEx.REL)\n        rel = rel ? rel[1] : ''\n        // A rel=stylesheet tag is an external style.\n        // Parse the name and href attributes.\n        if (rel == 'stylesheet') {\n          var name = attr.match(spfNavResponse.AttributeRegEx.NAME)\n          name = name ? name[1] : ''\n          var url = attr.match(spfNavResponse.AttributeRegEx.HREF)\n          url = url ? url[1] : ''\n          result['styles'].push({url: url, text: '', name: name})\n          return ''\n        }\n        // A rel=spf-preconnect tag indicates early connection.\n        // Parse the href attribute.\n        if (rel == 'spf-preconnect') {\n          var url = attr.match(spfNavResponse.AttributeRegEx.HREF)\n          url = url ? url[1] : ''\n          result['links'].push({url: url, rel: rel})\n          return ''\n        }\n        // An unknown link was matched.  Do nothing.\n        return full\n      })\n\n  // The result html is what's left after parsing.\n  result['html'] = frag\n\n  return result\n}\n\n/**\n * Installs scripts that have been extracted from an HTML string.\n * See {@link spfNetScript.load}, {@link spfNetScript.eval}, and\n * {@link #extract_}.\n *\n * @param {!spfNavResponse.Extraction_} result The extraction result.\n * @param {Function=} opt_callback Callback function to execute after\n *     all scripts are loaded.\n * @private\n */\nspfNavResponse.installScripts_ = function (result, opt_callback) {\n  if (result['scripts'].length <= 0) {\n    opt_callback && opt_callback()\n    return\n  }\n  // Load or evaluate the scripts in order or asynchronously.\n  var index = -1\n  var next = function () {\n    index++\n    if (index < result['scripts'].length) {\n      var item = result['scripts'][index]\n      var fn = function () {}\n      if (item.url) {\n        if (item.name) {\n          fn = spfBase.bind(spfNetScript.load, null, item.url, item.name)\n        } else {\n          fn = spfBase.bind(spfNetScript.get, null, item.url)\n        }\n      } else if (item.text) {\n        if (item.name) {\n          fn = spfBase.bind(spfNetScript.eval, null, item.text, item.name)\n        } else {\n          fn = spfBase.bind(spfNetScript.exec, null, item.text)\n        }\n      }\n      if (item.url && !item.async) {\n        fn(next)\n      } else {\n        fn()\n        next()\n      }\n    } else {\n      opt_callback && opt_callback()\n    }\n  }\n  next()\n}\n\n/**\n * Prefetches scripts that have been extracted from an HTML string.\n * See {@link spfNetScript.prefetch} and {@link #extract_}.\n *\n * @param {!spfNavResponse.Extraction_} result The extraction result.\n * @private\n */\nspfNavResponse.preinstallScripts_ = function (result) {\n  if (result['scripts'].length <= 0) {\n    return\n  }\n  // Prefetch the scripts.\n  var urls = spfArray.map(result['scripts'], function (item) {\n    return item.url\n  })\n  spfNetScript.prefetch(urls)\n}\n\n/**\n * Installs styles that have been extracted from an HTML string.\n * See {@link spfNetStyle.load}, {@link spfNetStyle.eval}, and\n * {@link #extract_}.\n *\n * @param {!spfNavResponse.Extraction_} result The extraction result.\n * @private\n */\nspfNavResponse.installStyles_ = function (result) {\n  if (result['styles'].length <= 0) {\n    return\n  }\n  // Install the styles.\n  spfArray.each(result['styles'], function (item) {\n    if (item.url) {\n      if (item.name) {\n        spfNetStyle.load(item.url, item.name)\n      } else {\n        spfNetStyle.get(item.url)\n      }\n    } else if (item.text) {\n      if (item.name) {\n        spfNetStyle.eval(item.text, item.name)\n      } else {\n        spfNetStyle.exec(item.text)\n      }\n    }\n  })\n}\n\n/**\n * Prefetches styles that have been extracted from an HTML string.\n * See {@link spfNetStyle.prefetch} and {@link #extract_}.\n *\n * @param {!spfNavResponse.Extraction_} result The extraction result.\n * @private\n */\nspfNavResponse.preinstallStyles_ = function (result) {\n  if (result['styles'].length <= 0) {\n    return\n  }\n  // Prefetch the styles.\n  var urls = spfArray.map(result['styles'], function (item) {\n    return item.url\n  })\n  spfNetStyle.prefetch(urls)\n}\n\n/**\n * Installs links (i.e. DNS) that have extracted from an HTML string.\n * See {@link spfNetConnect.preconnect} and {@link #extract_}.\n *\n * @param {!spfNavResponse.Extraction_} result The extraction result.\n * @private\n */\nspfNavResponse.installLinks_ = function (result) {\n  // Currently, only preconnect links are supported.\n  spfNavResponse.preinstallLinks_(result)\n}\n\n/**\n * Prefetches links (i.e. DNS) that have been extracted from an HTML string.\n * See {@link spfNetConnect.preconnect} and {@link #extract_}.\n *\n * @param {!spfNavResponse.Extraction_} result The extraction result.\n * @private\n */\nspfNavResponse.preinstallLinks_ = function (result) {\n  if (result['links'].length <= 0) {\n    return\n  }\n  // Preconnect.\n  var urls = spfArray.map(result['links'], function (item) {\n    return item.rel == 'spf-preconnect' ? item.url : ''\n  })\n  spfNetConnect.preconnect(urls)\n}\n\n/**\n * Provides the current (absolute) URL from the window.\n * @return {string} Get the current window's URL.\n * @private\n */\nspfNavResponse.getCurrentUrl_ = function () {\n  return spfUrl.absolute(window.location.href)\n}\n\n/**\n * A container for holding data during an animated content update.\n * See {@link #process}.\n *\n * @param {!Element} el The element being updated.\n * @param {string} html The new content for the element.\n * @param {string} cls The animation class name.\n * @param {string} name The page name.\n * @param {number} duration The animation duration.\n * @param {boolean} reverse Whether this is a \"back\" animation.\n * @constructor\n * @struct\n * @private\n */\nspfNavResponse.Animation_ = function (el, html, cls, name, duration, reverse) {\n  /** @type {!Element} */\n  this.element = el\n  /** @type {string} */\n  this.html = html\n  /** @type {number} */\n  this.duration = duration\n  /** @type {boolean} */\n  this.reverse = reverse\n\n  var prevName = spfDomDataset.get(document.body, 'spfName') || ''\n\n  /** @type {string} */\n  this.key = spfTasks.key(el)\n  /** @type {string} */\n  this.fromClass = prevName && (cls + '-from-' + prevName)\n  /** @type {string} */\n  this.toClass = name && (cls + '-to-' + name)\n  /** @type {Element} */\n  this.oldEl = null\n  /** @type {string} */\n  this.oldClass = cls + '-old'\n  /** @type {Element} */\n  this.newEl = null\n  /** @type {string} */\n  this.newClass = cls + '-new'\n  /** @type {string} */\n  this.dirClass = cls + (reverse ? '-reverse' : '-forward')\n  /** @type {string} */\n  this.startClass = cls + '-start'\n  /** @type {string} */\n  this.startClassDeprecated = this.dirClass + '-start'\n  /** @type {string} */\n  this.endClass = cls + '-end'\n  /** @type {string} */\n  this.endClassDeprecated = this.dirClass + '-end'\n}\n\n/**\n * A container for holding the results from parsing and extracting resources\n * from an HTML string.  See {@link #extract_}.\n *\n * Note: This container should be accessed as a dict (obj['foo']) not as a\n * struct (obj.foo) to ensure consistency when accessing parsed responses\n * cached by previous versions of SPF.\n *\n * @constructor\n * @dict\n * @private\n */\n// TODO(nicksay): Consider a shared interface for spfNavResponse.Extraction_\n// and spfBase.ResponseFragment.\nspfNavResponse.Extraction_ = function () {\n  /** @type {string} */\n  this['html'] = ''\n  /** @type {!Array.<{url:string, text:string, name:string, async:boolean}>} */\n  this['scripts'] = []\n  /** @type {!Array.<{url:string, text:string, name:string}>} */\n  this['styles'] = []\n  /** @type {!Array.<{url:string, rel:string}>} */\n  this['links'] = []\n}\n\n/**\n * Whether the browser supports animation via CSS Transitions.\n * @private {boolean}\n */\nspfNavResponse.CAN_ANIMATE_ = (function () {\n  var testEl = document.createElement('div')\n  if ('transition' in testEl.style) {\n    return true\n  }\n  var prefixes = ['webkit', 'Moz', 'Ms', 'O', 'Khtml']\n  return spfArray.some(prefixes, function (prefix) {\n    return prefix + 'Transition' in testEl.style\n  })\n})()\n\n/**\n * Regular expressions used to extract resource elements in HTML strings.\n *\n * @enum {RegExp}\n */\nspfNavResponse.ElementRegEx = {\n  LINK: /\\x3clink([\\s\\S]*?)\\x3e/ig,\n  SCRIPT_STYLE: /\\x3c(script|style)([\\s\\S]*?)\\x3e([\\s\\S]*?)\\x3c\\/\\1\\x3e/ig\n}\n\n/**\n * Regular expressions used to extract attributes in HTML strings.\n * @enum {RegExp}\n */\nspfNavResponse.AttributeRegEx = {\n  ASYNC: /(?:\\s|^)async(?:\\s|=|$)/i,\n  HREF: /(?:\\s|^)href\\s*=\\s*[\"']?([^\\s\"']+)/i,\n  NAME: /(?:\\s|^)name\\s*=\\s*[\"']?([^\\s\"']+)/i,\n  REL: /(?:\\s|^)rel\\s*=\\s*[\"']?([^\\s\"']+)/i,\n  SRC: /(?:\\s|^)src\\s*=\\s*[\"']?([^\\s\"']+)/i,\n  TYPE: /(?:\\s|^)type\\s*=\\s*[\"']([^\"']+)[\"']/i\n}\n\n/**\n * Tokens used when parsing multipart responses.\n * @enum {string}\n */\nspfNavResponse.Token = {\n  BEGIN: '[\\r\\n',\n  DELIMITER: ',\\r\\n',\n  END: ']\\r\\n'\n}\n\nexport default spfNavResponse\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/nav/response.js","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Simple publish/subscribe instance used as a \"dispatch\"\n * for centralized notifications.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport {spfBase, SPF_BOOTLOADER} from '../base'\nimport spfArray from '../array/array'\nimport spfState from '../state'\n\nlet spfPubsub = {}\n// goog.provide('spfPubsub');\n\n// goog.require('spf');\n// goog.require('spfArray');\n// goog.require('spfState');\n\n/**\n * Subscribes a function to a topic.  The function is invoked in the global\n * scope.  Subscribing the same function to the same topic multiple\n * times will result in multiple function invocations while publishing.\n *\n * @param {string} topic Topic to subscribe to. Passing an empty string does\n *     nothing.\n * @param {Function|undefined} fn Function to be invoked when a message is\n *     published to the given topic. Passing `null` or `undefined`\n *     does nothing.\n */\nspfPubsub.subscribe = function (topic, fn) {\n  if (topic && fn) {\n    if (!(topic in spfPubsub.subscriptions)) {\n      spfPubsub.subscriptions[topic] = []\n    }\n    spfPubsub.subscriptions[topic].push(fn)\n  }\n}\n\n/**\n * Unsubscribes a function from a topic. Only deletes the first match found.\n *\n * @param {string} topic Topic to unsubscribe from. Passing an empty string does\n *     nothing.\n * @param {Function|undefined} fn Function to unsubscribe. Passing `null`\n *     or `undefined` does nothing.\n */\nspfPubsub.unsubscribe = function (topic, fn) {\n  if (topic in spfPubsub.subscriptions && fn) {\n    spfArray.every(spfPubsub.subscriptions[topic], function (subFn, i, arr) {\n      if (subFn == fn) {\n        arr[i] = null\n        return false\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Publishes a topic.  Calls functions subscribed to the topic in\n * the order in which they were added.  If any of the functions throws an\n * uncaught error, publishing is aborted.\n *\n * @param {string} topic Topic to publish. Passing an empty string does\n *     nothing.\n */\nspfPubsub.publish = function (topic) {\n  spfPubsub.publish_(topic)\n}\n\n/**\n * Simulaneously publishes and clears a topic.  Calls functions subscribed to\n * topic in the order in which they were added, unsubscribing each beforehand.\n * If any of the functions throws an uncaught error, publishing is aborted.\n * See {#publish} and {#clear}.\n *\n * @param {string} topic Topic to publish. Passing an empty string does\n *     nothing.\n */\nspfPubsub.flush = function (topic) {\n  spfPubsub.publish_(topic, true)\n}\n\n/**\n * See {@link #publish} or {@link #flush}.\n *\n * @param {string} topic Topic to publish.\n * @param {boolean=} opt_unsub Whether to unsubscribe functions beforehand.\n * @private\n */\nspfPubsub.publish_ = function (topic, opt_unsub) {\n  if (topic in spfPubsub.subscriptions) {\n    spfArray.each(spfPubsub.subscriptions[topic], function (subFn, i, arr) {\n      if (opt_unsub) {\n        arr[i] = null\n      }\n      if (subFn) {\n        subFn()\n      }\n    })\n  }\n}\n\n/**\n * Renames a topic.  All functions subscribed to the old topic will then\n * be subscribed to the new topic instead.\n *\n * @param {string} oldTopic The old name for the topic. Passing an empty string\n *     does nothing.\n * @param {string} newTopic The new name for the topic. Passing an empty string\n *     does nothing.\n */\nspfPubsub.rename = function (oldTopic, newTopic) {\n  if (oldTopic && newTopic && oldTopic in spfPubsub.subscriptions) {\n    var existing = spfPubsub.subscriptions[newTopic] || []\n    spfPubsub.subscriptions[newTopic] =\n        existing.concat(spfPubsub.subscriptions[oldTopic])\n    spfPubsub.clear(oldTopic)\n  }\n}\n\n/**\n * Clears the subscription list for a topic.\n *\n * @param {string} topic Topic to clear.\n */\nspfPubsub.clear = function (topic) {\n  delete spfPubsub.subscriptions[topic]\n}\n\n/**\n * Map of subscriptions.\n * @type {!Object.<Array>}\n */\nspfPubsub.subscriptions = {}\n\n// Automatic initialization for spfPubsub.subscriptions.\n// When built for the bootloader, unconditionally set in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.PUBSUB_SUBS, spfPubsub.subscriptions)\n} else {\n  if (!spfState.has(spfState.Key.PUBSUB_SUBS)) {\n    spfState.set(spfState.Key.PUBSUB_SUBS, spfPubsub.subscriptions)\n  }\n  spfPubsub.subscriptions = /** @type {!Object.<Array>} */ (\n      spfState.get(spfState.Key.PUBSUB_SUBS))\n}\n\nexport default spfPubsub\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/pubsub/pubsub.js","(function () {\n  var slice = [].slice\n\n  this.ActionCable = {\n    INTERNAL: {\n      'message_types': {\n        'welcome': 'welcome',\n        'ping': 'ping',\n        'confirmation': 'confirm_subscription',\n        'rejection': 'reject_subscription'\n      },\n      'default_mount_path': '/cable',\n      'protocols': ['actioncable-v1-json', 'actioncable-unsupported']\n    },\n    createConsumer: function (url) {\n      var ref\n      if (url == null) {\n        url = (ref = this.getConfig('url')) != null ? ref : this.INTERNAL.default_mount_path\n      }\n      return new ActionCable.Consumer(this.createWebSocketURL(url))\n    },\n    getConfig: function (name) {\n      var element\n      element = document.head.querySelector(\"meta[name='action-cable-\" + name + \"']\")\n      return element != null ? element.getAttribute('content') : void 0\n    },\n    createWebSocketURL: function (url) {\n      var a\n      if (url && !/^wss?:/i.test(url)) {\n        a = document.createElement('a')\n        a.href = url\n        a.href = a.href\n        a.protocol = a.protocol.replace('http', 'ws')\n        return a.href\n      } else {\n        return url\n      }\n    },\n    startDebugging: function () {\n      return this.debugging = true\n    },\n    stopDebugging: function () {\n      return this.debugging = null\n    },\n    log: function () {\n      var messages\n      messages = arguments.length >= 1 ? slice.call(arguments, 0) : []\n      if (this.debugging) {\n        messages.push(Date.now())\n        return console.log.apply(console, ['[ActionCable]'].concat(slice.call(messages)))\n      }\n    }\n  }\n\n  if (typeof window !== 'undefined' && window !== null) {\n    window.ActionCable = this.ActionCable\n  }\n\n  if (typeof module !== 'undefined' && module !== null) {\n    module.exports = this.ActionCable\n  }\n}).call(window);\n(function () {\n  var bind = function (fn, me) { return function () { return fn.apply(me, arguments) } }\n\n  ActionCable.ConnectionMonitor = (function () {\n    var clamp, now, secondsSince\n\n    ConnectionMonitor.pollInterval = {\n      min: 3,\n      max: 30\n    }\n\n    ConnectionMonitor.staleThreshold = 6\n\n    function ConnectionMonitor (connection) {\n      this.connection = connection\n      this.visibilityDidChange = bind(this.visibilityDidChange, this)\n      this.reconnectAttempts = 0\n    }\n\n    ConnectionMonitor.prototype.start = function () {\n      if (!this.isRunning()) {\n        this.startedAt = now()\n        delete this.stoppedAt\n        this.startPolling()\n        document.addEventListener('visibilitychange', this.visibilityDidChange)\n        return ActionCable.log('ConnectionMonitor started. pollInterval = ' + (this.getPollInterval()) + ' ms')\n      }\n    }\n\n    ConnectionMonitor.prototype.stop = function () {\n      if (this.isRunning()) {\n        this.stoppedAt = now()\n        this.stopPolling()\n        document.removeEventListener('visibilitychange', this.visibilityDidChange)\n        return ActionCable.log('ConnectionMonitor stopped')\n      }\n    }\n\n    ConnectionMonitor.prototype.isRunning = function () {\n      return (this.startedAt != null) && (this.stoppedAt == null)\n    }\n\n    ConnectionMonitor.prototype.recordPing = function () {\n      return this.pingedAt = now()\n    }\n\n    ConnectionMonitor.prototype.recordConnect = function () {\n      this.reconnectAttempts = 0\n      this.recordPing()\n      delete this.disconnectedAt\n      return ActionCable.log('ConnectionMonitor recorded connect')\n    }\n\n    ConnectionMonitor.prototype.recordDisconnect = function () {\n      this.disconnectedAt = now()\n      return ActionCable.log('ConnectionMonitor recorded disconnect')\n    }\n\n    ConnectionMonitor.prototype.startPolling = function () {\n      this.stopPolling()\n      return this.poll()\n    }\n\n    ConnectionMonitor.prototype.stopPolling = function () {\n      return clearTimeout(this.pollTimeout)\n    }\n\n    ConnectionMonitor.prototype.poll = function () {\n      return this.pollTimeout = setTimeout((function (_this) {\n        return function () {\n          _this.reconnectIfStale()\n          return _this.poll()\n        }\n      })(this), this.getPollInterval())\n    }\n\n    ConnectionMonitor.prototype.getPollInterval = function () {\n      var interval, max, min, ref\n      ref = this.constructor.pollInterval, min = ref.min, max = ref.max\n      interval = 5 * Math.log(this.reconnectAttempts + 1)\n      return Math.round(clamp(interval, min, max) * 1000)\n    }\n\n    ConnectionMonitor.prototype.reconnectIfStale = function () {\n      if (this.connectionIsStale()) {\n        ActionCable.log('ConnectionMonitor detected stale connection. reconnectAttempts = ' + this.reconnectAttempts + ', pollInterval = ' + (this.getPollInterval()) + ' ms, time disconnected = ' + (secondsSince(this.disconnectedAt)) + ' s, stale threshold = ' + this.constructor.staleThreshold + ' s')\n        this.reconnectAttempts++\n        if (this.disconnectedRecently()) {\n          return ActionCable.log('ConnectionMonitor skipping reopening recent disconnect')\n        } else {\n          ActionCable.log('ConnectionMonitor reopening')\n          return this.connection.reopen()\n        }\n      }\n    }\n\n    ConnectionMonitor.prototype.connectionIsStale = function () {\n      var ref\n      return secondsSince((ref = this.pingedAt) != null ? ref : this.startedAt) > this.constructor.staleThreshold\n    }\n\n    ConnectionMonitor.prototype.disconnectedRecently = function () {\n      return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold\n    }\n\n    ConnectionMonitor.prototype.visibilityDidChange = function () {\n      if (document.visibilityState === 'visible') {\n        return setTimeout((function (_this) {\n          return function () {\n            if (_this.connectionIsStale() || !_this.connection.isOpen()) {\n              ActionCable.log('ConnectionMonitor reopening stale connection on visibilitychange. visbilityState = ' + document.visibilityState)\n              return _this.connection.reopen()\n            }\n          }\n        })(this), 200)\n      }\n    }\n\n    now = function () {\n      return new Date().getTime()\n    }\n\n    secondsSince = function (time) {\n      return (now() - time) / 1000\n    }\n\n    clamp = function (number, min, max) {\n      return Math.max(min, Math.min(max, number))\n    }\n\n    return ConnectionMonitor\n  })()\n}).call(window);\n(function () {\n  var i, message_types, protocols, ref, supportedProtocols, unsupportedProtocol,\n    slice = [].slice,\n    bind = function (fn, me) { return function () { return fn.apply(me, arguments) } },\n    indexOf = [].indexOf || function (item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i } return -1 }\n\n  ref = ActionCable.INTERNAL, message_types = ref.message_types, protocols = ref.protocols\n\n  supportedProtocols = protocols.length >= 2 ? slice.call(protocols, 0, i = protocols.length - 1) : (i = 0, []), unsupportedProtocol = protocols[i++]\n\n  ActionCable.Connection = (function () {\n    Connection.reopenDelay = 500\n\n    function Connection (consumer) {\n      this.consumer = consumer\n      this.open = bind(this.open, this)\n      this.subscriptions = this.consumer.subscriptions\n      this.monitor = new ActionCable.ConnectionMonitor(this)\n      this.disconnected = true\n    }\n\n    Connection.prototype.send = function (data) {\n      if (this.isOpen()) {\n        this.webSocket.send(JSON.stringify(data))\n        return true\n      } else {\n        return false\n      }\n    }\n\n    Connection.prototype.open = function () {\n      if (this.isActive()) {\n        ActionCable.log('Attempted to open WebSocket, but existing socket is ' + (this.getState()))\n        throw new Error('Existing connection must be closed before opening')\n      } else {\n        ActionCable.log('Opening WebSocket, current state is ' + (this.getState()) + ', subprotocols: ' + protocols)\n        if (this.webSocket != null) {\n          this.uninstallEventHandlers()\n        }\n        this.webSocket = new WebSocket(this.consumer.url, protocols)\n        this.installEventHandlers()\n        this.monitor.start()\n        return true\n      }\n    }\n\n    Connection.prototype.close = function (arg) {\n      var allowReconnect, ref1\n      allowReconnect = (arg != null ? arg : {\n        allowReconnect: true\n      }).allowReconnect\n      if (!allowReconnect) {\n        this.monitor.stop()\n      }\n      if (this.isActive()) {\n        return (ref1 = this.webSocket) != null ? ref1.close() : void 0\n      }\n    }\n\n    Connection.prototype.reopen = function () {\n      var error, error1\n      ActionCable.log('Reopening WebSocket, current state is ' + (this.getState()))\n      if (this.isActive()) {\n        try {\n          return this.close()\n        } catch (error1) {\n          error = error1\n          return ActionCable.log('Failed to reopen WebSocket', error)\n        } finally {\n          ActionCable.log('Reopening WebSocket in ' + this.constructor.reopenDelay + 'ms')\n          setTimeout(this.open, this.constructor.reopenDelay)\n        }\n      } else {\n        return this.open()\n      }\n    }\n\n    Connection.prototype.getProtocol = function () {\n      var ref1\n      return (ref1 = this.webSocket) != null ? ref1.protocol : void 0\n    }\n\n    Connection.prototype.isOpen = function () {\n      return this.isState('open')\n    }\n\n    Connection.prototype.isActive = function () {\n      return this.isState('open', 'connecting')\n    }\n\n    Connection.prototype.isProtocolSupported = function () {\n      var ref1\n      return ref1 = this.getProtocol(), indexOf.call(supportedProtocols, ref1) >= 0\n    }\n\n    Connection.prototype.isState = function () {\n      var ref1, states\n      states = arguments.length >= 1 ? slice.call(arguments, 0) : []\n      return ref1 = this.getState(), indexOf.call(states, ref1) >= 0\n    }\n\n    Connection.prototype.getState = function () {\n      var ref1, state, value\n      for (state in WebSocket) {\n        value = WebSocket[state]\n        if (value === ((ref1 = this.webSocket) != null ? ref1.readyState : void 0)) {\n          return state.toLowerCase()\n        }\n      }\n      return null\n    }\n\n    Connection.prototype.installEventHandlers = function () {\n      var eventName, handler\n      for (eventName in this.events) {\n        handler = this.events[eventName].bind(this)\n        this.webSocket['on' + eventName] = handler\n      }\n    }\n\n    Connection.prototype.uninstallEventHandlers = function () {\n      var eventName\n      for (eventName in this.events) {\n        this.webSocket['on' + eventName] = function () {}\n      }\n    }\n\n    Connection.prototype.events = {\n      message: function (event) {\n        var identifier, message, ref1, type\n        if (!this.isProtocolSupported()) {\n          return\n        }\n        ref1 = JSON.parse(event.data), identifier = ref1.identifier, message = ref1.message, type = ref1.type\n        switch (type) {\n          case message_types.welcome:\n            this.monitor.recordConnect()\n            return this.subscriptions.reload()\n          case message_types.ping:\n            return this.monitor.recordPing()\n          case message_types.confirmation:\n            return this.subscriptions.notify(identifier, 'connected')\n          case message_types.rejection:\n            return this.subscriptions.reject(identifier)\n          default:\n            return this.subscriptions.notify(identifier, 'received', message)\n        }\n      },\n      open: function () {\n        ActionCable.log(\"WebSocket onopen event, using '\" + (this.getProtocol()) + \"' subprotocol\")\n        this.disconnected = false\n        if (!this.isProtocolSupported()) {\n          ActionCable.log('Protocol is unsupported. Stopping monitor and disconnecting.')\n          return this.close({\n            allowReconnect: false\n          })\n        }\n      },\n      close: function (event) {\n        ActionCable.log('WebSocket onclose event')\n        if (this.disconnected) {\n          return\n        }\n        this.disconnected = true\n        this.monitor.recordDisconnect()\n        return this.subscriptions.notifyAll('disconnected', {\n          willAttemptReconnect: this.monitor.isRunning()\n        })\n      },\n      error: function () {\n        return ActionCable.log('WebSocket onerror event')\n      }\n    }\n\n    return Connection\n  })()\n}).call(window);\n(function () {\n  var slice = [].slice\n\n  ActionCable.Subscriptions = (function () {\n    function Subscriptions (consumer) {\n      this.consumer = consumer\n      this.subscriptions = []\n    }\n\n    Subscriptions.prototype.create = function (channelName, mixin) {\n      var channel, params, subscription\n      channel = channelName\n      params = typeof channel === 'object' ? channel : {\n        channel: channel\n      }\n      subscription = new ActionCable.Subscription(this.consumer, params, mixin)\n      return this.add(subscription)\n    }\n\n    Subscriptions.prototype.add = function (subscription) {\n      this.subscriptions.push(subscription)\n      this.consumer.ensureActiveConnection()\n      this.notify(subscription, 'initialized')\n      this.sendCommand(subscription, 'subscribe')\n      return subscription\n    }\n\n    Subscriptions.prototype.remove = function (subscription) {\n      this.forget(subscription)\n      if (!this.findAll(subscription.identifier).length) {\n        this.sendCommand(subscription, 'unsubscribe')\n      }\n      return subscription\n    }\n\n    Subscriptions.prototype.reject = function (identifier) {\n      var i, len, ref, results, subscription\n      ref = this.findAll(identifier)\n      results = []\n      for (i = 0, len = ref.length; i < len; i++) {\n        subscription = ref[i]\n        this.forget(subscription)\n        this.notify(subscription, 'rejected')\n        results.push(subscription)\n      }\n      return results\n    }\n\n    Subscriptions.prototype.forget = function (subscription) {\n      var s\n      this.subscriptions = (function () {\n        var i, len, ref, results\n        ref = this.subscriptions\n        results = []\n        for (i = 0, len = ref.length; i < len; i++) {\n          s = ref[i]\n          if (s !== subscription) {\n            results.push(s)\n          }\n        }\n        return results\n      }.call(this))\n      return subscription\n    }\n\n    Subscriptions.prototype.findAll = function (identifier) {\n      var i, len, ref, results, s\n      ref = this.subscriptions\n      results = []\n      for (i = 0, len = ref.length; i < len; i++) {\n        s = ref[i]\n        if (s.identifier === identifier) {\n          results.push(s)\n        }\n      }\n      return results\n    }\n\n    Subscriptions.prototype.reload = function () {\n      var i, len, ref, results, subscription\n      ref = this.subscriptions\n      results = []\n      for (i = 0, len = ref.length; i < len; i++) {\n        subscription = ref[i]\n        results.push(this.sendCommand(subscription, 'subscribe'))\n      }\n      return results\n    }\n\n    Subscriptions.prototype.notifyAll = function () {\n      var args, callbackName, i, len, ref, results, subscription\n      callbackName = arguments[0], args = arguments.length >= 2 ? slice.call(arguments, 1) : []\n      ref = this.subscriptions\n      results = []\n      for (i = 0, len = ref.length; i < len; i++) {\n        subscription = ref[i]\n        results.push(this.notify.apply(this, [subscription, callbackName].concat(slice.call(args))))\n      }\n      return results\n    }\n\n    Subscriptions.prototype.notify = function () {\n      var args, callbackName, i, len, results, subscription, subscriptions\n      subscription = arguments[0], callbackName = arguments[1], args = arguments.length >= 3 ? slice.call(arguments, 2) : []\n      if (typeof subscription === 'string') {\n        subscriptions = this.findAll(subscription)\n      } else {\n        subscriptions = [subscription]\n      }\n      results = []\n      for (i = 0, len = subscriptions.length; i < len; i++) {\n        subscription = subscriptions[i]\n        results.push(typeof subscription[callbackName] === 'function' ? subscription[callbackName].apply(subscription, args) : void 0)\n      }\n      return results\n    }\n\n    Subscriptions.prototype.sendCommand = function (subscription, command) {\n      var identifier\n      identifier = subscription.identifier\n      return this.consumer.send({\n        command: command,\n        identifier: identifier\n      })\n    }\n\n    return Subscriptions\n  })()\n}).call(window);\n(function () {\n  ActionCable.Subscription = (function () {\n    var extend\n\n    function Subscription (consumer, params, mixin) {\n      this.consumer = consumer\n      if (params == null) {\n        params = {}\n      }\n      this.identifier = JSON.stringify(params)\n      extend(this, mixin)\n    }\n\n    Subscription.prototype.perform = function (action, data) {\n      if (data == null) {\n        data = {}\n      }\n      data.action = action\n      return this.send(data)\n    }\n\n    Subscription.prototype.send = function (data) {\n      return this.consumer.send({\n        command: 'message',\n        identifier: this.identifier,\n        data: JSON.stringify(data)\n      })\n    }\n\n    Subscription.prototype.unsubscribe = function () {\n      return this.consumer.subscriptions.remove(this)\n    }\n\n    extend = function (object, properties) {\n      var key, value\n      if (properties != null) {\n        for (key in properties) {\n          value = properties[key]\n          object[key] = value\n        }\n      }\n      return object\n    }\n\n    return Subscription\n  })()\n}).call(window);\n(function () {\n  ActionCable.Consumer = (function () {\n    function Consumer (url) {\n      this.url = url\n      this.subscriptions = new ActionCable.Subscriptions(this)\n      this.connection = new ActionCable.Connection(this)\n    }\n\n    Consumer.prototype.send = function (data) {\n      return this.connection.send(data)\n    }\n\n    Consumer.prototype.connect = function () {\n      return this.connection.open()\n    }\n\n    Consumer.prototype.disconnect = function () {\n      return this.connection.close({\n        allowReconnect: false\n      })\n    }\n\n    Consumer.prototype.ensureActiveConnection = function () {\n      if (!this.connection.isActive()) {\n        return this.connection.open()\n      }\n    }\n\n    return Consumer\n  })()\n}).call(window)\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/common/ActionCable.js","export default class LoadingBar {\n  constructor (options) {\n  \toptions = options || {}\n    this.height = options.height\n    this.width = options.width\n    this.type = options.type || 'normal'\n    this.percent = options.percent || 0\n    this.show = false\n    this.timer = null\n    this.loadingEle = null\n  }\n\n  init (options) {\n  \tlet container = document.getElementById('loadingBar-container')\n  \tlet bar = document.createElement('div')\n  \tbar.id = 'loadingBar'\n  \tbar.className = 'app-loading-bar'\n\n  \tlet inner = document.createElement('span')\n  \tinner.className = 'app-loading-bar-inner app-loading-bar-inner-color-primary'\n\n  \tthis.loadingEle = inner\n  \tbar.appendChild(inner)\n\n  \tcontainer.appendChild(bar)\n  }\n\n  start () {\n  \tif (this.timer) return\n  \tthis.percent = 0\n  \tthis.init()\n  \tthis.timer = setInterval(() => {\n    this.percent += Math.floor(Math.random() * 3 + 5)\n    if (this.percent > 95) {\n        \tclearInterval(this.timer)\n    }\n    this.update({\n      percent: this.percent,\n      type: 'normal',\n      show: true\n    })\n  }, 200)\n  }\n\n  update (options) {\n  \tthis.percent = options.percent\n  \tthis.type = options.type\n  \tthis.show = options.show\n  \tif (this.type === 'error') this.loadingEle.style.backgroundColor = 'red'\n  \tthis.loadingEle.style.width = this.percent + '%'\n  }\n\n  finish () {\n  \tthis.update({\n  \t\tpercent: 100,\n  \t\ttype: 'normal',\n  \t\tshow: true\n  \t})\n  }\n\n  error () {\n  \tthis.update({\n  \t\tpercent: 100,\n  \t\ttype: 'error',\n  \t\tshow: true\n  \t})\n  }\n\n  destroy () {\n  \tclearInterval(this.timer)\n  \tlet loadingBarEle = document.getElementById('loadingBar')\n  \tloadingBarEle.parentElement.removeChild(loadingBarEle)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/common/loadingBar.js","import {handleMethod} from '../common/handleMethod'\n\nexport function dataLinks () {\n  document.addEventListener('click', processDataLink, false)\n}\nfunction processDataLink (ev) {\n  let e = window.e || ev\n\n  if (e.target.tagName !== 'A') return\n\n  if (e.target.dataset.method === 'delete') {\n    e.preventDefault()\n    if (e.target.getAttribute('href') === '/logout') {\n      if (A.destroy[A.gc.currentName]) A.destroy[A.gc.currentName].apply(null)\n    };\n    handleMethod(e.target)\n  }\n  if (e.target.dataset.method === 'PATCH') {\n    e.preventDefault()\n    handleMethod(e.target)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/modules/dataLinks.js","let hmInstance\nlet fd, fa\nfunction formDataToQuerystring(fd) {\n  return [...fd.entries()]\n    .map(e => encodeURIComponent(e[0]) + '=' + encodeURIComponent(e[1]))\n    .join('&')\n}\nexport function processFormSubmit(ev) {\n  let e = window.e || ev\n  let tt = e.target\n\n  if (\n    tt.tagName === 'INPUT' &&\n    tt.classList.contains('c-form-submit') &&\n    tt.getAttribute('type') === 'submit' &&\n    tt.getAttribute('name') === 'commit'\n  ) {\n    e.preventDefault()\n    let f = tt.closest('form')\n    let fa = f.action\n    let fm = f.method\n    let fd = new FormData(f)\n    window.A.spf.load(\n      `${fa}${fm.toLowerCase() === 'get'\n        ? '?' + formDataToQuerystring(fd)\n        : ''}`,\n      {\n        headers: {\n          Accept: 'application/json'\n        },\n        method: fm,\n        postData: fd,\n        onProcess: function(evt) {\n          // exitProcessPostLink();\n          if (\n            A.fnpuLoad[A.gc.currentName] &&\n            A.fnpuLoad[A.gc.currentName]['process'] &&\n            typeof A.fnpuLoad[A.gc.currentName]['process'] === 'function'\n          ) {\n            A.fnpuLoad[A.gc.currentName]['process'].apply(null)\n          }\n        },\n        onDone: function(evt) {\n          // processPostLink();\n          if (\n            A.fnpuLoad[A.gc.currentName] &&\n            A.fnpuLoad[A.gc.currentName]['done'] &&\n            typeof A.fnpuLoad[A.gc.currentName]['done'] === 'function'\n          ) {\n            A.fnpuLoad[A.gc.currentName]['done'].apply(null)\n          }\n          if (\n            evt.response &&\n            evt.response.status === 'success' &&\n            evt.response.url\n          )\n            window.A.spf.navigate(evt.response.url)\n        }\n      }\n    )\n  }\n}\nexport function formSubmit() {\n  document.addEventListener('click', processFormSubmit, false)\n}\nfunction exitProcessPostLink() {\n  document.removeEventListener('click', processDataLink, false)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/modules/formSubmit.js","import {handleMethod} from '../common/handleMethod2'\n\nlet hmInstance\nlet fd, fa\n\nexport function processDataLink (ev) {\n  let e = window.e || ev\n\n  if (e.target.tagName !== 'A') return\n\n  if (e.target.dataset.method === 'fnpu_delete') {\n    e.preventDefault()\n    hmInstance = handleMethod(e.target, 'delete')\n    fa = e.target.getAttribute('href')\n    fd = new FormData(hmInstance)\n    window.A.spf.load(fa, {\n      method: 'POST',\n      postData: fd,\n      onProcess: function (evt) {\n        // exitProcessPostLink();\n        if (A.fnpuLoad[A.gc.currentName] &&\n\t\t        A.fnpuLoad[A.gc.currentName]['process'] &&\n\t\t        (typeof A.fnpuLoad[A.gc.currentName]['process'] === 'function')) {\n        \tA.fnpuLoad[A.gc.currentName]['process'].apply(null)\n        }\n      },\n      onDone: function (evt) {\n        // processPostLink();\n        if (A.fnpuLoad[A.gc.currentName] &&\n\t\t        A.fnpuLoad[A.gc.currentName]['done'] &&\n\t\t        (typeof A.fnpuLoad[A.gc.currentName]['done'] === 'function')) {\n        \tA.fnpuLoad[A.gc.currentName]['done'].apply(null)\n        }\n      }\n    })\n  }\n}\nexport function processPostLink () {\n  document.addEventListener('click', processDataLink, false)\n}\nfunction exitProcessPostLink () {\n  document.removeEventListener('click', processDataLink, false)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/modules/postHandler.js","import {spfBase} from './base'\nimport spfMain from './main'\nimport spfConfig from './config'\nimport spfCache from './cache/cache'\nimport spfDebug from './debug/debug'\nimport spfHistory from './history/history'\nimport spfNav from './nav/nav'\nimport spfNetStyle from './net/style'\nimport spfNetScript from './net/script'\n\nlet spfEntry = {}\n// Create the API by exporting aliased functions.\n// Core API functions are available on the top-level namespace.\n// Extra API functions are available on second-level namespaces.\n/** @private {!Object} */\nspfEntry.api_ = {\n  'init': spfMain.init,\n  'dispose': spfMain.dispose,\n  'navigate': spfNav.navigate,\n  'load': spfNav.load,\n  'prefetch': spfNav.prefetch,\n  'process': spfNav.process\n}\n/** @private {!Object} */\nspfEntry.extra_ = {\n  'cache': {\n    // Cache API.\n    // * Remove one entry.\n    'remove': spfCache.remove,\n    // * Clear all entries.\n    'clear': spfCache.clear\n  },\n  'script': {\n    // The bootloader API.\n    // * Load scripts.\n    'load': spfNetScript.load,\n    'get': spfNetScript.get,\n    // * Wait until ready.\n    'ready': spfNetScript.ready,\n    'done': spfNetScript.done,\n    // * Load in depedency order.\n    'require': spfNetScript.require,\n    // * Set dependencies and paths.\n    'declare': spfNetScript.declare,\n    'path': spfNetScript.path,\n    // Extended script loading API.\n    // * Unload scripts.\n    'unload': spfNetScript.unload,\n    // * Ignore ready.\n    'ignore': spfNetScript.ignore,\n    // * Unload in depedency order.\n    'unrequire': spfNetScript.unrequire,\n    // * Prefetch.\n    'prefetch': spfNetScript.prefetch\n  },\n  'style': {\n    // Style loading API.\n    // * Load styles.\n    'load': spfNetStyle.load,\n    'get': spfNetStyle.get,\n    // * Unload styles.\n    'unload': spfNetStyle.unload,\n    // * Set paths.\n    'path': spfNetStyle.path,\n    // * Prefetch.\n    'prefetch': spfNetStyle.prefetch\n  }\n}\n// For a production/debug build, isolate access to the API.\n// For a development build, mixin the API to the existing namespace.\nlet spfEs = {}\n\nfor (var fn1 in spfEntry.api_) {\n  spfEs[fn1] = spfEntry.api_[fn1]\n}\n// Use two-stage exporting to allow aliasing the intermediate namespaces\n// created by the bootloader (e.g. s = spf.script; s.load(...)).\nfor (var ns in spfEntry.extra_) {\n  for (var fn2 in spfEntry.extra_[ns]) {\n    spfEs[ns] = spfEs[ns] || {}\n    spfEs[ns][fn2] = spfEntry.extra_[ns][fn2]\n  }\n}\n\nexport default spfEs\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/entry.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/stylesheet/globalA.scss\n// module id = 142\n// module chunks = 0","import {rorParams as RPs} from '../common/csrf'\n/**\n * [handleMethod description]\n * @param  {HTMLElement} link [description]\n * @return {[type]}      [description]\n * Handles \"data-method\" on links such as:\n * <a href=\"/users/5\" data-method=\"delete\" rel=\"nofollow\" data-confirm=\"Are you sure?\">Delete</a>\n */\nexport function handleMethod (link, obj = {}) {\n  var href = link.getAttribute('href'),\n    method = link.dataset.method,\n    target = link.getAttribute('target'),\n    csrfToken = RPs.csrfToken(),\n    csrfParam = RPs.csrfParam()\n  var paramsObj = {\n    href: href,\n    method: method,\n    target: target,\n    csrfToken: csrfToken,\n    csrfParam: csrfParam\n  }\n  var formEle = createForm(paramsObj, obj)\n  appendFormToDom(formEle)\n  submitForm(formEle)\n}\nfunction createForm (params, obj) {\n  var f = document.createElement('form')\n  f.style.display = 'none'\n  f.setAttribute('method', 'post')\n  f.setAttribute('action', params.href)\n  if (params.target) {\n    f.setAttribute('target', params.target)\n  };\n\n  var i = document.createElement('input')\n  i.setAttribute('type', 'hidden')\n  i.setAttribute('name', '_method')\n  i.setAttribute('value', params.method)\n\n  var s\n  if (params.csrfParam !== undefined &&\n      params.csrfToken !== undefined &&\n      !RPs.isCrossDomain(params.href)) {\n    s = document.createElement('input')\n    s.setAttribute('type', 'hidden')\n    s.setAttribute('name', params.csrfParam)\n    s.setAttribute('value', params.csrfToken)\n  }\n  f.appendChild(i)\n\n  // for (let key in obj.data) {\n  //   if (obj.data.hasOwnProperty(key)) {\n  //     let t = document.createElement('input');\n  //     t.setAttribute('type','hidden');\n  //     t.setAttribute('name','' + obj.ns + '[' + key + ']');\n  //     t.setAttribute('value',obj.data[key]);\n  //     f.appendChild(t);\n  //   }\n  // }\n\n  if (s) {\n    f.appendChild(s)\n  };\n  return f\n}\n\nfunction appendFormToDom (form) {\n  document.body.appendChild(form)\n}\nfunction submitForm (form) {\n  form.submit()\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/common/handleMethod.js","import styles from '../../../stylesheet/globalA.scss'\n\nimport {ActionCable} from '../common/ActionCable'\n\nimport spfEs from '../spf/entry'\nimport {dataLinks} from '../modules/dataLinks'\nimport {formSubmit} from '../modules/formSubmit'\n\nimport {processPostLink} from '../modules/postHandler'\n\nimport LoadingBar from '../common/loadingBar'\n\nlet A = window.A || {}\nwindow.A = A\nA.spf = spfEs\nlet app = window.A.app || {}\n\ndataLinks()\nformSubmit()\nprocessPostLink()\n\n/**\n * Initialize the app.\n */\napp.init = function () {\n  app.start_ = +new Date()\n  if (window.addEventListener) {\n    window.addEventListener('spfclick', app.onClick)\n    window.addEventListener('spfhistory', app.onHistory)\n    window.addEventListener('spfrequest', app.onRequest)\n    window.addEventListener('spfpartprocess', app.onPartProcess)\n    window.addEventListener('spfpartdone', app.onPartDone)\n    window.addEventListener('spfprocess', app.onProcess)\n    window.addEventListener('spfdone', app.onDone)\n    window.addEventListener('spferror', app.onError)\n\n    window.addEventListener('spfjsbeforeunload', app.onScriptBeforeUnload)\n    window.addEventListener('spfjsunload', app.onScriptUnload)\n    window.addEventListener('spfcssbeforeunload', app.onStyleBeforeUnload)\n    window.addEventListener('spfcssunload', app.onStyleUnload)\n  }\n  app.enabled = A.spf.init()\n}\n\n/**\n * Dispose the demo app.\n */\napp.dispose = function () {\n  app.start_ = 0\n  app.enabled = false\n  if (window.removeEventListener) {\n    window.removeEventListener('spfclick', app.onClick)\n    window.removeEventListener('spfhistory', app.onHistory)\n    window.removeEventListener('spfrequest', app.onRequest)\n    window.removeEventListener('spfpartprocess', app.onPartProcess)\n    window.removeEventListener('spfpartdone', app.onPartDone)\n    window.removeEventListener('spfprocess', app.onProcess)\n    window.removeEventListener('spfdone', app.onDone)\n    window.removeEventListener('spferror', app.onError)\n\n    window.removeEventListener('spfjsbeforeunload', app.onScriptBeforeUnload)\n    window.removeEventListener('spfjsunload', app.onScriptUnload)\n    window.removeEventListener('spfcssbeforeunload', app.onStyleBeforeUnload)\n    window.removeEventListener('spfcssunload', app.onStyleUnload)\n  }\n}\n\n/**\n * Simple central logging function for the demo app.\n * @param {string} msg Message to log.\n */\napp.log = function (msg) {\n  if (window.console) {\n    // window.console.log('[app] ' + msg);\n  }\n}\n\n/**\n * Event handler for when a navigate click occurs.\n * @param {CustomEvent} evt The event.\n */\napp.onClick = function (evt) {\n  app.log('globalA--navigate click ' + evt.detail.url)\n}\n\n/**\n * Event handler for when a navigate history change occurs.\n * @param {CustomEvent} evt The event.\n */\napp.onHistory = function (evt) {\n  app.log('globalA--navigate history ' + evt.detail.url)\n}\n\n/**\n * Event handler for when navigate requests are going to be sent.\n * @param {CustomEvent} evt The event.\n */\napp.onRequest = function (evt) {\n  if (!app.ins) {\n    app.ins = new LoadingBar()\n    app.ins.start()\n  }\n  app.log('globalA--navigate request ' + evt.detail.url)\n  // If debug logging is enabled, reset the relative times when each new\n  // request is sent.\n  if (A.spf.debug) {\n    A.spf.debug.reset()\n  }\n}\n\n/**\n * Event handler for when parts of navigate responses are going to be processed.\n * @param {CustomEvent} evt The event.\n */\napp.onPartProcess = function (evt) {\n  app.log('globalA--navigate part process ' + evt.detail.url)\n}\n\n/**\n * Event handler for when parts of navigate responses are done being processed.\n * @param {CustomEvent} evt The event.\n */\napp.onPartDone = function (evt) {\n  app.log('globalA--navigate part done ' + evt.detail.url)\n}\n\n/**\n * Event handler for when navigate responses are going to be processed.\n * @param {CustomEvent} evt The event.\n */\napp.onProcess = function (evt) {\n  if (A.detach[A.gc.currentName]) A.detach[A.gc.currentName].apply(null)\n  if (A.destroy[A.gc.currentName]) A.destroy[A.gc.currentName].apply(null)\n  app.destroy(A.gc.currentName)\n  A.gc.currentName = evt.detail.response.name\n  app.log('globalA--navigate process ' + evt.detail.url)\n}\n\n/**\n * Event handler for when navigate responses are done being processed.\n * @param {CustomEvent} evt The event.\n */\napp.onDone = function (evt) {\n  if (app.ins) {\n    app.ins.finish()\n    setTimeout(() => { app.ins.destroy(); app.ins = null }, 100)\n  }\n  if (A.init[A.gc.currentName]) A.init[A.gc.currentName].apply(null)\n}\n\n/**\n * Event handler for navigate errors.\n * @param {CustomEvent} evt The event.\n */\napp.onError = function (evt) {\n  if (app.ins) {\n    app.ins.error()\n    setTimeout(() => { app.ins.destroy(); app.ins = null }, 1000)\n  }\n  app.log('globalA--navigate error ' + evt.detail.url)\n}\n\n/**\n * Event handler for script before unload.\n * @param {CustomEvent} evt The event.\n */\napp.onScriptBeforeUnload = function (evt) {\n  var name = evt.detail.name\n  app.log('globalA--script before unload ' + name)\n}\n\n/**\n * Event handler for script unload.\n * @param {CustomEvent} evt The event.\n */\napp.onScriptUnload = function (evt) {\n  var name = evt.detail.name\n  var urls = evt.detail.urls\n  app.log('globalA--script unload ' + name + ' ' + urls)\n}\n\n/**\n * Event handler for style before unload.\n * @param {CustomEvent} evt The event.\n */\napp.onStyleBeforeUnload = function (evt) {\n  var name = evt.detail.name\n  app.log('globalA--style before unload ' + name)\n}\n\n/**\n * Event handler for style unload.\n * @param {CustomEvent} evt The event.\n */\napp.onStyleUnload = function (evt) {\n  var name = evt.detail.name\n  var urls = evt.detail.urls\n  app.log('globalA--style unload ' + name + ' ' + urls)\n}\n\n/**\n * [destroy entry]\n * @param  {[type]} name [description]\n * @return {[type]}      [description]\n */\napp.destroy = function (name) {\n  A.spf.style.unload(name)\n  // A.spf.script.unload(name);\n}\n\n/**\n * Whether SPF is enabled for the demo app.\n * @type {boolean}\n  */\napp.enabled = false\n\n/**\n * The timestamp of when the demo app started.\n * @type {number}\n * @private\n */\napp.start_ = 0\n\n/**\n * The timer counting since last page load.\n * @type {number}\n * @private\n */\napp.timer_ = 0\n\nA.app = app\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/entries/globalA.js","/**\n * @fileoverview Fast asynchronous function execution.\n *\n * This package provides functions to defer execution on the main thread\n * without using setTimeout, though setTimeout is used as a fallback in browsers\n * that do not support other methods.  Using these methods is advantageous when\n * one wants to schedule a callback faster than the setTimeout clamped minimum\n * allows (e.g. when doing `setTimeout(fn, 0)`)  The clamped minimum for\n * setTimeout is often 10ms, though when WebKit browsers are in a background\n * tab, setTimeout calls deprioritized to execute with a 1s delay.  In these\n * cases, this package provides an alternative.\n *\n */\n\nimport {spfBase, SPF_BOOTLOADER} from '../base'\nimport spfState from '../state'\nimport spfString from '../string/string'\n\n// goog.provide('spfAsync');\n\nlet spfAsync = {}\n\n/**\n * Defers execution of a function to the next slot on the main thread.\n *\n * @param {!Function} fn The function to defer.\n */\nspfAsync.defer = function (fn) {\n  var uid = spfBase.uid()\n  spfAsync.defers_[uid] = fn\n  if (spfAsync.POSTMESSAGE_SUPPORTED_) {\n    window.postMessage(spfAsync.PREFIX_ + uid, '*')\n  } else {\n    window.setTimeout(spfBase.bind(spfAsync.run_, null, uid), 0)\n  }\n}\n\n/**\n * Handles a message event and triggers execution function.\n *\n * @param {Event} evt The click event.\n * @private\n */\nspfAsync.handleMessage_ = function (evt) {\n  if (evt.data && spfString.isString(evt.data) &&\n      spfString.startsWith(evt.data, spfAsync.PREFIX_)) {\n    var uid = evt.data.substring(spfAsync.PREFIX_.length)\n    spfAsync.run_(uid)\n  }\n}\n\n/**\n * Executes a previously deferred function.\n *\n * @param {string|number} uid The UID associated with the function.\n * @private\n */\nspfAsync.run_ = function (uid) {\n  var fn = spfAsync.defers_[uid]\n  if (fn) {\n    delete spfAsync.defers_[uid]\n    fn()\n  }\n}\n\n/**\n * Adds a function as a listener for message events.\n *\n * @param {!Function} fn The function to add as a listener.\n * @private\n */\nspfAsync.addListener_ = function (fn) {\n  if (window.addEventListener) {\n    window.addEventListener('message', fn, false)\n  } else if (window.attachEvent) {\n    window.attachEvent('onmessage', fn)\n  }\n}\n\n/**\n * Removes a function as a listener for message events.\n *\n * @param {!Function} fn The function to remove as a listener.\n * @private\n */\nspfAsync.removeListener_ = function (fn) {\n  if (window.removeEventListener) {\n    window.removeEventListener('message', fn, false)\n  } else if (window.detachEvent) {\n    window.detachEvent('onmessage', fn)\n  }\n}\n\n/**\n * Whether the browser supports asynchronous postMessage calls.\n *\n * @private {boolean}\n */\nspfAsync.POSTMESSAGE_SUPPORTED_ = (function () {\n  if (!window.postMessage) {\n    return false\n  }\n  // Use postMessage where available.  But, ensure that postMessage is\n  // asynchronous; the implementation in IE8 is synchronous, which defeats\n  // the purpose.  To detect this, use a temporary \"onmessage\" listener.\n  var supported = true\n  var listener = function () { supported = false }\n  // Add the listener, dispatch a message event, and remove the listener.\n  spfAsync.addListener_(listener)\n  window.postMessage('', '*')\n  spfAsync.removeListener_(listener)\n  // Return the status.  If the postMessage implementation is correctly\n  // asynchronous, then the value of the `supported` variable will be\n  // true, but if the postMessage implementation is synchronous, the\n  // temporary listener will have executed and set the `supported`\n  // variable to false.\n  return supported\n})()\n\n/**\n * The prefix to use for message event data to avoid conflicts.\n *\n * @private {string}\n */\nspfAsync.PREFIX_ = 'spf:'\n\n/**\n * Map of deferred function calls.\n * @private {!Object.<!Function>}\n */\nspfAsync.defers_ = {}\n\n// Automatic initialization for spfAsync.defers_.\n// When built for the bootloader, unconditionally set in state.\nif (SPF_BOOTLOADER) {\n  spfState.set(spfState.Key.ASYNC_DEFERS, spfAsync.defers_)\n} else {\n  if (!spfState.has(spfState.Key.ASYNC_DEFERS)) {\n    spfState.set(spfState.Key.ASYNC_DEFERS, spfAsync.defers_)\n  }\n  spfAsync.defers_ = /** @type {!Object.<!Function>} */ (\n      spfState.get(spfState.Key.ASYNC_DEFERS))\n}\n\n// Automatic initialization for spfState.Key.ASYNC_LISTENER.\n// When built for the bootloader, unconditionally set in state.\nif (SPF_BOOTLOADER) {\n  if (spfAsync.POSTMESSAGE_SUPPORTED_) {\n    spfAsync.addListener_(spfAsync.handleMessage_)\n    spfState.set(spfState.Key.ASYNC_LISTENER, spfAsync.handleMessage_)\n  }\n} else {\n  if (spfAsync.POSTMESSAGE_SUPPORTED_) {\n    if (spfState.has(spfState.Key.ASYNC_LISTENER)) {\n      spfAsync.removeListener_(/** @type {function(Event)} */ (\n          spfState.get(spfState.Key.ASYNC_LISTENER)))\n    }\n    spfAsync.addListener_(spfAsync.handleMessage_)\n    spfState.set(spfState.Key.ASYNC_LISTENER, spfAsync.handleMessage_)\n  }\n}\n\nexport default spfAsync\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/async/async.js","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview The primary SPF entry point.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport {spfBase} from './base'\nimport spfConfig from './config'\nimport spfDebug from './debug/debug'\nimport spfHistory from './history/history'\nimport spfNav from './nav/nav'\nimport spfNetStyle from './net/style'\nimport spfNetScript from './net/script'\n\nlet spfMain = {}\n\n/**\n * Initializes SPF.\n *\n * @param {Object=} opt_config Optional global configuration object.\n * @return {boolean} Whether SPF was successfully initialized.  If the HTML5\n *     history modification API is not supported, returns false.\n */\nspfMain.init = function (opt_config) {\n  var enable = spfMain.canInit_()\n  spfDebug.info('main.init ', 'enable=', enable)\n  spfConfig.init(opt_config)\n  if (enable) {\n    spfNav.init()\n  }\n  // Signal that the API is ready with custom event.  Only supported in IE 9+.\n  spfBase.dispatch(spfBase.EventName.READY)\n\n  return enable\n}\n\n/**\n * Checks to see if SPF can be initialized.\n *\n * @return {boolean}\n * @private\n */\nspfMain.canInit_ = function () {\n  return !!(typeof window.history.pushState === 'function' ||\n      spfHistory.getIframe().contentWindow.history.pushState)\n}\n\n/**\n * Disposes SPF.\n */\nspfMain.dispose = function () {\n  var enable = !!(typeof History !== 'undefined' && History.prototype.pushState)\n  if (enable) {\n    spfNav.dispose()\n  }\n  spfConfig.clear()\n}\n\n/**\n * Discovers existing script and style elements in the document and registers\n * them as loaded, once during initial code execution and again when the\n * document is ready to catch any resources in the page after SPF is included.\n * @private\n */\nspfMain.discover_ = function () {\n  spfNetScript.discover()\n  spfNetStyle.discover()\n  if (document.readyState == 'complete') {\n    // Since IE 8+ is supported for common library functions such as script\n    // and style loading, use both standard and legacy event handlers to\n    // discover existing resources.\n    if (document.removeEventListener) {\n      document.removeEventListener(\n          'DOMContentLoaded', spfMain.discover_, false)\n    } else if (document.detachEvent) {\n      document.detachEvent(\n          'onreadystatechange', spfMain.discover_)\n    }\n  }\n}\nif (document.addEventListener) {\n  document.addEventListener(\n      'DOMContentLoaded', spfMain.discover_, false)\n} else if (document.attachEvent) {\n  document.attachEvent(\n        'onreadystatechange', spfMain.discover_)\n}\nspfMain.discover_()\n\nexport default spfMain\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/main.js","// Copyright 2013 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Navigation-related request functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport { spfBase } from '../base'\nimport spfArray from '../array/array'\nimport spfAsync from '../async/async'\nimport spfCache from '../cache/cache'\nimport spfConfig from '../config'\nimport spfDebug from '../debug/debug'\nimport spfNavResponse from '../nav/response'\nimport spfNetXhr from '../net/xhr'\nimport spfString from '../string/string'\nimport spfUrl from '../url/url'\n\nlet spfNavRequest = {}\n// goog.provide('spfNavRequest');\n\n/**\n * Type definition for the configuration options for an SPF request.\n * - method: optional method with which to send the request; defaults to \"GET\".\n * - headers: optional map of headers to send with the request.\n * - onPart: optional callback to execute with the parts of a multipart\n *       response.  The first argumet is the requested URL; the second argument\n *       is the partial response object.  If valid\n *       \"X-SPF-Response-Type: multipart\" and \"Transfer-Encoding: chunked\"\n *       headers are sent, then this callback be executed on-the-fly as chunks\n *       are received.\n * - onError: optional callback to execute if the request fails. The first\n *       argument is the requested URL; the second argument is the Error that\n *       occurred. If the type of request is \"navigate\", the second argument\n *       might be false if the request was canceled in response to the global\n *       \"navigate-received\" callback. The third argument is the XMLHttpRequest\n *       object for error\n * - onSuccess: optional callback to execute if the request succeeds.  The first\n *       argument is the requested URL; the second is the response object.  The\n *       response object will be either a complete single response object or\n *       a complete multipart response object.\n * - postData: optional data to send with the request.  Only used if the method\n *       is set to \"POST\".\n * - current: optional current page URL, without the SPF identifier.\n * - referer: optional referrer URL, without the SPF identifier.\n * - type: optional type of request (e.g. \"navigate\", \"load\", etc), used to\n *       alter the URL identifier and XHR header and used to determine whether\n *       the global \"navigation received\" callback is executed; defaults to\n *       \"request\".\n * - withCredentials: optional flag to send credentials if true.\n *\n * @typedef {{\n *   method: (string|undefined),\n *   headers: (Object.<string>|undefined),\n *   onPart: (function(string, spfBase.SingleResponse)|undefined),\n *   onError: (function(string,\n *                   (Error|boolean),\n *                   (XMLHttpRequest|null|undefined))|undefined),\n *   onSuccess: (function(string,\n *                   (spfBase.SingleResponse|spfBase.MultipartResponse))|undefined),\n *   postData: spfNetXhr.PostData,\n *   current: (string|null|undefined),\n *   referer: (string|null|undefined),\n *   type: (string|undefined),\n *   withCredentials: (boolean|undefined)\n * }}\n */\nspfNavRequest.Options\n\n/**\n * Requests a URL using the SPF protocol and parses the response.  If\n * successful, the URL and response object are passed to the optional\n * `onSuccess` callback.  If not, the URL is passed to the optional\n * `onError` callback.  If chunked response are being used, the\n * URL and each partial response object will be passed to the optional\n * `onPart` callback as they are received.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNavRequest.Options=} opt_options Configuration options.\n * @return {XMLHttpRequest} The XHR of the current request.\n */\nspfNavRequest.send = function(url, opt_options) {\n  spfDebug.debug('nav.request.send ', url, opt_options)\n  var options = opt_options || /** @type {spfNavRequest.Options} */ ({})\n  options.method = ((options.method || 'GET') + '').toUpperCase()\n  options.type = options.type || 'request'\n  // Add the SPF identifier, to be used for sending the request.\n  var requestUrl = spfUrl.absolute(spfUrl.identify(url, options.type))\n  spfDebug.debug('    request url ', requestUrl)\n  // Record a the time before sending the request or loading from cache.\n  // The startTime is consistent with W3C PerformanceResourceTiming for XHRs.\n  var timing = {}\n  // Keep actual absolute SPF request url info.\n  timing['spfUrl'] = requestUrl\n  timing['startTime'] = spfBase.now()\n  // Try to find a cached response for the request before sending a new XHR.\n  // Record fetchStart time before loading from cache. If no cached response\n  // is found, this value will be replaced with the one provided by the XHR.\n  timing['fetchStart'] = timing['startTime']\n  var cacheKey = spfNavRequest.getCacheKey_(\n    url,\n    options.current,\n    null,\n    options.type,\n    false\n  )\n  // Use the absolute URL without identifier to allow cached responses\n  // from prefetching to apply to navigation.\n  var cached = spfNavRequest.getCacheObject_(cacheKey, options.current)\n  timing['spfPrefetched'] = !!cached && cached.type == 'prefetch'\n  timing['spfCached'] = !!cached\n  if (cached) {\n    var response =\n      /** @type {spfBase.SingleResponse|spfBase.MultipartResponse} */ (cached.response)\n    // To ensure a similar execution pattern as an XHR, ensure the\n    // cache response is returned asynchronously.\n    var handleCache = spfBase.bind(\n      spfNavRequest.handleResponseFromCache_,\n      null,\n      url,\n      options,\n      timing,\n      cached.key,\n      response\n    )\n    // When WebKit browsers are in a background tab, setTimeout calls are\n    // deprioritized to execute with a 1s delay.  Avoid this by using\n    // postMessage to schedule execution; see spfAsync.delay for details.\n    spfAsync.defer(handleCache)\n    // Return null because no XHR is made.\n    return null\n  } else {\n    spfDebug.debug('    sending XHR')\n    var headers = {}\n    // Set headers provided by global config first.\n    var configHeaders = /** @type {Object.<string>} */ (spfConfig.get(\n      'request-headers'\n    ))\n    if (configHeaders) {\n      for (var key in configHeaders) {\n        var value = configHeaders[key]\n        // Treat undefined and null values as equivalent to an empty string.\n        // Note that undefined == null.\n        headers[key] = value == null ? '' : value\n      }\n    }\n    // Set headers provided by options second, to allow overrides.\n    if (options.headers) {\n      for (var key in options.headers) {\n        var value = options.headers[key]\n        // Treat undefined and null values as equivalent to an empty string.\n        // Note that undefined == null.\n        headers[key] = value == null ? '' : value\n      }\n    }\n    // Allow empty referrer values in history.\n    // Note that undefined == null.\n    if (options.referer != null) {\n      headers['X-SPF-Referer'] = options.referer\n    }\n    if (options.current != null) {\n      headers['X-SPF-Previous'] = options.current\n    }\n    // As an advanced option, allow request identification via a header.  This\n    // will allow removal of the default identification via URL:\n    //     GET /path\n    //     Accept: application/json\n    //     X-SPF-Request: navigate\n    // instead of:\n    //     GET /path?spf=navigate\n    // But, it comes with 2 extra restrictions:\n    // (1) The server MUST return a `Vary` header on some value that is\n    // different between SPF requests and default browser requests to avoid\n    // caching problems.  The best way to manage this is usually via the\n    // `Accept` header.  Since JSON is used for transport of SPF responses,\n    // a request that sends a value of `application/json` will work and will\n    // be different than standard requests.  A list of defaults used by\n    // various browser can be found at\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation.\n    // For the quest shown above, the response should then include:\n    //      Vary: Accept\n    // (2) The server MUST use SPF-based redirection, as custom headers (i.e.\n    // the `X-SPF-Request` header) are typically not propgated by browsers\n    // during 30X HTTP redirection.\n    var headerId = /** @type {?string} */ (spfConfig.get(\n      'advanced-header-identifier'\n    ))\n    if (headerId) {\n      headers['X-SPF-Request'] = headerId.replace('__type__', options.type)\n      headers['Accept'] = 'application/json'\n    }\n    var chunking = new spfNavRequest.Chunking_()\n    var handleHeaders = spfBase.bind(\n      spfNavRequest.handleHeadersFromXHR_,\n      null,\n      url,\n      chunking\n    )\n    var handleChunk = spfBase.bind(\n      spfNavRequest.handleChunkFromXHR_,\n      null,\n      url,\n      options,\n      timing,\n      chunking\n    )\n    var handleComplete = spfBase.bind(\n      spfNavRequest.handleCompleteFromXHR_,\n      null,\n      url,\n      options,\n      timing,\n      chunking\n    )\n    var xhrOpts = {\n      headers: headers,\n      timeoutMs: /** @type {number} */ (spfConfig.get('request-timeout')),\n      onHeaders: handleHeaders,\n      onChunk: handleChunk,\n      onDone: handleComplete,\n      onTimeout: handleComplete\n    }\n\n    if (options.withCredentials) {\n      xhrOpts.withCredentials = options.withCredentials\n    }\n\n    // As an advanced option, allow XHR requests to enforce JSON responses.\n    // This can make response parsing more efficient by reducing contention on\n    // the main thread (especially for very large responses), but as a\n    // side-effect, it removes the ability to parse chunked multipart responses\n    // on-the-fly.\n    if (spfConfig.get('advanced-response-type-json')) {\n      xhrOpts.responseType = 'json'\n    }\n    var xhr\n    if (options.method == 'POST') {\n      xhr = spfNetXhr.post(requestUrl, options.postData, xhrOpts)\n    } else {\n      xhr = spfNetXhr.get(requestUrl, xhrOpts)\n    }\n    // Return the XHR being made.\n    return xhr\n  }\n}\n\n/**\n * Handles a cached response.\n * See {@link #send}.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNavRequest.Options} options Configuration options\n * @param {Object} timing Timing data.\n * @param {string} cacheKey The cache key.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The cached SPF\n *     response object.\n * @private\n */\nspfNavRequest.handleResponseFromCache_ = function(\n  url,\n  options,\n  timing,\n  cacheKey,\n  response\n) {\n  spfDebug.debug('nav.request.handleResponseFromCache_ ', url, response)\n  var updateCache = false\n  // Record the timing information.\n  // Record responseStart and responseEnd times after loading from cache.\n  timing['responseStart'] = timing['responseEnd'] = spfBase.now()\n  // Also record navigationStart for navigate requests, consistent with\n  // W3C PerformanceTiming for page loads.\n  if (options.type && spfString.startsWith(options.type, 'navigate')) {\n    timing['navigationStart'] = timing['startTime']\n    // If this cached response was a navigate and a unified cache is not being\n    // used, then it was from prefetch-based caching and is only eligible to\n    // be used once.\n    if (!spfConfig.get('cache-unified')) {\n      spfCache.remove(cacheKey)\n      // Ensure the response will be stored in the history-based caching.\n      updateCache = true\n    }\n  }\n  if (options.onPart && response['type'] == 'multipart') {\n    var parts = response['parts']\n    spfArray.each(parts, function(part) {\n      if (!part['timing']) {\n        part['timing'] = {}\n      }\n      part['timing']['spfCached'] = !!timing['spfCached']\n      part['timing']['spfPrefetched'] = !!timing['spfPrefetched']\n      options.onPart(url, part)\n    })\n  }\n  spfNavRequest.done_(url, options, timing, response, updateCache)\n}\n\n/**\n * Handles received headers from an XHR.\n * See {@link #send}.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNavRequest.Chunking_} chunking Chunking data.\n * @param {XMLHttpRequest} xhr The XHR of the current request.\n * @private\n */\nspfNavRequest.handleHeadersFromXHR_ = function(url, chunking, xhr) {\n  spfDebug.debug('nav.request.handleHeadersFromXHR_ ', url, xhr)\n  var responseType = xhr.getResponseHeader('X-SPF-Response-Type') || ''\n  var multipart = spfString.contains(responseType.toLowerCase(), 'multipart')\n  spfDebug.debug('    response is', (multipart ? '' : 'non-') + 'multipart')\n  chunking.multipart = multipart\n}\n\n/**\n * Handles a request chunk from an XHR as it arrives.\n * See {@link #send}.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNavRequest.Options} options Configuration options\n * @param {Object} timing Timing data.\n * @param {spfNavRequest.Chunking_} chunking Chunking data.\n * @param {XMLHttpRequest} xhr The XHR of the current request.\n * @param {string} chunk The current request chunk.\n * @param {boolean=} opt_lastDitch Whether to parse the chunk as the final\n *     one, potentially handling malformed but valid responses.\n * @private\n */\nspfNavRequest.handleChunkFromXHR_ = function(\n  url,\n  options,\n  timing,\n  chunking,\n  xhr,\n  chunk,\n  opt_lastDitch\n) {\n  spfDebug.debug('nav.request.handleChunkFromXHR_ ', url, {\n    extra: chunking.extra,\n    chunk: chunk\n  })\n  // Processing chunks as they arrive requires multipart responses.\n  if (!chunking.multipart) {\n    spfDebug.debug('    skipping non-multipart response')\n    return\n  }\n  var text = chunking.extra + chunk\n  var parsed\n  try {\n    parsed = spfNavResponse.parse(text, true, opt_lastDitch)\n  } catch (err) {\n    spfDebug.debug('    JSON parse failed', text)\n    xhr.abort()\n    if (options.onError) {\n      options.onError(url, err, xhr)\n    }\n    return\n  }\n  if (options.onPart) {\n    spfArray.each(parsed.parts, function(part) {\n      spfDebug.debug('    parsed part', part)\n      if (!part['timing']) {\n        part['timing'] = {}\n      }\n      part['timing']['spfCached'] = !!timing['spfCached']\n      part['timing']['spfPrefetched'] = !!timing['spfPrefetched']\n      options.onPart(url, part)\n    })\n  }\n  chunking.complete = chunking.complete.concat(parsed.parts)\n  chunking.extra = parsed.extra\n}\n\n/**\n * Handles a request from an XHR.  Called for both chunked and regular requests.\n * See {@link #send}.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNavRequest.Options} options Configuration options\n * @param {Object} timing Timing data.\n * @param {spfNavRequest.Chunking_} chunking Chunking data.\n * @param {XMLHttpRequest} xhr The XHR of the current request.\n * @private\n */\nspfNavRequest.handleCompleteFromXHR_ = function(\n  url,\n  options,\n  timing,\n  chunking,\n  xhr\n) {\n  if (xhr.responseType == 'json') {\n    spfDebug.debug('nav.request.handleCompleteFromXHR_ ', url, xhr.response)\n  } else {\n    spfDebug.debug('nav.request.handleCompleteFromXHR_ ', url, {\n      extra: chunking.extra,\n      complete: xhr.responseText\n    })\n  }\n\n  // Record the timing information from the XHR.\n  if (xhr['timing']) {\n    for (var t in xhr['timing']) {\n      timing[t] = xhr['timing'][t]\n    }\n  }\n\n  // Record timings from Resource Timing API.\n  if (xhr['resourceTiming']) {\n    if (options.type == 'load') {\n      // Record relative timings.\n      for (var key in xhr['resourceTiming']) {\n        timing[key] = xhr['resourceTiming'][key]\n      }\n    } else if (window.performance && window.performance.timing) {\n      // Normalize relative Resource Timing values as\n      // Navigation Timing absolute values using navigationStart as base.\n      var navigationStart = window.performance.timing.navigationStart\n\n      // Use resource timing data (RT) only if RT.startTime is later than\n      // the one provided by SPF when request was initiated.\n      // This is specifically affecting Chrome 40+. See http://crbug.com/375388\n      var startTime = navigationStart + xhr['resourceTiming']['startTime']\n      if (startTime >= timing['startTime']) {\n        for (var metric in xhr['resourceTiming']) {\n          var value = xhr['resourceTiming'][metric]\n          if (\n            value !== undefined &&\n            (spfString.endsWith(metric, 'Start') ||\n              spfString.endsWith(metric, 'End') ||\n              metric == 'startTime')\n          ) {\n            timing[metric] = navigationStart + Math.round(value)\n          }\n        }\n      }\n    }\n  }\n\n  // Also record navigationStart for all requests but load type, consistent with\n  // W3C PerformanceTiming for page loads.\n  if (options.type != 'load') {\n    timing['navigationStart'] = timing['startTime']\n  }\n\n  if (chunking.complete.length) {\n    // If a multipart response was parsed on-the-fly via chunking, it should be\n    // done.  However, check to see if there is any extra content, which could\n    // occur if the server failed to end a reponse with a token.\n    chunking.extra = spfString.trim(chunking.extra)\n    if (chunking.extra) {\n      // If extra content exists, parse it as a last-ditch effort.\n      spfNavRequest.handleChunkFromXHR_(\n        url,\n        options,\n        timing,\n        chunking,\n        xhr,\n        '',\n        true\n      )\n    }\n  }\n\n  var parts\n  if (xhr.responseType == 'json') {\n    // If using the JSON `responseType`, parsing is complete and no chunking\n    // has been handled on-the-fly.\n    if (!xhr.response) {\n      spfDebug.debug('    JSON parse failed')\n      if (options.onError) {\n        options.onError(url, new Error('JSON response parsing failed'), xhr)\n      }\n      return\n    }\n    parts = spfNavResponse.extract(spfArray.toArray(xhr.response))\n  } else {\n    // Otherwise, parsing may need to be done.  Always attempt a full parse with\n    // error handling. A multipart response parsed on-the-fly via chunking may\n    // be invalid JSON if the response is truncated early.  (If truncated just\n    // after a token, the chunking.extra value will be empty and no additional\n    // chunk parsing will be done, but the overall response will stil be\n    // invalid.)\n    try {\n      var parsed = spfNavResponse.parse(xhr.responseText)\n      parts = parsed.parts\n    } catch (err) {\n      spfDebug.debug('    JSON parse failed')\n      if (options.onError) {\n        options.onError(url, err, xhr)\n      }\n      return\n    }\n  }\n\n  if (options.onPart && parts.length > 1) {\n    // Only execute callbacks for parts that have not already been processed.\n    // In case there is an edge case where some parts were parsed on-the-fly\n    // but the entire response needed a full parse here, start iteration where\n    // the chunk processing left off.  This is mostly a safety measure and\n    // the number of chunks processed here should be 0.\n    for (var i = chunking.complete.length; i < parts.length; i++) {\n      spfDebug.debug('    parsed part', parts[i])\n      var part = parts[i]\n      if (!part['timing']) {\n        part['timing'] = {}\n      }\n      part['timing']['spfCached'] = !!timing['spfCached']\n      part['timing']['spfPrefetched'] = !!timing['spfPrefetched']\n      options.onPart(url, part)\n    }\n  }\n  var response\n  if (parts.length > 1) {\n    var cacheType\n    spfArray.each(parts, function(part) {\n      if (part['cacheType']) {\n        cacheType = part['cacheType']\n      }\n    })\n    response = /** @type {spfBase.MultipartResponse} */ ({\n      parts: parts,\n      type: 'multipart'\n    })\n    if (cacheType) {\n      response['cacheType'] = cacheType\n    }\n  } else if (parts.length == 1) {\n    response = /** @type {spfBase.SingleResponse} */ (parts[0])\n  } else {\n    response = /** @type {spfBase.SingleResponse} */ ({})\n  }\n  spfNavRequest.done_(url, options, timing, response, true)\n}\n\n/**\n * Finishes a request.\n * See {@link #send}.\n *\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {spfNavRequest.Options} options Configuration options.\n * @param {Object} timing Timing data.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The received SPF\n *   response object.\n * @param {boolean} cache Whether to store the response in the cache.\n * @private\n */\nspfNavRequest.done_ = function(url, options, timing, response, cache) {\n  spfDebug.debug('nav.request.done_', url, options, timing, response, cache)\n  if (cache && options.method != 'POST') {\n    // Cache the response for future requests.\n    var cacheKey = spfNavRequest.getCacheKey_(\n      url,\n      options.current,\n      response['cacheType'],\n      options.type,\n      true\n    )\n    if (cacheKey) {\n      response['cacheKey'] = cacheKey\n      spfNavRequest.setCacheObject_(cacheKey, response, options.type || '')\n    }\n  }\n  // Set the timing for the response (avoid caching stale timing values).\n  response['timing'] = timing\n  if (options.onSuccess) {\n    options.onSuccess(url, response)\n  }\n}\n\n/**\n * @param {string} url The requested URL, without the SPF identifier.\n * @param {string|null|undefined} opt_current The current page's URL. Some\n *     responses are only cacheable for limited origin URLs.\n * @param {string|null|undefined} opt_cacheType The type of cache used for\n *     this request (e.g. \"global\", \"path\", \"url\").\n * @param {string=} opt_requestType Type of request (e.g. \"navigate\", \"load\",\n *     etc).\n * @param {boolean=} opt_set Whether getting or setting the cache.\n * @return {string} The cache key for the URL.\n * @private\n */\nspfNavRequest.getCacheKey_ = function(\n  url,\n  opt_current,\n  opt_cacheType,\n  opt_requestType,\n  opt_set\n) {\n  // Use the absolute URL without identifier to ensure consistent caching.\n  var absoluteUrl = spfUrl.absolute(url)\n  var cacheKey\n  if (spfConfig.get('cache-unified')) {\n    // If using a unified cache, the key is just the URL to allow cached\n    // responses from prefetching to apply to navigation, etc.  This also\n    // means that load requests are cached unless they are sent via POST.\n    cacheKey = absoluteUrl\n  } else {\n    // Otherwise, caching is split between history and prefetching by using\n    // a key prefix.  Regular non-history navigation is only eligible for\n    // prefetch-based caching.\n    if (\n      opt_requestType == 'navigate-back' ||\n      opt_requestType == 'navigate-forward'\n    ) {\n      // For back/forward, get and set to history cache.\n      cacheKey = 'history ' + absoluteUrl\n    } else if (opt_requestType == 'navigate') {\n      // For navigation, get from prefetch cache, but set to history cache.\n      cacheKey = (opt_set ? 'history ' : 'prefetch ') + absoluteUrl\n    } else if (opt_requestType == 'prefetch') {\n      // For prefetching, never get, only set to prefetch cache.\n      cacheKey = opt_set ? 'prefetch ' + absoluteUrl : ''\n    }\n  }\n\n  if (opt_current && opt_cacheType == 'url') {\n    cacheKey += ' previous ' + opt_current\n  } else if (opt_current && opt_cacheType == 'path') {\n    cacheKey += ' previous ' + spfUrl.path(opt_current)\n  }\n\n  return cacheKey || ''\n}\n\n/**\n * Get an object from cache if available.\n *\n * @param {string} cacheKey The base cache key for the requested URL.\n * @param {string|null|undefined} opt_current The current page's URL. Some\n *     responses are only cacheable for limited origin URLs.\n * @return {Object.<string, *>} The response object if found in the cache.\n * @private\n */\nspfNavRequest.getCacheObject_ = function(cacheKey, opt_current) {\n  var keys = []\n  if (opt_current) {\n    keys.push(cacheKey + ' previous ' + opt_current)\n    keys.push(cacheKey + ' previous ' + spfUrl.path(opt_current))\n  }\n  keys.push(cacheKey)\n\n  var cacheValue = null\n\n  // Find the first cached object and break loop early when found.\n  spfArray.some(keys, function(key) {\n    var obj = spfCache.get(key)\n    if (obj) {\n      cacheValue = {\n        key: key,\n        response: obj['response'],\n        type: obj['type']\n      }\n    }\n    return !!obj\n  })\n\n  return cacheValue\n}\n\n/**\n * Set a response object into cache with the given key.\n *\n * @param {string} cacheKey The base cache key for the requested URL.\n * @param {spfBase.SingleResponse|spfBase.MultipartResponse} response The received SPF\n *     response object.\n * @param {string} type The type of request this cache entry was set with.\n * @private\n */\nspfNavRequest.setCacheObject_ = function(cacheKey, response, type) {\n  var cacheValue = {\n    response: response,\n    type: type\n  }\n  spfCache.set(\n    cacheKey,\n    cacheValue,\n    /** @type {number} */ (spfConfig.get('cache-lifetime'))\n  )\n}\n\n/**\n * Container for holding data to track chunking for an SPF request.\n *\n * @constructor\n * @struct\n * @private\n */\nspfNavRequest.Chunking_ = function() {\n  /**\n   * Whether the request is multipart.\n   * @type {boolean}\n   */\n  this.multipart = false\n  /**\n   * Any extra text from a previous chunk that was not successfully\n   * parsed on its own, usually due to an incomplete part split across\n   * chunk boundaries; combined with the text of a current chunk to complete.\n   * @type {string}\n   */\n  this.extra = ''\n  /**\n   * Complete parts that have been successfully parsed.\n   * @type {!Array}\n   */\n  this.complete = []\n}\n\nexport default spfNavRequest\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/nav/request.js","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Functions for handling connections (i.e. pre-resolving DNS\n * and establishing the TCP AND TLS handshake).\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\nimport spfArray from '../array/array'\nimport spfNetResource from '../net/resource'\n\nlet spfNetConnect = {}\n// goog.provide('spfNetConnect');\n\n/**\n * Preconnects to a URL.\n * Use to both resolve DNS and establish connections before requests are made.\n *\n * @param {string|Array.<string>} urls One or more URLs to preconnect.\n */\nspfNetConnect.preconnect = function (urls) {\n  // Use an <img> tag to handle the preconnect in a compatible manner.\n  var type = spfNetResource.Type.IMG\n  // Convert to an array if needed.\n  urls = spfArray.toArray(urls)\n  spfArray.each(urls, function (url) {\n    // When preconnecting, always fetch the image and make the request.\n    // This is necessary to consistenly establish connections to repeat\n    // URLs when the keep-alive time is shorter than the interval between\n    // attempts.\n    spfNetResource.prefetch(type, url, true)  // Force repeat fetching.\n  })\n}\n\nexport default spfNetConnect\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/net/connect.js","// Copyright 2012 Google Inc. All rights reserved.\n//\n// Use of this source code is governed by The MIT License.\n// See the LICENSE file for details.\n\n/**\n * @fileoverview Streamlined XMLHttpRequest handling functions.\n *\n * @author nicksay@google.com (Alex Nicksay)\n */\n\n// goog.provide('spfNetXhr');\n\nimport { spfBase } from '../base'\nlet spfNetXhr = {}\n\n// goog.require('spf');\n\n/**\n * Type definition for the configuration options for an XMLHttpRequest.\n * - headers: map of header key/value pairs.\n * - onChunk: optional callback to execute as chunks of the XHR response\n *      are received.  Only called if a valid \"Transfer-Encoding: chunked\"\n *      header is received.  Each execution of the callback will pass the\n *      current chunk in addition to the XHR object.\n * - onDone: optional callback to execute once the XHR response has been\n *      been completely received .\n * - onHeaders: optional callback to execute once the XHR response headers\n *      have been received.\n * - onTimeout: optional callback to execute if the XHR times out.  Only called\n *      if a timeout is configured.\n * - responseType: type to create from the XHR response.\n * - timeoutMs: number of milliseconds after which the request will be timed\n *      out by the client. Default is to allow the browser to handle timeouts.\n * - withCredentials: optional flag to send credentials if true.\n *\n * @typedef {{\n *   headers: (Object.<string>|undefined),\n *   onChunk: (function(XMLHttpRequest, string)|undefined),\n *   onDone: (function(XMLHttpRequest)|undefined),\n *   onHeaders: (function(XMLHttpRequest)|undefined),\n *   onTimeout: (function(XMLHttpRequest)|undefined),\n *   responseType: (string|undefined),\n *   timeoutMs: (number|undefined),\n *   withCredentials: (boolean|undefined)\n * }}\n */\nspfNetXhr.Options\n\n/**\n * Type definition for POST data.\n * @typedef {(ArrayBuffer|Blob|Document|FormData|null|string|undefined)}\n */\nspfNetXhr.PostData\n\n/**\n * Sends an XMLHttpRequest object as asynchronous GET request.\n *\n * @param {string} url The URL to send the XHR to.\n * @param {spfNetXhr.Options=} opt_options Configuration options for the XHR.\n * @return {XMLHttpRequest} The XHR object being sent.\n */\nspfNetXhr.get = function(url, opt_options) {\n  return spfNetXhr.send('GET', url, null, opt_options)\n}\n\n/**\n * Sends an XMLHttpRequest object as asynchronous POST request.\n *\n * @param {string} url The URL to send the XHR to.\n * @param {spfNetXhr.PostData} data The data to send with the XHR.\n * @param {spfNetXhr.Options=} opt_options Configuration options for the XHR.\n * @return {XMLHttpRequest} The XHR object being sent.\n */\nspfNetXhr.post = function(url, data, opt_options) {\n  return spfNetXhr.send('POST', url, data, opt_options)\n}\n\n/**\n * Sends an XMLHttpRequest object.\n *\n * @param {string} method The HTTP method for the XHR.\n * @param {string} url The URL to send the XHR to.\n * @param {spfNetXhr.PostData} data The data to send with the XHR.\n * @param {spfNetXhr.Options=} opt_options Configuration options for the XHR.\n * @return {XMLHttpRequest} The XHR object being sent.\n */\nspfNetXhr.send = function(method, url, data, opt_options) {\n  var options = opt_options || {}\n  var chunked = false\n  var offset = 0\n  var timer\n\n  var xhr = new XMLHttpRequest()\n  xhr.open(method, url, true)\n  xhr['timing'] = {}\n\n  // Overload the abort method to handle the timer.\n  var xhr_abort = xhr.abort\n  xhr.abort = function() {\n    clearTimeout(timer)\n    xhr.onreadystatechange = null\n    xhr_abort.call(xhr)\n  }\n\n  xhr.onreadystatechange = function() {\n    var timing = xhr['timing']\n    if (xhr.readyState == spfNetXhr.State.HEADERS_RECEIVED) {\n      // Record responseStart time when first byte is received.\n      timing['responseStart'] = timing['responseStart'] || spfBase.now()\n      // Determine whether to process chunks as they arrive.\n      chunked = spfNetXhr.isChunked_(xhr)\n      if (options.onHeaders) {\n        options.onHeaders(xhr)\n      }\n    } else if (xhr.readyState == spfNetXhr.State.LOADING) {\n      if (chunked && options.onChunk) {\n        var chunk = xhr.responseText.substring(offset)\n        offset = xhr.responseText.length\n        options.onChunk(xhr, chunk)\n      }\n    } else if (xhr.readyState == spfNetXhr.State.DONE) {\n      // Record responseEnd time when full response is received.\n      timing['responseEnd'] = timing['responseEnd'] || spfBase.now()\n      // Record Resource Timing relative timings (where available) to later be\n      // converted into Navigation Timing absolute timings.\n      if (window.performance && window.performance.getEntriesByName) {\n        // Get always the latest entry available just in case old entries were\n        // not cleared out by performance.clearResourceTimings.\n        xhr['resourceTiming'] = window.performance.getEntriesByName(url).pop()\n      }\n      // If processing chunks as they arrive and the state was transitioned\n      // at response end to DONE without a LOADING, process the final chunk now.\n      if (chunked && options.onChunk && xhr.responseText.length > offset) {\n        var chunk = xhr.responseText.substring(offset)\n        offset = xhr.responseText.length\n        options.onChunk(xhr, chunk)\n      }\n      clearTimeout(timer)\n      if (options.onDone) {\n        options.onDone(xhr)\n      }\n    }\n  }\n\n  // If requested, attempt to use the JSON `responseType` to optimize parsing.\n  // If the browser supports `responseType` but not the `\"json\"` type, then\n  // the property will remain unset.\n  // NOTE: This removes the ability to handle chunked responses on the fly.\n  if ('responseType' in xhr && options.responseType == 'json') {\n    xhr.responseType = 'json'\n  }\n\n  if (options.withCredentials) {\n    xhr.withCredentials = options.withCredentials\n  }\n\n  // For POST, default to `Content-Type: application/x-www-form-urlencoded`\n  // unless a custom header was given.\n  var isFormData = 'FormData' in window && data instanceof FormData\n  var addContentTypeFormUrlEncoded = method == 'POST' && !isFormData\n  if (options.headers) {\n    for (var key in options.headers) {\n      xhr.setRequestHeader(key, options.headers[key])\n      if (key.toLowerCase() == 'content-type') {\n        addContentTypeFormUrlEncoded = false\n      }\n    }\n  }\n  if (addContentTypeFormUrlEncoded) {\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n  }\n\n  // Set the timer if a timeout value was specified.\n  if (options.timeoutMs > 0) {\n    timer = setTimeout(function() {\n      xhr.abort()\n      if (options.onTimeout) {\n        options.onTimeout(xhr)\n      }\n    }, options.timeoutMs)\n  }\n\n  // Record fetchStart time when request is sent.\n  xhr['timing']['fetchStart'] = spfBase.now()\n  xhr.send(data)\n\n  return xhr\n}\n\n/**\n * Determines whether to process chunks as they arrive; should be called when\n * the XHR headers are received.  See {@link #send}.\n *\n * @param {XMLHttpRequest} xhr The XHR object being sent.\n * @return {boolean}\n * @private\n */\nspfNetXhr.isChunked_ = function(xhr) {\n  if (xhr.responseType == 'json') {\n    return false\n  }\n  // Determine whether to process chunks as they arrive.\n  // This is only possible with chunked transfer encoding.\n  // Note: handle Transfer-Encoding header values like:\n  //   \"chunked\"  (standard)\n  //   \"Chunked\"  (non-standard)\n  //   \"chunked, chunked\"  (multiple headers sent)\n  var encoding = xhr.getResponseHeader('Transfer-Encoding') || ''\n  if (encoding.toLowerCase().indexOf('chunked') > -1) {\n    return true\n  }\n  // SPDY inherently uses chunked transfer and does not define a header.\n  // Firefox provides a synthetic header which can be used instead.\n  // For Chrome, a non-standard JS function must be used to determine if\n  // the primary document was loaded with SPDY.  If the primary document\n  // was loaded with SPDY, then most likely the XHR will be as well.\n  var firefoxSpdy = xhr.getResponseHeader('X-Firefox-Spdy')\n  var loadTimes = window.chrome && chrome.loadTimes && chrome.loadTimes()\n  var chromeSpdy = loadTimes && loadTimes.wasFetchedViaSpdy\n  return !!(firefoxSpdy || chromeSpdy)\n}\n\n/**\n * @enum {number}\n */\nspfNetXhr.State = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\nexport default spfNetXhr\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/packs/spf/net/xhr.js","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/array/from.js\n// module id = 174\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/toConsumableArray.js\n// module id = 180\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/array/from.js\n// module id = 185\n// module chunks = 0","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_create-property.js\n// module id = 190\n// module chunks = 0","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.from.js\n// module id = 197\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 205\n// module chunks = 0"],"sourceRoot":""}